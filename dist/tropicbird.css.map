{"mappings":"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,YAAA;ECZF,eAAA;EDwBA,qDAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,kFAAA;A;AO8RF;EP1SI,cAAA;ECZF,eAAA;EDwBA,iFAAA;A;AOiTF;EP7TI,0BAAA;ECZF,eAAA;EDwBA,4EAAA;A;AO+gBA;EP3hBE,mBAAA;ECZF,eAAA;EDwBA,+DAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,4DAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,mGAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,+DAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,+DAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,iEAAA;A;Ae2PA;Ef3PA,iFAAA;A;AO2ZF;EPvaI,kBAAA;ECZF,eAAA;EDwBA,kFAAA;A;AcrBF;EdSI,+BAAA;ECZF,eAAA;EDwBA,sJAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,qGAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,yHAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,sGAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,qHAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,uDAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,oFAAA;A;AOyKF;EPrLI,yBAAA;ECZF,eAAA;EDwBA,6FAAA;A;AOqMF;EPjNI,qCAAA;ECZF,eAAA;EDwBA,wFAAA;A;AO8RF;EP1SI,WAAA;ECZF,eAAA;EDwBA,mFAAA;A;AOiTF;EP7TI,0BAAA;ECZF,eAAA;EDwBA,8EAAA;A;AO+gBA;EP3hBE,mBAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,8DAAA;A;Ae4EA;;EfxFE,sBAAA;ECZF,eAAA;EDwBA,qGAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,iEAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,iEAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,mEAAA;A;Ae2PA;Ef3PA,mFAAA;A;AO2ZF;EPvaI,kBAAA;ECZF,eAAA;EDwBA,oFAAA;A;AcfF;EdGI,+BAAA;ECZF,eAAA;EDwBA,yJAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,wGAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,4HAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yGAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,wHAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,uFAAA;EAZE,yHAAA;ECZF,eAAA;EDwBA,oGAAA;EAAA,iJAAA;A;AOyKF;EPrLI,yBAAA;ECZF,eAAA;EDwBA,gGAAA;A;AOqMF;EPjNI,qCAAA;ECZF,eAAA;EDwBA,2FAAA;A;AO8RF;EP1SI,WAAA;ECZF,eAAA;EDwBA,sFAAA;A;AOiTF;EP7TI,0BAAA;ECZF,eAAA;EDwBA,iFAAA;A;AO+gBA;EP3hBE,mBAAA;ECZF,eAAA;EDwBA,oEAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,gEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,iEAAA;A;Ae4EA;;EfxFE,sBAAA;ECZF,eAAA;EDwBA,wGAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,oEAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,oEAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,sEAAA;A;Ae2PA;Ef3PA,sFAAA;A;AO2ZF;EPvaI,kBAAA;ECZF,eAAA;EDwBA,uFAAA;A;Ae+ZF;Ef3aI,0HAAA;ECZF,eAAA;EDwBA,0GAAA;EAAA,kJAAA;A;AOinBE;EP7nBA,0HAAA;ECZF,eAAA;EDwBA,0GAAA;EAAA,kJAAA;A;AesaF;EflbI,2HAAA;ECZF,eAAA;EDwBA,4GAAA;EAAA,mJAAA;A;AOyoBE;EPrpBA,wHAAA;ECZF,eAAA;EDwBA,6GAAA;EAAA,gJAAA;A;AcTF;EdHI,+BAAA;ECZF,eAAA;EDwBA,wJAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,uGAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,2HAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,wGAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,uHAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,sFAAA;EOqbA,sBAAA;EPjcE,iBAAA;ECZF,eAAA;EDwBA,2DAAA;A;AO8RF;EP1SI,cAAA;ECZF,eAAA;EDwBA,qFAAA;A;AOiTF;EP7TI,0BAAA;ECZF,eAAA;EDwBA,gFAAA;A;AO+gBA;EP3hBE,mBAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,+DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,gEAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,uGAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,mEAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,mEAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,qEAAA;A;Ae2PA;Ef3PA,qFAAA;A;AO2ZF;EPvaI,kBAAA;ECZF,eAAA;EDwBA,sFAAA;A;AgBkEF;EhB9EI,iCAAA;ECZF,eAAA;EDwBA,2EAAA;A;AgBgGF;EhB5GI,iCAAA;ECZF,eAAA;EDwBA,oFAAA;A;AOybA;EAII,sBAAA;A;AAIJ;EAII,sBAAA;A;AShTJ;EhBjKE,mBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,2DAAA;A;AgBoKA;EhBhLE,oBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,2BAAA;ECZF,eAAA;EDwBA,qEAAA;A;Ac0CA;;;Eb7DA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AUyCJ;;;EbpEA,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;Aa3BN;EjBOI,kBAAA;ECZF,eAAA;EDwBA,2CAAA;EAZE,sBAAA;ECZF,eAAA;EDwBA,gDAAA;EGsOA,eAAA;EACA,kBAAA;EAdE,eAAA;EACA,yHAAA;Ec0GJ,aAAA;EACA,sBAAA;EACA,sBAAA;A;Ad5EA;EH1PE,WAAA;EAAA,YAAA;EGgQI,MAAA;EFnRJ,YAAA;EAAc,aAAA;EEqRV,OAAA;A;AczQJ;EjBLE,kBAAA;ECZF,eAAA;EDwBA,2CAAA;EkBxCA,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,MAAA;EACA,OAAA;EACA,6BAAA;EACA,sBAAA;EACA,WAAA;EACA,oBAAA;ED4BI,oBAAA;A;AAKN;EduNI,eAAA;EACA,wHAAA;EcyEF,iBAAA;EACA,mBAAA;EAIA,qBAAA;A;AAhSA;EAEI,YAAA;A;AAKN;EAEI,sBAAA;EACA,YAAA;A;AAQJ;EAEI,kBAAA;EACA,sBAAA;EACA,4BAAA;EACA,2BAAA;EACA,sBAAA;A;AAGF;EAEI,cAAA;EACA,WAAA;A;AAKN;EAEI,+BAAA;EACA,gCAAA;A;AAIJ;EAEI,kCAAA;EACA,mCAAA;A;AAkQJ;EAGI,gBAAA;A;AAHJ;EAGI,kBAAA;A;AAzPJ;EAEI,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,sBAAA;A;AAQJ;EAoPA,aAAA;EACA,sBAAA;EACA,sBAAA;EAlPI,kBAAA;EACA,aAAA;EACA,cAAA;EACA,qBAAA;EACA,eAAA;EACA,gBAAA;A;AAIJ;EAEI,+BAAA;EACA,gCAAA;A;AAIJ;EAEI,kCAAA;EACA,mCAAA;A;AAQJ;EA2NA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,sBAAA;EA1NI,gBAAA;EACA,YAAA;A;AAIJ;EAEI,UAAA;A;AAIJ;;EA4MA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,sBAAA;A;AAxMA;EjBrIE,yBAAA;EiB2IE,YAAA;EACA,yBAAA;A;AAIJ;EhBnKE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AakJN;EAgLA,oBAAA;EACA,mBAAA;EACA,mBAAA;EACA,sBAAA;EA/KI,uBAAA;EACA,eAAA;EACA,iBAAA;A;AAGF;EAEI,aAAA;A;AASN;EhBjME,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EiBkLE,cAAA;A;Ab7KA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;Aa6KJ;EhBxMA,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AaoLN;EAEI,8BAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;EACA,SAAA;EACA,iBAAA;EhBtNF,YAAA;EAAc,aAAA;EgBwNZ,gBAAA;A;AbhMA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EgB8NV,iBAAA;EbnMA,iBAAA;A;Aa4MN;EAII,cAAA;EAGA,aAAA;A;AAIJ;EjB/NE,yBAAA;A;AiB8OF;EN1ME,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AAcN;;EAGI,qBAAA;EV1KF,YAAA;EAAc,aAAA;EU4KZ,sBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;EAEI,sCAAA;EACA,uCAAA;A;AIvFJ;EfxFE,sBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;AiByPA;EAEI,uBAAA;EACA,YAAA;EACA,gBAAA;EACA,OAAA;EACA,oBAAA;EACA,kBAAA;EACA,MAAA;EACA,WAAA;A;AAKF;EC/SF,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,MAAA;EACA,OAAA;EACA,8BAAA;EACA,sBAAA;EACA,WAAA;EACA,oBAAA;A;AEiKF;EpB9II,gCAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,+BAAA;ECZF,eAAA;EDwBA,sEAAA;A;Ae4EA;EfxFE,sBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae4EA;EfxFE,yBAAA;ECZF,eAAA;EDwBA,8EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,8EAAA;A;AqBoQF;ErBhRI,4BAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,6BAAA;ECZF,eAAA;EDwBA,8DAAA;A;AqB4SE;ErBxTA,4BAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,6BAAA;ECZF,eAAA;EDwBA,oEAAA;EAZE,WAAA;ECZF,eAAA;EDwBA,kDAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,mDAAA;A;AqB6pBF;ErBzqBI,iCAAA;ECZF,eAAA;EDwBA,sEAAA;EAAA,6BAAA;A;AqB6pBF;;;ErBzqBI,qBAAA;ECZF,eAAA;EDwBA,oFAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,wFAAA;A;AqBosBF;EACE;IrBjtBE,iCAAA;ICZF,eAAA;IDwBA,sEAAA;IAAA,6BAAA;E;EqB0sBA;IrBttBE,qBAAA;ICZF,eAAA;IDwBA,oFAAA;IAZE,yBAAA;ICZF,eAAA;IDwBA,wFAAA;E;A;AqBgtBF;EACE;IrB7tBE,qBAAA;ICZF,eAAA;IDwBA,oFAAA;IAZE,yBAAA;ICZF,eAAA;IDwBA,wFAAA;E;EqButBA;IrBnuBE,iCAAA;ICZF,eAAA;IDwBA,sEAAA;IAAA,6BAAA;E;A;AqBwaI;EAEI,gFAAA;A;AAOJ;EAEI,iFAAA;A;AA0OV;ErBzqBI,iCAAA;ECZF,eAAA;EDwBA,qEAAA;EAAA,6BAAA;A;AqB6pBF;;;ErB7pBE,yBAAA;EAZE,qCAAA;ECZF,eAAA;EDwBA,yEAAA;A;AqB+qBA;ErB3rBE,WAAA;ECZF,eAAA;EDwBA,0CAAA;A;AqBqrBA;ErBjsBE,kBAAA;ECZF,eAAA;EDwBA,iDAAA;A;AqB+qBA;ErB3rBE,WAAA;ECZF,eAAA;EDwBA,0CAAA;A;AqBqrBA;ErBjsBE,kBAAA;ECZF,eAAA;EDwBA,iDAAA;A;AoBgdF;EACE;IAEE,6BAAA;E;EAGF;IACE,qDAAA;E;EAGF;IACE,oBAAA;E;A;AAIJ;EACE;IAEE,oBAAA;E;EAGF;IACE,mDAAA;E;EAGF;IACE,oBAAA;E;A;AAIJ;EACE;IACE,qDAAA;IACA,UAAA;IACA,oBAAA;E;EAGF;IACE,UAAA;IACA,8BAAA;E;A;AAIJ;EACE;IACE,qDAAA;IACA,uBAAA;IACA,UAAA;E;EAGF;IACE,wBAAA;IACA,UAAA;E;A;AAIJ;EACE;IACE,sDAAA;IACA,wBAAA;IACA,UAAA;E;EAGF;IACE,yBAAA;IACA,UAAA;E;A;AAIJ;EACE;IACE,2EAAA;IACA,yBAAA;IACA,UAAA;E;EAGF;IACE,uBAAA;IACA,UAAA;E;A;AAIJ;EACE;IACE,sDAAA;IACA,uBAAA;IACA,UAAA;E;EAGF;IACE,yBAAA;IACA,UAAA;E;A;AAIJ;EACE;IACE,iCAAA;IACA,oBAAA;IACA,UAAA;E;EAGF;IAEE,oBAAA;IACA,UAAA;E;A;AA7jBJ;EA4KA,qBAAA;EACA,kBAAA;EACA,cAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,cAAA;EACA,mBAAA;EACA,eAAA;EACA,sBAAA;A;AFpKE;EGgpBF;IrBzqBI,sBAAA;ICZF,eAAA;IDwBA,0DAAA;IAAA,6BAAA;E;;EqB6pBF;;;IrB7pBE,sBAAA;IAZE,6BAAA;ICZF,eAAA;IDwBA,iEAAA;E;;EqB+qBA;IrB3rBE,eAAA;ICZF,eAAA;IDwBA,8CAAA;E;EqBqrBA;IrBjsBE,sBAAA;ICZF,eAAA;IDwBA,qDAAA;E;;EoBYA;IAEI,aAAA;E;A;AAMN;EAiKA,eAAA;EACA,oBAAA;A;AA5JA;EA6PE,oBAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EAEA,8BAAA;EACA,kBAAA;EACA,6BAAA;EACA,oBAAA;EACA,2CAAA;EAIA,sHAAA;A;AAzQF;EAySE,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,WAAA;EACA,UAAA;EAIA,0DAAA;A;AAOF;EAEI,UAAA;A;AAxTJ;EAyWE,oEAAA;EAQA,oBAAA;EACA,oBAAA;EACA,6BAAA;EACA,4BAAA;A;AAhXF;EA+XE,WAAA;EACA,SAAA;EACA,iCAAA;EACA,iBAAA;EACA,mBAAA;EACA,UAAA;EAIA,0GAAA;A;AAtOA;EACE,yBAAA;EACA,iCAAA;A;AAKF;EAIE,wEAAA;EAEA,gBAAA;A;AAKF;EACE,wEAAA;EAEA,gBAAA;A;AAKF;EACE,uEAAA;EAEA,gBAAA;A;AAKF;EACE,sEAAA;EAEA,gBAAA;A;AAGF;EACE,sEAAA;EAEA,gBAAA;A;AAKF;EACE,uEAAA;EAEA,gBAAA;A;AAGF;EACE,uEAAA;EAEA,gBAAA;A;AAKF;EAEE,yEAAA;EAEA,gBAAA;A;AA1NJ;;;EA4PA,kHAAA;A;AApPE;;;EAmWF,oBAAA;A;AA5VA;EA0PA,kBAAA;EACA,SAAA;EACA,UAAA;EACA,UAAA;EACA,eAAA;A;AAzPE;EAiHF,eAAA;EACA,oBAAA;A;AA3GA;EpBvFI,+BAAA;ECZF,eAAA;EDwBA,2GAAA;A;AqB4SE;ErBxTA,4BAAA;ECZF,eAAA;EDwBA,wGAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0GAAA;EAZE,6BAAA;ECZF,eAAA;EDwBA,yGAAA;EAZE,WAAA;ECZF,eAAA;EDwBA,iDAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,kDAAA;A;AoB0FA;EA0QA,wGAAA;EASA,UAAA;A;AA/QA;EAqVF,mCAAA;A;AA5UE;;EA+QA,wBAAA;EACA,UAAA;EAIA,0GAAA;A;AAhRA;;EA4UF,iCAAA;EACA,UAAA;A;AApUE;;;;EAsEF,gBAAA;A;AAvCA;ET/GE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AA0CN;;EAGI,oBAAA;EVtMF,YAAA;EAAc,aAAA;EUwMZ,qBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;;EAGI,2CAAA;EVlNJ,YAAA;EAAc,aAAA;EUoNV,6CAAA;EACA,sCAAA;EACA,uCAAA;A;AAIJ;EAEI,sCAAA;EACA,uCAAA;A;AIkPN;EAEI,UAAA;A;AAIJ;;Ef9cI,WAAA;ECZF,eAAA;EDwBA,sCAAA;A;AoBkKF;EToDE,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;EACA,YAAA;EAGA,oBAAA;A;AWtIF;ExBnGE,kBAAA;EACA,QAAA;EACA,YAAA;EGTA,YAAA;EAAc,aAAA;EHeZ,SAAA;EACA,WAAA;EACA,gCAAA;A;AwB7BJ;EAMI,YAAA;EACA,oBAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,sBAAA;EACA,UAAA;EACA,aAAA;EACA,eAAA;EACA,wBAAA;EAIA,gBAAA;A;AA8DJ;EAEI,YAAA;EACA,WAAA;EACA,eAAA;A;AAhBJ;EtBlDI,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;AsB6EF;EAEI,WAAA;A;AArFF;EAEI,kBAAA;EACA,cAAA;A;AAUN;EX6BE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AA0CN;;EAGI,oBAAA;EVtMF,YAAA;EAAc,aAAA;EUwMZ,qBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;;EAGI,2CAAA;EVlNJ,YAAA;EAAc,aAAA;EUoNV,6CAAA;EACA,sCAAA;EACA,uCAAA;A;AAIJ;EAEI,sCAAA;EACA,uCAAA;A;AI9HJ;EfxFE,sBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;AsBmBA;EAEI,kBAAA;EAGA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;A;AEkdN;EAEI,0BAAA;A;AFzcJ;EtBtCE,WAAA;A;AwBggBF;EAEI,0BAAA;A;AAGF;EAEI,0BAAA;A;AAIJ;EAEI,0BAAA;A;AAWN;EAkBE,WAAA;EACA,YAAA;EACA,eAAA;A;AF1fF;EAEI,YAAA;EACA,WAAA;EACA,eAAA;A;AE2eJ;EASE,WAAA;EACA,YAAA;EACA,eAAA;A;AF3eF;ErBpFE,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;AoBqkBN;EvBhmBE,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;AoBnBN;ExBWE,mBAAA;EAAA,yBAAA;EAAA,0BAAA;EK0PA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EwB6cA,YAAA;ErBvOA,eAAA;EACA,kBAAA;EqBpOE,oBAAA;EAEA,mBAAA;EACA,sBAAA;EACA,eAAA;EACA,eAAA;EACA,aAAA;EACA,eAAA;EACA,wBAAA;A;AAyRJ;ExBpSE,mBAAA;A;AwBoVF;ExBpVE,0BAAA;A;AwBujBF;;EvB1kBE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;ADkPN;EH1PE,WAAA;EAAA,YAAA;EGgQI,MAAA;EFnRJ,YAAA;EAAc,aAAA;EEqRV,OAAA;A;AqBrPF;EACE,UAAA;EACA,SAAA;A;AAIJ;ExB/BE,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;AwByBA;E1BrCA,kBAAA;EACA,QAAA;EACA,YAAA;EAYE,OAAA;EACA,QAAA;EACA,2BAAA;A;A0B0BJ;EAEI,wIAAA;EAIA,UAAA;A;AAIJ;EAEI,uBAAA;EACA,gBAAA;A;AAIJ;EAEI,mBAAA;A;AAIJ;EAEI,kBAAA;EACA,aAAA;EACA,sBAAA;A;AAIJ;EAEI,YAAA;A;AAIJ;EAEI,qEAAA;EAQA,iBAAA;EACA,6BAAA;EACA,4BAAA;A;AAIJ;EAEI,aAAA;A;AAIJ;EAEI,oBAAA;A;AAIJ;;EAMI,kBAAA;A;AAuQJ;ExBxXI,cAAA;ECZF,eAAA;EDwBA,wCAAA;A;AwB6eF;EAEI,6BAAA;A;AA5HF;ExB/XE,cAAA;ECZF,eAAA;EDwBA,wCAAA;A;AwB0XF;ExBtYI,eAAA;ECZF,eAAA;EDwBA,yCAAA;A;AwBgHA;ExB5HE,sBAAA;ECZF,eAAA;EDwBA,gDAAA;A;AwByHF;EAEI,QAAA;EACA,YAAA;EAIA,oDAAA;A;AAKJ;EAEI,WAAA;A;AAOF;EAEI,+BAAA;EACA,uBAAA;EAIA,UAAA;A;AAGF;EAEI,+BAAA;EAGA,sBAAA;EAIA,UAAA;A;AAGF;EAII,qBAAA;A;AAQR;EAEI,UAAA;A;AAGF;EAGI,QAAA;EACA,UAAA;A;AAKN;EAEI,QAAA;EAKA,UAAA;A;AAGF;EAEI,WAAA;A;AAWR;EbjLE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AAcN;;EAGI,qBAAA;EV1KF,YAAA;EAAc,aAAA;EU4KZ,sBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;EAEI,sCAAA;EACA,uCAAA;A;AIvFJ;EfxFE,qCAAA;ECZF,eAAA;EDwBA,8DAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2KE;EAkCA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;AwB6NA;EbPA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;EACA,YAAA;EAGA,oBAAA;EaII,gBAAA;A;AT6GJ;Ef1VE,aAAA;ECZF,eAAA;EDwBA,iDAAA;A;Ae4EA;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2KE;EAkCA,yBAAA;EfzNA,YAAA;ECZF,eAAA;EDwBA,6CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,YAAA;ECZF,eAAA;EDwBA,6CAAA;A;Ae2PA;Ef3PA,6DAAA;A;AwBkPA;EACE;IACE,qBAAA;IACA,YAAA;E;EAGF;IACE,mBAAA;IACA,UAAA;E;A;AAKN;EAsNE,YAAA;EAlNE,aAAA;EACA,eAAA;EACA,sBAAA;A;AAmNJ;EAEI,WAAA;A;AAIJ;E1BvcE,eAAA;EACA,kBAAA;A;A0BiPF;EAEI,0DAAA;A;AE9JJ;;ECzHI,eAAA;ECZF,eAAA;EDwBA,yCAAA;A;AD2HF;EC3HE,mBAAA;A;AEnDF;EACE;IACE,yBAAA;E;A;AAQJ;EAEI;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,yBAAA;E;EADF;IACE,0BAAA;E;A;AAUN;EACE;IACE,aAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,aAAA;E;A;AASJ;EACE;IACE,UAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,UAAA;E;A;AASJ;EACE;IACE,UAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,UAAA;E;A;AASJ;EACE;IACE,UAAA;E;EAEF;IACE,UAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,aAAA;E;EAEF;IACE,UAAA;E;A;AASJ;EACE;IACE,yBAAA;E;EAEF;IACE,yBAAA;E;EAEF;IACE,yBAAA;E;A;AASJ;EACE;IACE,0BAAA;E;EAEF;IACE,0BAAA;E;EAEF;IACE,0BAAA;E;A;AH5HJ;EAEI,oBAAA;EACA,kBAAA;EEIF,YAAA;EAAc,aAAA;EFFZ,cAAA;EACA,cAAA;EAIA,0DAAA;A;AAIJ;;;;EAKI,kBAAA;EACA,WAAA;EACA,YAAA;A;AAIJ;EAEI,yBAAA;A;AAIJ;EAII,YAAA;EACA,iBAAA;EACA,mBAAA;EACA,UAAA;A;AAIJ;;EAGI,iBAAA;A;AAIJ;EAEI,kEAAA;A;AAIJ;EAEI,kBAAA;EACA,MAAA;EEnDF,YAAA;EAAc,aAAA;EFqDZ,WAAA;EACA,sBAAA;EACA,SAAA;EACA,YAAA;EACA,gBAAA;A;AAGF;EE5DA,YAAA;EAAc,aAAA;EF+DV,WAAA;EACA,YAAA;EACA,yBAAA;A;AAKN;EAEI,oBAAA;EACA,kBAAA;EACA,UAAA;EACA,YAAA;EACA,gBAAA;A;AAGF;EAEI,WAAA;A;AAMJ;EEvFA,YAAA;EAAc,aAAA;EF0FV,WAAA;A;AAMJ;EAEI,UAAA;A;AAIJ;EAEI,UAAA;A;AA0EN;EAOI,mFAAA;A;AAQJ;EAEI,uGAAA;A;AAYF;EAEI,oMAAA;A;AAFJ;EAEI,oMAAA;A;AAFJ;EAEI,oMAAA;A;AAFJ;EAEI,oMAAA;A;AAKN;EEtNE,YAAA;EAAc,aAAA;EF8NZ,4FAAA;A;AAKJ;EEnOE,YAAA;EAAc,aAAA;EF2OZ,6FAAA;A;AA5HJ;EAEI,UAAA;A;AItIJ;EzBkSE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,0BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;E8BhCE,kBAAA;E7BaF,YAAA;EAAc,aAAA;E6BXZ,OAAA;E7BWF,YAAA;EAAc,aAAA;E6BTZ,kCAAA;E7BSF,YAAA;EAAc,aAAA;E6BPZ,0BAAA;EACA,oBAAA;EACA,gBAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;EACA,gBAAA;EAEA,eAAA;EAGA,sBAAA;EAiBA,kGAAA;A;A1BGA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E6BQV,QAAA;E7BRJ,YAAA;EAAc,aAAA;E6BUV,UAAA;E7BVJ,YAAA;EAAc,aAAA;E6BYV,mCAAA;E7BZJ,YAAA;EAAc,aAAA;E6BcV,2BAAA;E7BdJ,YAAA;EAAc,aAAA;E6BgBV,iBAAA;E1BWA,iBAAA;A;A0BCN;EAEI,YAAA;A;AAKF;E7BnCA,YAAA;EAAc,aAAA;E6B0Ld,gBAAA;E7B1LA,YAAA;EAAc,aAAA;E6B4Ld,iBAAA;EACA,YAAA;A;A1BrKE;EACE,mBAAA;EAEA,iBAAA;A;A0BaF;E7BxCF,YAAA;EAAc,aAAA;E6BwMd,cAAA;E7BxMA,YAAA;EAAc,aAAA;E6B0Md,iBAAA;A;AA9EF;EAcM,wCAAA;A;AASN;EAEI,gEAAA;A;AApEF;EACE;I7BlFF,YAAA;IAAc,aAAA;I6BoFV,iEAAA;E;EAIF;IACE,mEAAA;I7BzFJ,YAAA;IAAc,aAAA;I6B2FV,kEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,mEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,iEAAA;E;A;AClIF;EAEE,kBAAA;EACA,SAAA;EACA,OAAA;EACA,WAAA;EACA,0BAAA;EACA,WAAA;A;AAGF;EACE,wBAAA;EACA,UAAA;A;AAGF;EACE,oBAAA;EACA,wBAAA;EACA,UAAA;EACA,UAAA;A;AAKF;EACE,oGAAA;A;AAMN;EAEI,oBAAA;EACA,UAAA;A;AAIJ;EAEI,UAAA;A;ACxCJ;EA0UE,aAAA;EACA,kBAAA;EACA,MAAA;EACA,QAAA;EACA,OAAA;EACA,sBAAA;EACA,WAAA;EACA,eAAA;EACA,YAAA;E/B7TA,YAAA;EAAc,aAAA;E+B+Td,gBAAA;EACA,oBAAA;A;A5BxSE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E+BoUZ,iBAAA;E5BzSE,iBAAA;A;A4B7CJ;EAII,sBAAA;EACA,YAAA;EACA,qBAAA;EACA,wBAAA;EACA,oBAAA;A;AAIJ;E/BMA,YAAA;EAAc,aAAA;EDmBd,sBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EgCjBI,WAAA;A;A5BsBF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,uBAAA;EIQI,iBAAA;A;A4BrBJ;E/BNA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,uBAAA;EgCLI,YAAA;A;A5BUF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,sBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;A4BTJ;EAEI,cAAA;EACA,WAAA;EACA,gCAAA;A;AAIJ;EAEI,qBAAA;EACA,kBAAA;EACA,eAAA;A;AAIJ;EAEI,mBAAA;A;AAIJ;EAEI,0BAAA;A;AAMJ;E/BhDA,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EgCiCI,gBAAA;A;A5B5BF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;A4B+BJ;EAEI,aAAA;A;AEnEN;EAwFI,oBAAA;EACA,kBAAA;A;ACy9BF;EnCxhCA,0BAAA;A;AmCwhCA;EnCxhCA,0BAAA;A;AmCwlCA;EnCxlCA,yBAAA;A;AmCwlCA;EnCxlCA,6BAAA;A;AmCwlCA;EnCxlCA,0BAAA;A;AmC+mCE;EnC/mCF,yBAAA;A;AmC+mCE;EnC3nCA,aAAA;ECZF,eAAA;EDwBA,uCAAA;A;AmC+mCE;EnC/mCF,yBAAA;A;AoCJA;EpCIA,yBAAA;A;AoCJA;EpCIA,0BAAA;A;AqCKA;ErCLA,0BAAA;A;AqCKA;ErCLA,0BAAA;A;AkBaA;EiB2gCA;InCxhCA,eAAA;E;EmC+mCE;InC/mCF,SAAA;E;EmCwlCA;InCxlCA,eAAA;E;E+BmBA;I/BnBA,6BAAA;E;EgCkDF;;;IhClDE,sBAAA;E;EqCKA;IrCLA,eAAA;E;EoCJA;IpCIA,eAAA;E;A;AkC4UF;EAEI,QAAA;EACA,2BAAA;EACA,oBAAA;A;AAuEJ;EjC1aE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;A8BqZN;EjChbE,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;AiCxCJ;EACE,WAAA;EACA,YAAA;EACA,eAAA;A;AFsTJ;EAEI,WAAA;EACA,YAAA;A;ADqBJ;EjCpUE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;A8B0TN;EjCrVE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;A8B0DJ;EjCrFA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EkC4EI,oBAAA;EACA,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,cAAA;EACA,oBAAA;A;AAwIN;;EAGI,kBAAA;EACA,MAAA;EACA,OAAA;A;AAIJ;EAKI,qBAAA;EACA,sBAAA;A;AAaJ;EAEI,UAAA;EAIA,oCAAA;A;AAKJ;EAEI,UAAA;EAIA,+BAAA;A;A9BlQA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;A8B4QN;EAEI,UAAA;EAIA,iCAAA;A;AAIJ;EAEI,UAAA;EAIA,yCAAA;A;AAzMJ;EAOI,YAAA;EACA,YAAA;EACA,cAAA;EACA,kBAAA;EACA,sBAAA;EACA,gBAAA;EACA,aAAA;EACA,eAAA;A;AJAJ;EAcM,wCAAA;A;AIkON;EAEI,aAAA;EACA,gBAAA;EACA,oBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,YAAA;EACA,YAAA;EACA,YAAA;EACA,aAAA;EACA,UAAA;EAIA,6BAAA;EACA,cAAA;A;AAIJ;E7BpHE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,0BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EKoQA,uBAAA;EACA,mBAAA;EACA,gBAAA;E6B6GE,cAAA;EACA,WAAA;EjCvYF,YAAA;EAAc,aAAA;EiCyYZ,gBAAA;A;A9BjXA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EiC4YV,iBAAA;E9BjXA,iBAAA;A;A+BglCJ;EnCpmCE,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;AmCwlCA;EnCpmCE,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;AoCQA;EpCpBE,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;AmC+mCE;EnC3nCA,aAAA;ECZF,eAAA;EDwBA,qCAAA;A;AmC+mCE;EnC3nCA,aAAA;ECZF,eAAA;EDwBA,qCAAA;A;AkCoIF;EA+PE,eAAA;EACA,oBAAA;A;AAnFF;EjCpUE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AiCdN;;EpCbE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AkC2gBN;;;;EtC/hBI,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;AsCqkBF;;;;EtCjlBI,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;AkCiKF;EAEI,oBAAA;EACA,mBAAA;A;AAIJ;EjC3LE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AmCsgBN;EAEI,YAAA;A;AAOJ;EAEI,YAAA;A;ALrWA;EAEI,gBAAA;A;AAIJ;E7B4GF,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;EAIA,oBAAA;A;AAaJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AAaJ;EAwBA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAvBI,qBAAA;A;A6B3MA;E7BoGF,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;A;AAiBJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;A6BpLJ;EjC3NE,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AuCypBA;EtC5qBA,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;AmCspBJ;EtCjrBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AmCsrBJ;EACE,WAAA;EACA,YAAA;A;AnC3rBA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;AmCoqBJ;EtC/rBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AmCyqBJ;EtCpsBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;A+BkhBN;EAEI,YAAA;E9BtPF,aAAA;EAGE,qBAAA;A;AA+EJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AA6BJ;EAEI,YAAA;A;A8B6bF;EACE,YAAA;EACA,oBAAA;EACA,mBAAA;A;AAGF;EACE,aAAA;A;AA5iBJ;EnC/TI,2BAAA;ECZF,eAAA;EDwBA,mDAAA;EAZE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;EAAA,6BAAA;EAAA,4BAAA;A;AmCoiCA;EnCpiCA,4BAAA;A;AmCoiCA;EnCpiCA,yBAAA;A;A+BmBA;E/BnBA,wCAAA;A;A+BmBA;E/BnBA,wCAAA;A;A+BSA;E/BrBE,4BAAA;ECZF,eAAA;EDwBA,sDAAA;A;A+BmBA;E/BnBA,wCAAA;A;AmCg9BF;ELr0BE,4BAAA;A;AK40BF;EL50BE,0CAAA;A;AUlHF;EAII,2BAAA;EACA,4BAAA;A;AC5CF;EAEI,sBAAA;EACA,UAAA;A;AAIJ;ExCZA,YAAA;EAAc,aAAA;EDmBd,UAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,WAAA;EIQI,iBAAA;A;A+Bu2BN;ElCl4BE,YAAA;EAAc,aAAA;EDmBd,UAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,WAAA;EIQI,iBAAA;A;A+Bw8BN;ELr0BE,4BAAA;A;AK40BF;EL50BE,0CAAA;A;ACxHA;E/B/BE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;A+BmBA;E/B/BE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;A+BSA;E/BrBE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;A0C/CF;EAmCI,YAAA;A;AP4pBJ;EAqBI,YAAA;A;AL5jBJ;EAcM,wCAAA;A;AE4HN;EAEI,kBAAA;A;AF5IJ;;EAcM,2CAAA;A;AE6IJ;;EAEI,eAAA;A;AFtIN;EAEI,4EAAA;A;AApEF;EACE;I7BlFF,YAAA;IAAc,aAAA;I6BoFV,oEAAA;E;EAIF;IACE,mEAAA;I7BzFJ,YAAA;IAAc,aAAA;I6B2FV,qEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,sEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,oEAAA;E;A;AEwBN;E/BrIE,YAAA;EAAc,aAAA;EDOZ,2BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,mDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,0BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,6BAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,8BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,sDAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,yBAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,4BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,oDAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,+BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,uDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,4BAAA;EIQI,iBAAA;A;A4BoIA;EA1BN;IA2BQ,6CAAA;E;A;AAmBF;EAXN;IAYQ,kEAAA;E;A;AAMR;E/B1LE,YAAA;EAAc,aAAA;EDmBd,yBAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,4BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,oDAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,+BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,uDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,4BAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDOZ,2BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,mDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,0BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,6BAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,8BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,sDAAA;EIQI,iBAAA;A;A+BmyBF;EAtcF;IlCxXA,YAAA;IAAc,aAAA;IkCm0BV,gEAAA;E;A;A/B3yBF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EkCmYR,eAAA;E/BxWF,iBAAA;A;A+BmyBF;E/BtyBA;IHxBF,YAAA;IAAc,aAAA;IkCm0BV,iEAAA;E;A;AALF;EAhbF;IlC9YA,YAAA;IAAc,aAAA;IkCm0BV,+DAAA;E;A;A/B3yBF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EkCyZR,cAAA;E/B9XF,iBAAA;A;A+BmyBF;E/BtyBA;IHxBF,YAAA;IAAc,aAAA;IkCm0BV,gEAAA;E;A;AAoPJ;EnCpiCA,6BAAA;A;AmCoiCA;EnCpiCA,6BAAA;A;AgCkDF;;;EhClDE,iCAAA;A;AgCkDF;;;EhClDE,iCAAA;A;AgC8DF;;;EAII,iBAAA;A;AAhBJ;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AgCkDF;;;EhClDE,iCAAA;A;AgCoRF;EAEI,4BAAA;A;AU/RF;EAgBI,aAAA;EAEA,qBAAA;EACA,iBAAA;A;AZsHN;EAEI,uEAAA;A;AAzBJ;EAcM,wCAAA;A;AE4HN;EAEI,kBAAA;A;AF5IJ;;EAcM,2CAAA;A;AE6IJ;;EAEI,eAAA;A;AAvLN;EAEI,gBAAA;A;A3BwUJ;EAEI,YAAA;A;A8B6bF;EACE,YAAA;EACA,oBAAA;EACA,mBAAA;A;AAGF;EACE,aAAA;A;AOj1BF;EAEI,aAAA;EACA,YAAA;EACA,UAAA;EAIA,6BAAA;A;AAIJ;EAEI,UAAA;A;AAIJ;EAEI,oBAAA;EzCrDJ,YAAA;EAAc,aAAA;EDmBd,SAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,UAAA;EIQI,iBAAA;A;A4BuEN;EAEI,gBAAA;A;AA/BJ;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AgCkDF;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AgC8DF;;;EAII,iBAAA;A;AAhBJ;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AmC44BF;ElC/5BE,YAAA;EAAc,aAAA;EDmBd,UAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,WAAA;EIQI,iBAAA;A;A0BiGN;E7B5HE,YAAA;EAAc,aAAA;E6BgIV,0DAAA;A;A1BxGF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E6BsIR,yDAAA;E1B3GF,iBAAA;A;A4B2ON;EAEI,kBAAA;A;AF5IJ;;E7B5HE,YAAA;EAAc,aAAA;E6BgIV,6DAAA;A;A1BxGF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E6BsIR,4DAAA;E1B3GF,iBAAA;A;A4B4PJ;;EAEI,eAAA;A;AFtIN;EAEI,yFAAA;A;AApEF;EACE;I7BlFF,YAAA;IAAc,aAAA;I6BoFV,sEAAA;E;EAIF;IACE,mEAAA;I7BzFJ,YAAA;IAAc,aAAA;I6B2FV,uEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,wEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,sEAAA;E;A;A1BrFF;EACE,mBAAA;EAEA,iBAAA;A;A0BwHN;EAEI,yFAAA;A;AApEF;EACE;I7BlFF,YAAA;IAAc,aAAA;I6BoFV,uEAAA;E;EAIF;IACE,mEAAA;I7BzFJ,YAAA;IAAc,aAAA;I6B2FV,wEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,yEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,uEAAA;E;A;AE0LN;EAEI,4BAAA;A;AU5MF;EAEI,kBAAA;A;AAIJ;;EAGI,gBAAA;A;AChIN;EhCiFE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AAcN;;EAGI,qBAAA;EV1KF,YAAA;EAAc,aAAA;EU4KZ,sBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;EAEI,sCAAA;EACA,uCAAA;A;AIvFJ;;EfxFE,qCAAA;ECZF,eAAA;EDwBA,8DAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;A2CtBA;EhC4OA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;EACA,YAAA;EAGA,oBAAA;A;AIjJA;EfxFE,sBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae4EA;EfxFE,sBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;A4C/CF;EAEI,SAAA;E3C0BF,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EK0PA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,6GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,+DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,4EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,uEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,qEAAA;EKsSA,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;A;ADlWA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;ACgXN;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AuClaJ;EAEI,UAAA;EAIA,sDAAA;A;AAIJ;;EAGI,UAAA;A;ACHJ;EAEI,qBAAA;EACA,sBAAA;EACA,YAAA;EACA,qBAAA;EACA,eAAA;EACA,iBAAA;EACA,cAAA;EACA,kBAAA;EAIA,6BAAA;EACA,kBAAA;A;ARQJ;EpCbE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AyCjDN;;EAGI,eAAA;EACA,oBAAA;A;ACUJ;EzCqRE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;A;A8CvBF;E9CWI,sBAAA;ECZF,eAAA;EDwBA,gDAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,2CAAA;E+CqOA,iBAAA;EACA,mBAAA;EAQA,iCAAA;ED/OE,iCAAA;EACA,oBAAA;EACA,sBAAA;EACA,sBAAA;EACA,kBAAA;A;AC+LJ;E/C9MI,2BAAA;ECZF,eAAA;EDwBA,oDAAA;A;AIKE;EACE,mBAAA;EJlBF,4BAAA;ECZF,eAAA;EDwBA,qDAAA;E+C4MI,yBAAA;E3CpMA,iBAAA;A;A2CyMN;E/C7NI,4BAAA;ECZF,eAAA;EDwBA,qDAAA;A;AIKE;EACE,mBAAA;EJlBF,2BAAA;ECZF,eAAA;EDwBA,oDAAA;E+C2NI,0BAAA;E3CnNA,iBAAA;A;A2C8CN;E/CtDE,yBAAA;A;A+C4CF;E/CxDI,sBAAA;ECZF,eAAA;EDwBA,gDAAA;A;A+CgEF;E/ChEE,wCAAA;A;AgCkDF;;;EhClDE,iCAAA;A;A+C+FF;;EAGI,wCAAA;A;AAIJ;EAEI,qCAAA;A;AAQJ;;EAGI,wBAAA;EACA,0BAAA;A;AAIJ;EAEI,qBAAA;EACA,uBAAA;A;AAIJ;EAEI,mBAAA;A;AAQJ;E/CzIE,qCAAA;A;A+CmJF;E/CnJE,0BAAA;A;A+CiKF;;;E/CjKE,0BAAA;A;A+C+PF;EAEI,YAAA;A;AAIJ;EAEI,gBAAA;A;AAlBJ;EAEI,YAAA;A;AA0CJ;;EAGI,sBAAA;A;AA8BJ;;E9CrVE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;A2CSN;E/CjBE,yBAAA;A;Ae4EA;EfxFE,oCAAA;ECZF,eAAA;EDwBA,6DAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;A+C2BF;E/C3BE,0BAAA;A;Ae4EA;EfxFE,qCAAA;ECZF,eAAA;EDwBA,8DAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;A8C4DF;EAGI,iCAAA;EACA,gBAAA;EACA,WAAA;A;AAIJ;EAEI,eAAA;EACA,SAAA;EACA,mBAAA;EACA,iBAAA;EACA;;;;;IAAA;EAMA,mBAAA;A;AE3HJ;E3CoSE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EgDtCE,sBAAA;EACA,gBAAA;EACA,gBAAA;EACA,uBAAA;A;A5CwCA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E+CZV,iBAAA;E5CuCA,iBAAA;A;A4ClCN;EAEI,iBAAA;A;A5C6BA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;E+CCV,gBAAA;E5C0BA,iBAAA;A;A4CrBN;EAYE,UAAA;A;ACpCF;E5C+RE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,kEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,8EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EiDjCE,sBAAA;EACA,uBAAA;EACA,gBAAA;EACA,aAAA;EhDWF,YAAA;EAAc,aAAA;EgDRZ,gBAAA;A;A7CgCA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EgDJV,iBAAA;E7C+BA,iBAAA;A;A6C1BN;EDiBE,UAAA;A;ACbF;EAEI,iBAAA;A;A7CiBA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EgDaV,gBAAA;E7CcA,iBAAA;A;A6CTN;ECoEE,WAAA;EACA,YAAA;EACA,YAAA;ED9DE,4BAAA;EhD1BF,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EiDqBE,4DAAA;EAUA,UAAA;A;ACyCJ;EAUI,WAAA;EACA,YAAA;EACA,YAAA;A;AAGF;EpDhEA,eAAA;EACA,kBAAA;EAUE,iBAAA;EACA,gBAAA;A;AoD+DJ;EpD9GE,kBAAA;EACA,QAAA;EACA,YAAA;EGTA,YAAA;EAAc,aAAA;EHeZ,SAAA;EACA,WAAA;EACA,gCAAA;A;AMOA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;A6CMJ;EhDjCA,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;A6CgBJ;EAEI,0BAAA;A;AAQJ;EAII,UAAA;A;AAKN;EAEI,mBAAA;EACA,oBAAA;EACA,sBAAA;A;AAIJ;EAEI,eAAA;A;AAIJ;E/B3EE,8BAAA;EACA,WAAA;EACA,gBAAA;EACA,kBAAA;EACA,mBAAA;EAAqB,eAAA;EACrB,UAAA;A;AiChCF;EAEI,aAAA;EACA,kBAAA;EACA,WAAA;A;AAGF;EAEI,cAAA;A;AAKN;EnDmBI,sBAAA;ECZF,eAAA;EDwBA,gDAAA;EmD3BE,YAAA;EAGA,aAAA;EACA,kBAAA;EACA,MAAA;EACA,WAAA;A;AFuFJ;EAEI,gBAAA;EACA,MAAA;EACA,UAAA;A;AGnIJ;E/CuTE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EoDzDE,sBAAA;EACA,aAAA;EACA,yBAAA;A;AAIJ;EnDgCE,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EoD/CE,mBAAA;EACA,aAAA;EACA,eAAA;EACA,yBAAA;A;AhDiDA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;AgDhDN;EAEI,mBAAA;EACA,aAAA;A;AAIJ;EnDcE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EiD0LV,yBAAA;E9C/JA,iBAAA;A;AAHF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AgDlCN;EnDOE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EoDlBE,mBAAA;A;AhDuBA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AgDtBN;EnDLE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EoDVE,mBAAA;EACA,oBAAA;A;AhDcA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AgDbN;EnDdE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EoDDE,mBAAA;A;AhDMA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AgDLN;EpDfI,eAAA;ECZF,eAAA;EDwBA,0CAAA;EoDQE,aAAA;A;AjB6FJ;EAEI,WAAA;EACA,eAAA;A;AAwiBJ;EAqBI,YAAA;A;AL5jBJ;EAcM,wCAAA;A;AE4HN;EAEI,kBAAA;A;AF5IJ;;EAcM,2CAAA;A;AE6IJ;;EAEI,eAAA;A;AFtIN;EAEI,4EAAA;A;AApEF;EACE;I7BlFF,YAAA;IAAc,aAAA;I6BoFV,oEAAA;E;EAIF;IACE,mEAAA;I7BzFJ,YAAA;IAAc,aAAA;I6B2FV,qEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,sEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,oEAAA;E;A;AK+LN;EAEI,WAAA;EACA,YAAA;A;AHRJ;EAEI,4BAAA;A;AOwPJ;EAEI,YAAA;A;AxBpcF;;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;;;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;;;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;;EAEI,gCAAA;A;AAKF;;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;;Ef3PA,8DAAA;A;Ae4EA;;;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AqB6pBF;;ErBzqBI,iCAAA;ECZF,eAAA;EDwBA,sEAAA;EAAA,6BAAA;A;AqB6pBF;;;;;;ErBzqBI,qBAAA;ECZF,eAAA;EDwBA,oFAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,wFAAA;A;AqBosBF;EACE;IrBjtBE,iCAAA;ICZF,eAAA;IDwBA,sEAAA;IAAA,6BAAA;E;EqB0sBA;IrBttBE,qBAAA;ICZF,eAAA;IDwBA,oFAAA;IAZE,yBAAA;ICZF,eAAA;IDwBA,wFAAA;E;A;AqBgtBF;EACE;IrB7tBE,qBAAA;ICZF,eAAA;IDwBA,oFAAA;IAZE,yBAAA;ICZF,eAAA;IDwBA,wFAAA;E;EqButBA;IrBnuBE,iCAAA;ICZF,eAAA;IDwBA,sEAAA;IAAA,6BAAA;E;A;AqBwaI;;;EAEI,gFAAA;A;AAOJ;;;EAEI,iFAAA;A;AgCRV;ErDvbI,sBAAA;ECZF,eAAA;EDwBA,gDAAA;A;AqDybF;EAEI,qCAAA;A;AAIJ;EAEI,qCAAA;A;AAYJ;EAEI,0BAAA;A;AAYJ;EAEI,yBAAA;A;AAIJ;ErD7eI,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;Ae4EA;EfxFE,sBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;AqD6fF;EAKI,iCAAA;A;AAIJ;EAEI,4CAAA;EACA,gBAAA;A;AAIJ;ElDpTI,eAAA;EACA,yHAAA;A;AkDgUJ;ErDtiBI,kBAAA;ECZF,eAAA;EDwBA,2CAAA;A;AqDkZF;ElDzLI,eAAA;EACA,8HAAA;A;AkD4LJ;EhD5JE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,wEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AqD0ZF;EhDhKE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,sDAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,4DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AqD+ZF;EAEI,2BAAA;A;AA3bJ;;EAGI,eAAA;EACA,MAAA;EACA,OAAA;EACA,mBAAA;EACA,uBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;A;AAIJ;EASI,aAAA;ErDTA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AqD+eF;EAEI,4BAAA;A;AAiDJ;EAEI,gBAAA;A;AAeE;EANN;IAOQ,6BAAA;E;A;AAIF;EAXN;IAYQ,gBAAA;E;A;AAaR;EAeM,6BAAA;A;AAMN;EAIE;IAEI,sBAAA;IAWA,oBAAA;E;A;AAsCN;EAII,eAAA;A;AAIF;EARF;IAUM,iBAAA;IACA,YAAA;E;EAoIN;IrDjyBE,YAAA;E;A;AqDqvBF;EAnGA;IAoGE,0BAAA;E;A;AAEF;EAtGA;IAuGE,YAAA;E;A;AAMF;EA7GA;IA8GE,+BAAA;E;A;AAEF;EAhHA;IAiHE,iBAAA;E;A;AA9FA;EA4HF;IrDjyBE,YAAA;E;A;AqDwrBA;EAtCF;IA0CM,YAAA;IACA,iBAAA;IACA,gBAAA;IACA,YAAA;IrD/rBJ,gBAAA;E;EqD4wBF;IACE,SAAA;IrD7wBA,WAAA;E;EqDgxBF;IACE,mBAAA;IAEA,2BAAA;E;EAEF;IrDrxBE,kCAAA;E;A;AqDysBA;EAvDF;IA2DM,YAAA;IACA,iBAAA;IACA,gBAAA;IACA,YAAA;IrDhtBJ,gBAAA;E;EqD4wBF;IACE,SAAA;IrD7wBA,WAAA;E;EqDgxBF;IACE,mBAAA;IAEA,2BAAA;E;EAEF;IrDrxBE,kCAAA;E;A;AqD0tBA;EAxEF;IA2EM,0BAAA;E;EAoEN;IrDjyBE,YAAA;E;A;AqDUE;EAEI,UAAA;A;AAMR;EAEI,UAAA;EACA,WAAA;A;AAMJ;EAEI,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,6BAAA;EACA,sBAAA;EACA,YAAA;EACA,qBAAA;EACA,UAAA;EAGA,oBAAA;A;AAIJ;ElD2LE,eAAA;EACA,kBAAA;EkDvLE,aAAA;EACA,sBAAA;EACA,YAAA;EACA,cAAA;EACA,sBAAA;EACA,eAAA;EACA,gBAAA;EACA,oBAAA;EAEA,gBAAA;A;AlDiMJ;EH1PE,WAAA;EAAA,YAAA;EGgQI,MAAA;EFnRJ,YAAA;EAAc,aAAA;EEqRV,OAAA;A;AC7PF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EoDgFV,iBAAA;EjDrDA,iBAAA;A;AcKJ;EmC8BF;IAwBM,6BAAA;E;A;AAIJ;EnC/GA,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,MAAA;EACA,OAAA;EACA,6BAAA;EACA,sBAAA;EACA,WAAA;EACA,oBAAA;A;AmC2GI;EALJ;IAOM,aAAA;E;A;AAMR;EhDkNE,cAAA;EA+DE,aAAA;EACA,eAAA;EgD1QA,kBAAA;EACA,cAAA;EACA,sBAAA;EACA,eAAA;EACA,mBAAA;A;AhDwRJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;ADvXA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EoDuHV,iBAAA;EjD5FA,iBAAA;A;AiDkGN;EAEI,kBAAA;EAGA,oBAAA;A;AAKF;EAEI,qBAAA;EACA,oCAAA;EACA,oBAAA;EACA,8BAAA;EACA,mBAAA;EAEA,UAAA;A;AAqqBN;ErDjyBE,YAAA;A;AqDoIA;EAEI,gBAAA;EACA,UAAA;EACA,gBAAA;A;AAIJ;EAEI,gBAAA;EACA,gBAAA;A;AAIJ;EAEI,QAAA;A;AAIJ;EAQI,iCAAA;A;AAKN;EAEI,YAAA;EACA,sBAAA;EACA,SAAA;EACA,cAAA;EACA,iCAAA;A;AAIF;EAEI,aAAA;A;AAKJ;EAEI,gBAAA;A;AAMN;;EAKI,cAAA;A;AAKJ;EAII,gBAAA;EACA,mBAAA;A;AAKJ;EAGI,gBAAA;A;AAKJ;EAKI,UAAA;A;AAIJ;EAEI,aAAA;EACA,kBAAA;EACA,cAAA;EACA,eAAA;EACA,mBAAA;EACA,yBAAA;EACA,sBAAA;EACA,gBAAA;EACA,SAAA;EACA,YAAA;EACA,iCAAA;A;AAGF;EAEI,sBAAA;EACA,qBAAA;A;AAKN;EpD9QE,YAAA;EAAc,aAAA;EDmBd,gBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EqDuQE,eAAA;EpD1RF,YAAA;EAAc,aAAA;EoD4RZ,iBAAA;A;AjDpQA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;EIQI,iBAAA;A;AiDwPJ;EpDnRA,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AAHF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EoDgSV,gBAAA;EjDrQA,iBAAA;A;AiDyQJ;EAEI,gBAAA;A;AAKN;;;EAII,aAAA;A;AAKF;EAEI,gCAAA;A;AAIJ;EAEI,+EAAA;A;AAOJ;;EAGI,+BAAA;A;AAIJ;EAGI,eAAA;A;AAMJ;EAEI,UAAA;A;AAIJ;EAEI,eAAA;EACA,UAAA;A;AAKF;EAEI,UAAA;EACA,UAAA;A;AAMJ;EAEI,+BAAA;A;AAMJ;EAEI,gCAAA;A;AAMR;EAEI,aAAA;EACA,UAAA;EACA,kBAAA;EACA,WAAA;EACA,YAAA;A;AAGF;EAII,cAAA;A;AAQN;EAEI,gBAAA;A;AE1ZJ;EvD4BE,iCAAA;EAZE,sBAAA;ECZF,eAAA;EDwBA,gDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,yBAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,0BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,kDAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,6BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,qDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,4BAAA;EuDgXA,UAAA;EvDhXA,YAAA;EuDDE,aAAA;EACA,sBAAA;EACA,cAAA;EACA,sBAAA;EACA,YAAA;EtDtBF,YAAA;EAAc,aAAA;EsDwBZ,uBAAA;EtDxBF,YAAA;EAAc,aAAA;EsD0BZ,yBAAA;EACA,gBAAA;EAeA,8BAAA;EACA,wDAAA;A;AA0OJ;EvDlQE,0BAAA;A;AsCuoBF;EtCvoBE,yBAAA;A;AuDkRF;EvDlRE,yBAAA;A;AsCqkBF;EtCrkBE,yBAAA;A;AuDiVF;EvDjVE,0BAAA;A;AsCqkBF;EtCrkBE,cAAA;A;AuDmUF;EvDnUE,6BAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDOZ,yBAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,iDAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,0BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,6BAAA;ECnBA,YAAA;EAAc,aAAA;EDOZ,4BAAA;ECZF,eAAA;EAKA,YAAA;EAAc,aAAA;EDmBd,oDAAA;EIQI,iBAAA;A;AkCqmBN;EtCznBI,kBAAA;ECZF,eAAA;EDwBA,0CAAA;A;AuD2XF;EtD9YE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AAHF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EsD+BV,qBAAA;EtD/BJ,YAAA;EAAc,aAAA;EsDiCV,sBAAA;EtDjCJ,YAAA;EAAc,aAAA;EsDmCV,wBAAA;EtDnCJ,YAAA;EAAc,aAAA;EsDqCV,wBAAA;EnDVA,iBAAA;A;AmDiYN;ElD/IE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,kEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,8EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EuD6YE,4BAAA;EAEA,eAAA;EACA,cAAA;A;AAKJ;EAEI,eAAA;A;AAKJ;EAEI,gBAAA;A;AAKJ;ElDzKE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EKsSA,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;EkDiEA,SAAA;EACA,eAAA;A;AlDjDJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AkDkDJ;EAEI,iBAAA;A;AAMJ;;EAGI,oBAAA;A;AA3ZJ;EAEI,4BAAA;A;AnD3BA;EACE,mBAAA;EmD6BA,2BAAA;EnD3BA,iBAAA;A;AmDgCN;EAEI,wBAAA;EASA,0BAAA;A;AnD9CA;EACE,mBAAA;EmDwCA,wBAAA;EnDtCA,iBAAA;A;AmD+CN;EAEI,4BAAA;EAQA,0BAAA;A;AnD5DA;EACE,mBAAA;EmDsDA,2BAAA;EnDpDA,iBAAA;A;AmD6DN;EAEI,cAAA;EACA,sBAAA;EACA,gBAAA;EACA,mBAAA;A;AAIJ;ElD4KE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,wEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EKsSA,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;EAIA,oBAAA;A;AAaJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AAaJ;EAwBA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAvBI,qBAAA;A;AkDtTJ;ElDmKE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EKsSA,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,mBAAA;EkD3QA,gBAAA;A;AlD4RJ;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;AkD5RJ;EAEI,YAAA;EACA,gBAAA;EACA,iCAAA;A;AAUJ;EtDjIE,YAAA;EAAc,aAAA;EDmBd,OAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;EuDkHE,aAAA;EACA,kBAAA;A;AnD9GA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,QAAA;EIQI,iBAAA;A;AmD6GF;EACE,aAAA;A;AAKN;EtD9IE,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EuD+HE,kBAAA;A;AnD1HA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AmDgIN;EpDiFI,eAAA;EACA,6HAAA;EF7OF,YAAA;EAAc,aAAA;EDmBd,OAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,cAAA;EuDkJE,aAAA;EACA,eAAA;A;AAkNJ;EvDrWE,qCAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,aAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,QAAA;EIQI,iBAAA;A;AmD8IJ;EAEI,aAAA;A;AAKN;EAEI,aAAA;EACA,eAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;EACA,YAAA;EACA,UAAA;EAIA,4BAAA;EACA,wDAAA;A;AAGF;EAEI,cAAA;A;AAIJ;EAEI,UAAA;A;AAIJ;EAEI,0BAAA;EAIA,UAAA;A;AAIJ;EAEI,0BAAA;EAIA,UAAA;A;AxDlPJ;EIkQE,eAAA;EACA,wHAAA;A;AJnQF;EIkQE,eAAA;EACA,yHAAA;A;AJnQF;EIkQE,eAAA;EACA,yHAAA;A;AJnQF;EIkQE,eAAA;EACA,yHAAA;A;AJnQF;EIkQE,eAAA;EACA,0HAAA;A;AJnQF;EIkQE,eAAA;EACA,0HAAA;A;AJnQF;EIkQE,eAAA;EACA,2HAAA;A;AJnQF;EIkQE,eAAA;EACA,2HAAA;A;AJnQF;EIkQE,eAAA;EACA,2HAAA;A;AJnQF;EIkQE,eAAA;EACA,2HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,4HAAA;A;AJnQF;EIkQE,eAAA;EACA,6HAAA;A;AJnQF;EIkQE,eAAA;EACA,6HAAA;A;AJnQF;EIkQE,eAAA;EACA,6HAAA;A;AJnQF;EIkQE,eAAA;EACA,6HAAA;A;AJnQF;EIkQE,eAAA;EACA,8HAAA;A;AJnQF;EIkQE,eAAA;EACA,8HAAA;A;AJnQF;EIkQE,eAAA;EACA,8HAAA;A;AJnQF;EIkQE,eAAA;EACA,8HAAA;A;AJnQF;EIkQE,eAAA;EACA,8HAAA;A;AJ9PJ;EAEI,yDAAA;EAIA,uBAAA;A;A0DUJ;EtD0PE,eAAA;EACA,kBAAA;EsD7IA,oBAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,UAAA;EACA,YAAA;EACA,kBAAA;EACA,qBAAA;EACA,eAAA;EACA,iBAAA;EACA,qBAAA;EACA,wBAAA;EAGA,iBAAA;EAIA,mIAAA;A;AtD2IF;EH1PE,WAAA;EAAA,YAAA;EGgQI,MAAA;EFnRJ,YAAA;EAAc,aAAA;EEqRV,OAAA;A;AsD1IN;EAEI,UAAA;EACA,SAAA;A;AAIJ;EtD0FI,eAAA;EACA,2HAAA;A;AYqMJ;EZtMI,eAAA;EACA,2HAAA;A;AsDlFJ;EtDiFI,eAAA;EACA,4HAAA;A;AsD7EJ;EAOI,aAAA;A;AAIJ;EAEI,eAAA;A;AASJ;EAEI,WAAA;A;AArLJ;EA+LE,WAAA;EACA,YAAA;A;AA5LF;EpDsQE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,4GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,2EAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,sEAAA;EAAA,mBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EyD2MA,WAAA;EACA,eAAA;EACA,YAAA;EAEA,eAAA;EACA,mBAAA;A;AE5DF;E3DpJE,mBAAA;A;A2D2EF;E1D9FE,YAAA;EAAc,aAAA;EDmBd,8BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,+BAAA;EIQI,iBAAA;A;AuD0EN;E1DrGE,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,+BAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,8BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AqDhBN;E3D+BE,eAAA;EACA,kBAAA;EAUE,iBAAA;EACA,gBAAA;A;A2DpCF;E3DXA,kBAAA;EACA,QAAA;EACA,YAAA;EGTA,YAAA;EAAc,aAAA;EHeZ,SAAA;EACA,WAAA;EACA,gCAAA;A;A2DSJ;EvC/CE,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,MAAA;EACA,OAAA;EACA,6BAAA;EACA,sBAAA;EACA,WAAA;EACA,oBAAA;A;AuC0CF;EA+NE,2BAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,mBAAA;A;AA/NF;EA0ME,2DAAA;EAQA,kBAAA;EACA,sBAAA;A;AA7MF;EAiOE,oBAAA;EACA,mBAAA;EACA,uBAAA;A;AA/NF;EAwOE,mBAAA;EACA,UAAA;EAIA,qFAAA;A;AAIF;EAEI,mBAAA;EAIA,0DAAA;A;AA7OJ;EzD/CI,yBAAA;ECZF,eAAA;EDwBA,qDAAA;EGyNE,eAAA;EACA,2HAAA;A;AuDtDJ;E1DpKE,WAAA;EAAA,YAAA;EAAA,eAAA;A;A0DiLA;E1D7LE,WAAA;ECZF,eAAA;EDwBA,0CAAA;A;A0D8gBF;E1D9gBE,kBAAA;A;A0DohBA;E1DphBA,kBAAA;A;AyDiDF;E9CbE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AAcN;;EAGI,qBAAA;EV1KF,YAAA;EAAc,aAAA;EU4KZ,sBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;EAEI,sCAAA;EACA,uCAAA;A;AIvFJ;EfxFE,sBAAA;ECZF,eAAA;EDwBA,8EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;AyDiEA;E9CqJA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;EACA,YAAA;EAGA,oBAAA;E8CxJI,gBAAA;A;A1CuXN;EAEI,UAAA;A;AAIJ;;Ef9cI,WAAA;ECZF,eAAA;EDwBA,sCAAA;A;A4D3CF;EvDqSE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,0BAAA;ECZF,eAAA;EDwBA,uEAAA;E4DnCE,oBAAA;EACA,mBAAA;EACA,sBAAA;A;AAIF;E3DUA,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;E4DxBI,QAAA;A;AxD6BF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;EIQI,iBAAA;A;AAHF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AwD1BJ;EAEI,uBAAA;EACA,gBAAA;EACA,mBAAA;A;AAOJ;E3DZA,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;E4DFI,SAAA;A;AxDOF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,cAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;EIQI,iBAAA;A;AAHF;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,iBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;AwDLN;EAEI,8BAAA;A;AAIF;EAEI,SAAA;A;AxDNF;EACE,mBAAA;EwDSE,SAAA;ExDPF,iBAAA;A;AyDiCN;EAEI,eAAA;EXwBF,WAAA;EACA,YAAA;EACA,aAAA;A;AAGF;EAUI,WAAA;EACA,YAAA;EACA,YAAA;A;AAGF;EpDhEA,eAAA;EACA,kBAAA;EAUE,iBAAA;EACA,gBAAA;A;AoD+DJ;EpD9GE,kBAAA;EACA,QAAA;EACA,YAAA;EGTA,YAAA;EAAc,aAAA;EHeZ,SAAA;EACA,WAAA;EACA,gCAAA;A;AoDuSJ;ElDjTI,0BAAA;ECZF,eAAA;EDwBA,mEAAA;A;A6DqDA;;EAGI,WAAA;EACA,YAAA;A;AA/FN;EAEI,qBAAA;EACA,kBAAA;EACA,sBAAA;EACA,YAAA;EACA,aAAA;EACA,6BAAA;EACA,kBAAA;EACA,cAAA;EACA,qBAAA;EACA,eAAA;EACA,iBAAA;EACA,iBAAA;A;AAGF;E/DUA,kBAAA;EACA,QAAA;EACA,YAAA;EGTA,YAAA;EAAc,aAAA;EHeZ,SAAA;EACA,WAAA;EACA,gCAAA;A;A+DmGJ;EA9GM,eAAA;EACA,oBAAA;A;AAKN;EAEI,mBAAA;EACA,oBAAA;EACA,uBAAA;A;AAIJ;EAEI,qBAAA;A;AAIF;EAEI,aAAA;A;AAKN;E/DSE,eAAA;EACA,kBAAA;A;A+DFA;EAEI,aAAA;A;AAIF;EAEI,qBAAA;A;AAsCR;ElDhCE,uBAAA;EACA,oBAAA;EACA,mBAAA;EACA,wBAAA;EACA,gCAAA;EACA,kCAAA;EAEA,6CAAA;EAGE,+BAAA;A;AAIJ;;EAGI,kBAAA;EACA,kBAAA;EACA,UAAA;EACA,oBAAA;EACA,WAAA;A;AAIJ;EAGI,6DAAA;EX5EA,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AW6EF;EXzFI,UAAA;ECZF,eAAA;EDwBA,qCAAA;A;AWyFA;EAEI,+CAAA;A;AAIJ;EAEI,MAAA;EVpHJ,YAAA;EAAc,aAAA;EUsHV,OAAA;EACA,mBAAA;EACA,+BAAA;A;AAMJ;EAEI,6BAAA;EVhIJ,YAAA;EAAc,aAAA;EUkIV,+BAAA;A;AAMJ;EAEI,yFAAA;A;AAQJ;EAEI,0CAAA;EAKA,gGAAA;A;AA0CN;;EAGI,oBAAA;EVtMF,YAAA;EAAc,aAAA;EUwMZ,qBAAA;EACA,WAAA;EACA,YAAA;A;AAKF;;EAGI,2CAAA;EVlNJ,YAAA;EAAc,aAAA;EUoNV,6CAAA;EACA,sCAAA;EACA,uCAAA;A;AAIJ;EAEI,sCAAA;EACA,uCAAA;A;AI9HJ;EfxFE,sBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;A6DkFA;EAGI,oBAAA;EACA,UAAA;A;ACnIN;EAEI,aAAA;EACA,eAAA;EAEA,cAAA;EACA,UAAA;A;AAIJ;;EAII,kBAAA;EACA,sBAAA;A;AAIJ;EAEI,qBAAA;A;AAIJ;EAEI,WAAA;A;AAKJ;EAEI,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;EACA,YAAA;EAEA,4BAAA;EACA,2BAAA;EACA,sBAAA;A;AAsEJ;EAEI,8BAAA;A;AAUJ;EChFE,gBAAA;A;AD0FF;EC1FE,yBAAA;EAAA,0BAAA;EAAA,6BAAA;EAAA,4BAAA;A;ADKF;ECjBI,0BAAA;ECZF,eAAA;EDwBA,uEAAA;EDWE,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,sBAAA;EACA,cAAA;EACA,iBAAA;A;AAIJ;EIsOE,kCAAA;EACA,mCAAA;EHvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,0BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EGoQA,uBAAA;EACA,mBAAA;EACA,gBAAA;A;AJ3OF;EAEI,kBAAA;EACA,SAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;EAIA,8BAAA;EACA,WAAA;A;AAMJ;EAEI,cAAA;A;AAGF;EAEI,0BAAA;A;AAIJ;EAEI,cAAA;EACA,YAAA;A;AK/GR;EAEI,sCAAA;EAIA,sCAAA;EAIA,4CAAA;EARA,qCAAA;EAIA,qCAAA;EAIA,2CAAA;EARA,oCAAA;EAIA,oCAAA;EAIA,0CAAA;A;ACiCA;EDzBJ;IC+DE,sBAAA;IACA,cAAA;IACA,aAAA;IAEA,oDAAA;E;A;AA/CE;EDpBJ;IC+DE,sBAAA;IACA,cAAA;IACA,aAAA;IAEA,mDAAA;E;A;AApDE;EDfJ;IC+DE,sBAAA;IACA,cAAA;IACA,aAAA;IAEA,kDAAA;E;A;AA1CE;EDfJ;ICqEE,aAAA;IACA,mBAAA;IACA,oBAAA;IACA,aAAA;IAEA,kEAAA;E;EAEA;ID5EF;MC6EI,aAAA;MACA,SAAA;MACA,cAAA;MAEA,qDAAA;MACA,iDAAA;I;E;A;AAxEA;EDVJ;ICqEE,aAAA;IACA,mBAAA;IACA,oBAAA;IACA,YAAA;IAEA,iEAAA;E;EAEA;ID5EF;MC6EI,aAAA;MACA,SAAA;MACA,cAAA;MAEA,oDAAA;MACA,gDAAA;I;E;A;AA7EA;EDLJ;ICqEE,aAAA;IACA,mBAAA;IACA,oBAAA;IACA,YAAA;IAEA,gEAAA;E;EAEA;ID5EF;MC6EI,aAAA;MACA,SAAA;MACA,cAAA;MAEA,mDAAA;MACA,gDAAA;I;E;A;AAnEA;EDJJ;IC0BE,kCAAA;IAEA,yEAAA;IAyDA,sBAAA;IACA,YAAA;IAEA,6DAAA;E;EA1DA;ID9BF;MC+BI,WAAA;MACA,uBAAA;I;E;EA0DF;ID1FF;MC2FI,SAAA;I;E;ED9Ea;;ICaf,iCAAA;IAEA,wEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,wBAAA;I;E;;EDnBa;;ICaf,kCAAA;IAEA,yEAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,wBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,+DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,wBAAA;I;E;A;AAjCA;EDCJ;IC0BE,uBAAA;IAEA,6DAAA;IAyDA,sBAAA;IACA,WAAA;IAEA,4DAAA;E;EA1DA;ID9BF;MC+BI,WAAA;MACA,uBAAA;I;E;EA0DF;ID1FF;MC2FI,SAAA;I;E;ED9Ea;;ICaf,yBAAA;IAEA,+DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,yBAAA;IAEA,+DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,yBAAA;IAEA,+DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,yBAAA;IAEA,+DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,8DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;A;AAtCA;EDMJ;IC0BE,wBAAA;IAEA,6DAAA;IAyDA,sBAAA;IACA,WAAA;IAEA,2DAAA;E;EA1DA;ID9BF;MC+BI,WAAA;MACA,uBAAA;I;E;EA0DF;ID1FF;MC2FI,SAAA;I;E;ED9Ea;;ICaf,uBAAA;IAEA,4DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,4DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,uBAAA;IAEA,4DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;;EDnBa;;ICaf,wBAAA;IAEA,6DAAA;E;EAEA;IDjBe;;MCkBb,WAAA;MACA,uBAAA;I;E;A;ADRA;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,QAAA;A;ADxEE;ECwEF,SAAA;A;ADxEE;ECwEF,SAAA;A;ADxEE;ECwEF,SAAA;A;ADlEA;ECuEE,sBAAA;A;AAEA;EDzEF;IC0EI,iBAAA;E;A;ADtEJ;EC2EE,kBAAA;A;ADvEF;EC2EE,oBAAA;A;AAEA;ED7EF;IC8EI,eAAA;E;A;AAhHF;EDuCJ;IC2FE,aAAA;IAGA;;;;GAAA;E;A;AA1IE;ED4CJ;IC2FE,YAAA;IAGA;;;;GAAA;E;A;AA/IE;EDiDJ;IC2FE,YAAA;IAGA;;;;GAAA;E;A;AD7EF;EACE,kBAAA;EACA,cAAA;A;AAGF;EACE,eAAA;EACA,iBAAA;A;AE1GA;EACE;IACE,wBAAA;E;EAGF;IACE,mEAAA;IACA,wBAAA;E;EAGF;IACE,2EAAA;IrE8BA,gCAAA;ICZF,eAAA;IDwBA,yEAAA;E;EqE5BA;IrEgBE,kCAA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FE,sBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae4EA;EfxFE,sBAAA;ECZF,eAAA;EDwBA,+CAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae0SA;EftTE,aAAA;ECZF,eAAA;EDwBA,kDAAA;A;Ae4EA;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae0SA;EftTE,aAAA;ECZF,eAAA;EDwBA,kDAAA;A;Ae4EA;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;Ef3PA,8DAAA;A;Ae8UA;Ef1VE,aAAA;ECZF,eAAA;EDwBA,iDAAA;A;Ae4EA;EfxFE,yBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,YAAA;ECZF,eAAA;EDwBA,6CAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,YAAA;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AAA;A;AAKF;;EAGI,2CAAA;EVlNJ,YAAA;EAAc,aAAA;EUoNV,6CAAA;EACA,sCAAA;EACA,uCAAA;A;AAIJ;EAEI,sCAAA;EACA,uCAAA;A;AoGzPR;E/GmCM,WAAA;ECZF,eAAA;EDwBA,0CAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,sFAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,kEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,kEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,oEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,qEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,oEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,oEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,sEAAA;A;AgH8RA;EhH1SE,mBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AgHqTA;EhHjUE,gBAAA;ECZF,eAAA;EDwBA,kFAAA;A;AgH8UF;EhH1VI,yHAAA;ECZF,eAAA;EDwBA,uFAAA;EAAA,iJAAA;A;AgH8UF;EhH1VI,wHAAA;ECZF,eAAA;EDwBA,gGAAA;EAAA,gJAAA;A;AgHoVF;EhHhWI,YAAA;ECZF,eAAA;EDwBA,6CAAA;A;AgHoWA;EhHhXE,aAAA;ECZF,eAAA;EDwBA,wDAAA;A;AgH2WF;EhHvXI,mBAAA;ECZF,eAAA;EDwBA,mDAAA;A;AgHiXF;EhH7XI,WAAA;ECZF,eAAA;EDwBA,2CAAA;A;AgHqXF;EhHjYI,wBAAA;ECZF,eAAA;EDwBA,wDAAA;A;AgHyYF;EhHrZI,UAAA;ECZF,eAAA;EDwBA,8EAAA;A;AgHyYF;EhHrZI,UAAA;ECZF,eAAA;EDwBA,uFAAA;A;AgHyYF;EhHrZI,UAAA;ECZF,eAAA;EDwBA,gFAAA;A;AgHyYF;EhHrZI,UAAA;ECZF,eAAA;EDwBA,yFAAA;A;AgHiaF;EhH7aI,aAAA;ECZF,eAAA;EDwBA,+DAAA;A;AgHiaF;EhH7aI,aAAA;ECZF,eAAA;EDwBA,iEAAA;A;AgHmbF;EhH/bI,WAAA;ECZF,eAAA;EDwBA,iDAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,kDAAA;A;AgHmbF;EhH/bI,WAAA;ECZF,eAAA;EDwBA,mDAAA;EAZE,YAAA;ECZF,eAAA;EDwBA,oDAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,uGAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,uGAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,yGAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,+EAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,+EAAA;A;Ae4EA;;EfxFE,yBAAA;ECZF,eAAA;EDwBA,iFAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,mEAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,mEAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,YAAA;ECZF,eAAA;EDwBA,oEAAA;A;Ae2PA;Ef3PA,oFAAA;A;AegJA;Ef5JE,aAAA;ECZF,eAAA;EDwBA,qEAAA;A;AeuLE;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,qEAAA;A;AeuOE;EAEI,gCAAA;A;AAKF;EAEI,yBAAA;Ef5PN,YAAA;ECZF,eAAA;EDwBA,sEAAA;A;Ae2PA;Ef3PA,sFAAA;A;AgHghBF;EhH5hBI,YAAA;ECZF,eAAA;EDwBA,gDAAA;EAZE,WAAA;ECZF,eAAA;EDwBA,+CAAA;A;AgHuhBF;EhHniBI,YAAA;ECZF,eAAA;EDwBA,4CAAA;A;AgHmiBF;EhH/iBI,aAAA;ECZF,eAAA;EDwBA,uDAAA;A;AgH+jBF;EhH3kBI,mBAAA;ECZF,eAAA;EDwBA,2DAAA;A;AgH+jBF;EhH3kBI,mBAAA;ECZF,eAAA;EDwBA,iEAAA;A;AgH+jBF;EhH3kBI,mBAAA;ECZF,eAAA;EDwBA,iEAAA;A;AgH+jBF;EhH3kBI,mBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AgH+jBF;EhH3kBI,mBAAA;ECZF,eAAA;EDwBA,oEAAA;A;AgH2lBF;EhHvmBI,mBAAA;ECZF,eAAA;EDwBA,6DAAA;A;AgH2lBF;EhHvmBI,mBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AgH2lBF;EhHvmBI,mBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AgH2lBF;EhHvmBI,mBAAA;ECZF,eAAA;EDwBA,qEAAA;A;AgH2lBF;EhHvmBI,mBAAA;ECZF,eAAA;EDwBA,sEAAA;A;AgHimBF;EhH7mBI,kBAAA;ECZF,eAAA;EDwBA,iDAAA;A;AkBaA;E8FiUF;I7GrHI,eAAA;E;E6GqHJ;I7GrHI,eAAA;E;E6G2IF;IhHhXE,UAAA;ICZF,eAAA;IDwBA,qDAAA;E;;EgHyYF;IhHrZI,gBAAA;ICZF,eAAA;IDwBA,uDAAA;E;;EgHyYF;IhHrZI,cAAA;ICZF,eAAA;IDwBA,8DAAA;E;;EgHyYF;IhHrZI,gBAAA;ICZF,eAAA;IDwBA,yDAAA;E;;EgHyYF;IhHrZI,cAAA;ICZF,eAAA;IDwBA,gEAAA;E;;EgHiaF;IhH7aI,UAAA;ICZF,eAAA;IDwBA,4DAAA;E;;EgHiaF;IhH7aI,UAAA;ICZF,eAAA;IDwBA,8DAAA;E;;EgHmiBF;IhH/iBI,UAAA;ICZF,eAAA;IDwBA,oDAAA;E;A;AiHkEF;E5GwLE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,4GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,2EAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,sEAAA;EkH8CA,kBAAA;A;ADsEF;EjHpHE,yBAAA;A;AiH8HF;EjH9HE,0BAAA;EiHkIE,kBAAA;A;AA5DJ;ECxBE,kBAAA;A;AD4BF;EAEI,WAAA;EACA,YAAA;EACA,eAAA;A;AAsCJ;EjHhII,cAAA;ECZF,eAAA;EDwBA,wCAAA;A;AiH8HF;EjH1II,cAAA;ECZF,eAAA;EDwBA,wCAAA;EiHkIE,kBAAA;A;AA5CJ;EAEI,gBAAA;A;AAzHJ;EA2PE,eAAA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AAc,aAAA;I6B2FV,wEAAA;E;EAIF;IACE,2EAAA;I7BhGJ,YAAA;IAAc,aAAA;I6BuGV,yEAAA;E;EAIF;I7B3GF,YAAA;IAAc,aAAA;I6B6GV,uEAAA;E;A;A2FkDN;ExH/JE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AqH4pDN;E3FzhDE,4BAAA;A;A2F6hDF;E3F7hDE,0CAAA;A;AEyIF;EAEI,4BAAA;A;AyF9HJ;ExH3KE,YAAA;EAAc,aAAA;EwH01Cd,eAAA;ExH11CA,YAAA;EAAc,aAAA;EwH41Cd,gBAAA;A;AA8WF;E3F5iDE,4BAAA;A;A2FgjDF;E3FhjDE,0CAAA;A;A2FwBF;EAEI,aAAA;EACA,8BAAA;EACA,sBAAA;A;AAGF;EAEI,mBAAA;EACA,kBAAA;A;AAUN;EAEI,sBAAA;A;AAusEJ;EzHh4EE,6BAAA;A;AgC8DF;;;EAII,iBAAA;A;AyFijDJ;EAGI,UAAA;A;AzFviDJ;EAEI,gBAAA;A;AAFJ;EAEI,cAAA;A;AD9DF;E/B/BE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;A+BSA;E/BrBE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;AyHg4EF;EzH54EI,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;A0H+BF;E1H3CI,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;AyHo5BF;EzHh6BI,oBAAA;ECZF,eAAA;EDwBA,4CAAA;A;A4HsFF;E5HlGI,cAAA;ECZF,eAAA;EDwBA,sCAAA;A;A+BmBA;E/B/BE,4BAAA;ECZF,eAAA;EDwBA,oDAAA;A;AgCkDF;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AgCkDF;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AgCkDF;;;EhC9DI,qBAAA;ECZF,eAAA;EDwBA,6CAAA;A;AyHimDF;EAEI,UAAA;A;AAp5CJ;EA61CE,oBAAA;A;AA+wBF;EzH3zEE,0BAAA;A;AyHk6EF;EAGE;IzHr6EA,0BAAA;E;A;AyH06EF;EAGE;IzH76EA,0BAAA;E;A;AyHg4EF;EzHh4EE,0BAAA;A;A0HqBF;E1HrBE,0BAAA;A;A2HqBF;;E3HrBE,0BAAA;A;A4H4EF;E5H5EE,yBAAA;A;A4HsFF;E5HtFE,yBAAA;A;AyHy4EA;EzHz4EA,0BAAA;A;AyHm5EA;EzHn5EA,0BAAA;A;A+BmBA;E/BnBA,wCAAA;A;AgCkDF;;;EhClDE,iCAAA;A;AyHk6EF;EAGE;IzHr6EA,eAAA;E;A;AyH06EF;EAGE;IzH76EA,eAAA;E;A;AkBaA;EuGm3EF;IzHh4EE,eAAA;E;A;AkBaA;EwGQF;I1HrBE,eAAA;E;A;AkBaA;EyGQF;;I3HrBE,eAAA;E;A;AkBaA;E0G+DF;I5H5EE,eAAA;E;A;AkBaA;E0GyEF;I5HtFE,eAAA;E;A;AkBaA;EuG43EA;IzHz4EA,eAAA;E;A;AkBaA;EuGs4EA;IzHn5EA,eAAA;E;A;AkBaA;EaMA;I/BnBA,6BAAA;E;A;AkBaA;EcqCF;;;IhClDE,sBAAA;E;A;AkBSA;EuGqhDA;IAEI,wBAAA;E;EAIJ;IAEI,UAAA;E;A;AASN;EAEI,eAAA;A;AA/1CF;EzHlNA,yBAAA;A;AyHqkDF;EAII,aAAA;A;AAn3CF;EAs2CA,oBAAA;A;AAwpBF;ExHvuEE,YAAA;EAAc,aAAA;EwH2uEZ,iBAAA;A;ArHntEA;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EwHivEV,gBAAA;ErHttEA,iBAAA;A;AAHF;EACE,mBAAA;EAEA,iBAAA;A;AqHmuEF;;;ExH9vEF,YAAA;EAAc,aAAA;EwHiwEV,cAAA;A;AAGF;ExHpwEF,YAAA;EAAc,aAAA;EwHswEV,eAAA;ExHtwEJ,YAAA;EAAc,aAAA;EwHwwEV,kBAAA;A;AAGF;ExH3wEF,YAAA;EAAc,aAAA;EwH6wEV,kBAAA;ExH7wEJ,YAAA;EAAc,aAAA;EwH+wEV,gBAAA;A;AAKF;EACE,QAAA;A;AAGF;EACE,QAAA;A;AAGF;EACE,QAAA;A;AAGF;EACE,QAAA;A;AAGF;EACE,QAAA;A;ArH7wEF;EACE,mBAAA;EAEA,iBAAA;A;AqHwxEF;ExHnzEF,YAAA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,kFAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,oFAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,+EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,mFAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,+EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,6EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,+EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,0EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,8EAAA;A;A8H3BE;E9HeA,sCAAA;ECZF,eAAA;EDwBA,0EAAA;A;A8H3BE;E9HeA,wBAAA;ECZF,eAAA;EDwBA,8DAAA;A;A8H3BE;E9HeA,2CAAA;ECZF,eAAA;EDwBA,mFAAA;A;A8H3BE;E9HeA,2CAAA;ECZF,eAAA;EDwBA,8EAAA;A;A8H3BE;E9HeA,2CAAA;ECZF,eAAA;EDwBA,kFAAA;A;A8H3BE;E9HeA,2CAAA;ECZF,eAAA;EDwBA,8EAAA;A;A8HXA;E9HDE,qCAAA;ECZF,eAAA;EDwBA,8DAAA;A;A8HXA;E9HDE,qCAAA;ECZF,eAAA;EDwBA,gEAAA;A;A+HVF;ECFI,kBAAA;ECZF,eAAA;EDwBA,0CAAA;A;ADNF;;ECNI,kBAAA;ECZF,eAAA;EDwBA,0CAAA;A;AD+BA;EC3CE,YAAA;ECZF,eAAA;EDwBA,mDAAA;A;ADsEF;ECtEE,oCAAA;A;ADeA;EC3BE,qBAAA;ECZF,eAAA;EDwBA,iDAAA;EDqBE,uBAAA;A;AAgGF;EACE,UAAA;A;AAWF;EACE,wGAAA;A;AAYF;EACE,uDAAA;A;AA3FF;EChEE,0BAAA;ECZF,eAAA;EDwBA,kEAAA;A;ADwDA;ECxDA,yBAAA;A;AD4DA;ECxEE,cAAA;ECZF,eAAA;EDwBA,wCAAA;A;AEgBF;EAEI,eAAA;EACA,aAAA;A;AH+DF;EClFA,sBAAA;A;ADwFA;;ECxFA,sBAAA;A;AE2BF;EAEI,kBAAA;A;AAIJ;;;EAII,oBAAA;A;AAGF;;;EAEI,qBAAA;ED7DJ,YAAA;EAAc,aAAA;ECkEV,YAAA;EACA,kBAAA;A;AAKN;ECqME,kCAAA;EACA,mCAAA;EHvQE,+BAAA;ECZF,eAAA;EDwBA,6GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,4EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,uEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,qEAAA;EEiEE,iBAAA;EACA,gBAAA;EACA,eAAA;EACA,gBAAA;EACA,gBAAA;EACA,gBAAA;EACA,sBAAA;EACA,gBAAA;EACA,kBAAA;A;AAnBF;EE9FA,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,MAAA;EACA,OAAA;EACA,6BAAA;EACA,sBAAA;EACA,WAAA;EACA,oBAAA;A;AF2GA;EG6IE,eAAA;EACA,yHAAA;EH1IE,uBAAA;EACA,kBAAA;EACA,aAAA;EACA,sBAAA;EACA,iBAAA;EACA,gBAAA;EACA,eAAA;EACA,gBAAA;EACA,kBAAA;A;AGkKN;EL1PE,WAAA;EAAA,YAAA;EKgQI,MAAA;EJnRJ,YAAA;EAAc,aAAA;EIqRV,OAAA;A;AHtKJ;ED/GA,YAAA;EAAc,aAAA;ECkHV,gBAAA;A;AI1FF;EACE,mBAAA;ELzBJ,YAAA;EAAc,aAAA;ECqHR,iBAAA;EI1FF,iBAAA;A;AJ+FJ;EC+LA,cAAA;EA+DE,aAAA;EACA,eAAA;EACA,iBAAA;EA7GF,kCAAA;EACA,mCAAA;EHvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,kEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,8EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;EE+GI,aAAA;A;ACyQN;EAyCA,qBAAA;EACA,QAAA;EACA,YAAA;EACA,WAAA;EAxCI,iBAAA;A;ADzQF;ECuIA,kCAAA;EACA,mCAAA;EHvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;EEsHI,+BAAA;EACA,WAAA;ED1IJ,YAAA;EAAc,aAAA;EC4IV,gBAAA;A;AIpHF;EACE,mBAAA;ELzBJ,YAAA;EAAc,aAAA;EC+IR,iBAAA;EIpHF,iBAAA;A;AJyHJ;EAEI,qBAAA;A;AAKN;EAEI,UAAA;A;AAIJ;EAEI,UAAA;EACA,qBAAA;EACA,+BAAA;A;AAGF;EAEI,mBAAA;EACA,UAAA;A;AAIJ;EAEI,mBAAA;A;AAKN;;EAII,kBAAA;EACA,YAAA;EACA,WAAA;EAIA,0DAAA;A;AG6EJ;;EL1PE,WAAA;EAAA,YAAA;EKgQI,MAAA;EJnRJ,YAAA;EAAc,aAAA;EIqRV,OAAA;A;AHjFN;EGwCI,eAAA;EACA,yHAAA;EHtCA,8BAAA;EACA,WAAA;A;AKlON;EvIiCM,yBAAA;ECZF,eAAA;EDwBA,mDAAA;EAAA,YAAA;EuIzCF,aAAA;EACA,eAAA;EACA,sBAAA;EACA,8BAAA;EACA,sBAAA;EACA,WAAA;EACA,UAAA;A;ACWA;;ExIYI,WAAA;ECZF,eAAA;EDwBA,wCAAA;A;Ae4EA;;;EfxFE,sBAAA;ECZF,eAAA;EDwBA,4EAAA;A;AegJA;;;Ef5JE,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuLE;;;EAsBA,yBAAA;EfzNA,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;AeuOE;;EAEI,gCAAA;A;AAKF;;EAEI,yBAAA;Ef5PN,aAAA;ECZF,eAAA;EDwBA,8CAAA;A;Ae2PA;;Ef3PA,8DAAA;A;AuIjCF;EACE,aAAA;EACA,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;A;AAGF;EACE,oBAAA;EACA,cAAA;EACA,mBAAA;EACA,YAAA;EACA,iBAAA;EAEA,UAAA;A;AAEA;EACE,2BAAA;EACA,SAAA;A;AAGF;EACE,yBAAA;EACA,QAAA;A;AAIJ;ElI+PE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,wEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EuIDA,uBAAA;EACA,mBAAA;EACA,gBAAA;EACA,UAAA;A;AnIGE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AoIZN;EvIfE,YAAA;EAAc,aAAA;EDmBd,yBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,0BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gCAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,4BAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,yBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,0BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,6BAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,+BAAA;EIQI,iBAAA;A;AmIER;EACE,MAAA;EtI9BE,YAAA;EAAc,aAAA;EsIgChB,WAAA;EtIhCE,YAAA;EAAc,aAAA;EsIkChB,OAAA;EACA,WAAA;EACA,oDAAA;A;AnIZI;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EsIwCd,QAAA;EtIxCA,YAAA;EAAc,aAAA;EsI0Cd,UAAA;EnIfI,iBAAA;A;AmIkBN;EACE,YAAA;A;AAGF;EACE,YAAA;A;AAGF;EACE,sDAAA;EAEA,UAAA;A;AAIJ;EpIgLM,eAAA;EACA,0HAAA;EoI9KJ,WAAA;EACA,oDAAA;A;AAEA;EACE,aAAA;A;AAGF;EACE,sDAAA;A;AAMJ;EACE,YAAA;A;AAEA;EtIhFE,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EIQI,iBAAA;A;AmI2DN;EACE,YAAA;A;AAGF;EACE,cAAA;A;AAGF;EtI9FE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;A;AIKE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AmI6EN;EACE,aAAA;A;AAGF;EACE,oBAAA;EACA,mBAAA;A;AAGF;;EAEE,sBAAA;A;AAKJ;EACE,mCAAA;A;AAGF;EpIgHM,eAAA;EACA,0HAAA;EoI9GJ,mCAAA;A;AAMA;EACE,YAAA;A;AAGF;EACE,eAAA;A;AAGF;EtI7IE,YAAA;EAAc,aAAA;EDmBd,kBAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,gBAAA;EuI6HA,mBAAA;A;AnIxHE;EACE,mBAAA;EHzBJ,YAAA;EAAc,aAAA;EDmBd,eAAA;ECnBA,YAAA;EAAc,aAAA;EDmBd,mBAAA;EIQI,iBAAA;A;AmI0HR;EACE,iBAAA;A;AAGF;EACE,iBAAA;A;AAGF;EACE,iBAAA;A;AAGF;EACE,kBAAA;A;AAGF;EACE,iBAAA;A;ACzIA;EACE;IACE,YAAA;E;;EAGF;IACE,YAAA;E;;EAGF;IACE,oDAAA;E;;EAIF;IACE,oDAAA;E;EAGA;IvI/CF,YAAA;IAAc,aAAA;IDmBd,eAAA;ICnBA,YAAA;IAAc,aAAA;IDmBd,mBAAA;E;EIKE;IACE,mBAAA;IHzBJ,YAAA;IAAc,aAAA;IDmBd,kBAAA;ICnBA,YAAA;IAAc,aAAA;IDmBd,gBAAA;IIQI,iBAAA;E;;EoI8BF;IACE,mBAAA;E;;EAIJ;IACE,iBAAA;E;A;AnI8IJ;EAgEE,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,kEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,2BAAA;ECZF,eAAA;EDwBA,2EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,+BAAA;ECZF,eAAA;EDwBA,+EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,kEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,sBAAA;ECZF,eAAA;EDwBA,sEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,gEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,8EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,4DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,sBAAA;ECZF,eAAA;EDwBA,sEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,wEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,iEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,0BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,+GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,kEAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,8EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,yEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,uEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,eAAA;ECZF,eAAA;EDwBA,sDAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,4DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,2GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,yDAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,0EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,mEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,6GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,+DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,4EAAA;EAZE,wBAAA;ECZF,eAAA;EDwBA,uEAAA;EAZE,uBAAA;ECZF,eAAA;EDwBA,qEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,4GAAA;EAZE,mBAAA;ECZF,eAAA;EDwBA,2DAAA;EAZE,oBAAA;ECZF,eAAA;EDwBA,8DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,0DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,2EAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,mEAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,sEAAA;A;AK+LA;EA2DA,kCAAA;EACA,mCAAA;ELvQE,+BAAA;ECZF,eAAA;EDwBA,8GAAA;EAZE,kBAAA;ECZF,eAAA;EDwBA,4DAAA;EAZE,iBAAA;ECZF,eAAA;EDwBA,6DAAA;EAZE,gBAAA;ECZF,eAAA;EDwBA,4DAAA;EAZE,8BAAA;ECZF,eAAA;EDwBA,6EAAA;EAZE,qBAAA;ECZF,eAAA;EDwBA,qEAAA;EAZE,yBAAA;ECZF,eAAA;EDwBA,wEAAA;A","sources":["tropicbird.scss","node_modules/@material/banner/_banner-theme.scss","node_modules/@material/banner/node_modules/@material/theme/_css.scss","node_modules/@material/banner/node_modules/@material/theme/_gss.scss","node_modules/@material/banner/_banner.scss","node_modules/@material/banner/node_modules/@material/rtl/_rtl.scss","node_modules/@material/banner/node_modules/@material/elevation/_elevation-theme.scss","node_modules/@material/banner/node_modules/@material/button/_button-shared-theme.scss","node_modules/@material/banner/node_modules/@material/ripple/_ripple-theme.scss","node_modules/material-components-web/node_modules/@material/touch-target/_touch-target.scss","node_modules/material-components-web/node_modules/@material/elevation/_elevation.scss","node_modules/material-components-web/node_modules/@material/theme/_css.scss","node_modules/material-components-web/node_modules/@material/theme/_gss.scss","node_modules/material-components-web/node_modules/@material/button/_button-base.scss","node_modules/material-components-web/node_modules/@material/elevation/_elevation-theme.scss","node_modules/material-components-web/node_modules/@material/rtl/_rtl.scss","node_modules/material-components-web/node_modules/@material/typography/_typography.scss","node_modules/material-components-web/node_modules/@material/button/_button-text.scss","node_modules/material-components-web/node_modules/@material/button/_button-shared-theme.scss","node_modules/material-components-web/node_modules/@material/button/_button-filled.scss","node_modules/material-components-web/node_modules/@material/button/_button-protected.scss","node_modules/material-components-web/node_modules/@material/button/_button-outlined.scss","node_modules/material-components-web/node_modules/@material/ripple/_ripple.scss","node_modules/material-components-web/node_modules/@material/animation/_animation.scss","node_modules/material-components-web/node_modules/@material/button/_button-ripple.scss","node_modules/material-components-web/node_modules/@material/button/_button.scss","node_modules/material-components-web/node_modules/@material/ripple/_ripple-theme.scss","node_modules/material-components-web/node_modules/@material/button/_button-outlined-theme.scss","node_modules/material-components-web/node_modules/@material/card/_mixins.scss","node_modules/material-components-web/node_modules/@material/dom/_dom.scss","node_modules/material-components-web/node_modules/@material/card/_variables.scss","node_modules/material-components-web/node_modules/@material/checkbox/_checkbox.scss","node_modules/material-components-web/node_modules/@material/checkbox/_checkbox-theme.scss","node_modules/material-components-web/node_modules/@material/chips/deprecated/trailingaction/_mixins.scss","node_modules/material-components-web/node_modules/@material/chips/deprecated/trailingaction/_variables.scss","node_modules/material-components-web/node_modules/@material/chips/deprecated/_mixins.scss","node_modules/material-components-web/node_modules/@material/chips/deprecated/_variables.scss","node_modules/@material/circular-progress/_mixins.scss","node_modules/@material/circular-progress/node_modules/@material/theme/_css.scss","node_modules/@material/circular-progress/node_modules/@material/theme/_gss.scss","node_modules/@material/circular-progress/_keyframes.scss","node_modules/material-components-web/node_modules/@material/floating-label/_mixins.scss","node_modules/material-components-web/node_modules/@material/line-ripple/_mixins.scss","node_modules/material-components-web/node_modules/@material/notched-outline/_mixins.scss","node_modules/material-components-web/node_modules/@material/notched-outline/_variables.scss","node_modules/material-components-web/node_modules/@material/select/_select.scss","node_modules/material-components-web/node_modules/@material/select/_select-theme.scss","node_modules/material-components-web/node_modules/@material/select/_select-helper-text-theme.scss","node_modules/material-components-web/node_modules/@material/select/_select-icon-theme.scss","node_modules/material-components-web/node_modules/@material/list/_mixins.scss","node_modules/material-components-web/node_modules/@material/list/_evolution-mixins.scss","node_modules/material-components-web/node_modules/@material/menu-surface/_mixins.scss","node_modules/material-components-web/node_modules/@material/select/_select-filled.scss","node_modules/material-components-web/node_modules/@material/select/_select-outlined.scss","node_modules/material-components-web/node_modules/@material/select/_select-ripple.scss","node_modules/material-components-web/node_modules/@material/select/_select-helper-text.scss","node_modules/material-components-web/node_modules/@material/select/_select-icon.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table-theme.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table-cell.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table-header-cell.scss","node_modules/material-components-web/node_modules/@material/icon-button/_icon-button-theme.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table-progress-indicator.scss","node_modules/material-components-web/node_modules/@material/data-table/_data-table-pagination.scss","node_modules/material-components-web/node_modules/@material/dialog/_mixins.scss","node_modules/material-components-web/node_modules/@material/dialog/_variables.scss","node_modules/material-components-web/node_modules/@material/drawer/_mixins.scss","node_modules/material-components-web/node_modules/@material/drawer/_variables.scss","node_modules/material-components-web/node_modules/@material/fab/_fab.scss","node_modules/material-components-web/node_modules/@material/fab/_fab-theme.scss","node_modules/material-components-web/node_modules/@material/fab/_extended-fab-theme.scss","node_modules/material-components-web/node_modules/@material/form-field/_mixins.scss","node_modules/material-components-web/node_modules/@material/icon-button/_icon-button.scss","node_modules/@material/image-list/_mixins.scss","node_modules/@material/image-list/node_modules/@material/theme/_css.scss","node_modules/@material/image-list/node_modules/@material/theme/_gss.scss","node_modules/@material/image-list/_variables.scss","node_modules/@material/image-list/node_modules/@material/typography/_typography.scss","node_modules/material-components-web/node_modules/@material/layout-grid/mdc-layout-grid.scss","node_modules/material-components-web/node_modules/@material/layout-grid/_mixins.scss","node_modules/material-components-web/node_modules/@material/linear-progress/_keyframes.scss","node_modules/material-components-web/node_modules/@material/linear-progress/_mixins.scss","node_modules/material-components-web/node_modules/@material/linear-progress/_variables.scss","node_modules/material-components-web/node_modules/@material/list/_variables.scss","node_modules/material-components-web/node_modules/@material/list/_evolution-variables.scss","node_modules/material-components-web/node_modules/@material/menu/_mixins.scss","node_modules/material-components-web/node_modules/@material/menu-surface/_variables.scss","node_modules/@material/radio/node_modules/@material/touch-target/_touch-target.scss","node_modules/@material/radio/_radio.scss","node_modules/@material/radio/node_modules/@material/theme/_css.scss","node_modules/@material/radio/_radio-theme.scss","node_modules/@material/radio/node_modules/@material/theme/_gss.scss","node_modules/@material/radio/node_modules/@material/dom/_dom.scss","node_modules/@material/radio/node_modules/@material/ripple/_ripple.scss","node_modules/@material/radio/node_modules/@material/animation/_animation.scss","node_modules/@material/radio/node_modules/@material/ripple/_ripple-theme.scss","node_modules/@material/segmented-button/segmented-button/_segmented-button.scss","node_modules/@material/segmented-button/node_modules/@material/touch-target/_touch-target.scss","node_modules/@material/segmented-button/node_modules/@material/elevation/_elevation.scss","node_modules/@material/segmented-button/node_modules/@material/theme/_css.scss","node_modules/@material/segmented-button/node_modules/@material/theme/_gss.scss","node_modules/@material/segmented-button/segment/_segment-theme.scss","node_modules/@material/segmented-button/segment/_segment.scss","node_modules/@material/segmented-button/node_modules/@material/elevation/_elevation-theme.scss","node_modules/@material/segmented-button/node_modules/@material/typography/_typography.scss","node_modules/@material/segmented-button/segment/_segment-ripple.scss","node_modules/@material/segmented-button/node_modules/@material/ripple/_ripple.scss","node_modules/@material/segmented-button/node_modules/@material/ripple/_ripple-theme.scss","node_modules/@material/slider/node_modules/@material/ripple/_ripple.scss","node_modules/@material/slider/node_modules/@material/animation/_animation.scss","node_modules/@material/slider/_slider.scss","node_modules/@material/slider/node_modules/@material/theme/_css.scss","node_modules/@material/slider/node_modules/@material/theme/_gss.scss","node_modules/@material/slider/node_modules/@material/ripple/_ripple-theme.scss","node_modules/@material/slider/node_modules/@material/rtl/_rtl.scss","node_modules/@material/slider/node_modules/@material/dom/_dom.scss","node_modules/@material/slider/_slider-theme.scss","node_modules/@material/slider/node_modules/@material/typography/_typography.scss","node_modules/@material/slider/node_modules/@material/elevation/_elevation-theme.scss","node_modules/material-components-web/node_modules/@material/snackbar/_mixins.scss","node_modules/material-components-web/node_modules/@material/snackbar/_variables.scss","node_modules/material-components-web/node_modules/@material/switch/_switch.scss","node_modules/material-components-web/node_modules/@material/switch/styles.scss","node_modules/material-components-web/node_modules/@material/switch/_switch-theme.scss","node_modules/material-components-web/node_modules/@material/tab/_mixins.scss","node_modules/material-components-web/node_modules/@material/tab-indicator/_mixins.scss","node_modules/material-components-web/node_modules/@material/tab/_variables.scss","node_modules/material-components-web/node_modules/@material/tab-bar/mdc-tab-bar.scss","node_modules/material-components-web/node_modules/@material/tab-bar/_mixins.scss","node_modules/material-components-web/node_modules/@material/tab-indicator/mdc-tab-indicator.scss","node_modules/material-components-web/node_modules/@material/tab-scroller/mdc-tab-scroller.scss","node_modules/material-components-web/node_modules/@material/tab-scroller/_mixins.scss","node_modules/material-components-web/node_modules/@material/textfield/_mixins.scss","node_modules/material-components-web/node_modules/@material/textfield/helper-text/_mixins.scss","node_modules/material-components-web/node_modules/@material/textfield/character-counter/_mixins.scss","node_modules/material-components-web/node_modules/@material/textfield/icon/_mixins.scss","node_modules/material-components-web/node_modules/@material/textfield/_variables.scss","node_modules/material-components-web/node_modules/@material/theme/_theme.scss","node_modules/@material/tooltip/_tooltip-theme.scss","node_modules/@material/tooltip/node_modules/@material/theme/_css.scss","node_modules/@material/tooltip/node_modules/@material/theme/_gss.scss","node_modules/@material/tooltip/_tooltip.scss","node_modules/@material/tooltip/node_modules/@material/typography/_typography.scss","node_modules/@material/tooltip/node_modules/@material/dom/_dom.scss","node_modules/@material/tooltip/node_modules/@material/elevation/_elevation-theme.scss","node_modules/@material/tooltip/node_modules/@material/rtl/_rtl.scss","node_modules/material-components-web/node_modules/@material/top-app-bar/mdc-top-app-bar.scss","node_modules/material-components-web/node_modules/@material/top-app-bar/_mixins.scss","node_modules/material-components-web/node_modules/@material/top-app-bar/_variables.scss"],"sourcesContent":["@use \"node_modules/material-components-web/material-components-web.scss\";\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/button/button-text-theme';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n@use '@material/typography/typography';\n@use '@material/tokens/resolvers';\n\n$fill-color: surface;\n$text-color: on-surface;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12);\n$graphic-background-color: primary;\n$graphic-color: surface;\n$graphic-shape-radius: 50%;\n$primary-action-text-color: primary;\n$secondary-action-text-color: primary;\n\n$mobile-breakpoint: 480px;\n$z-index: 1;\n\n$light-theme: (\n  action-focus-state-layer-color: theme-color.$primary,\n  action-focus-state-layer-opacity: 0.12,\n  action-focus-label-text-color: null,\n  action-hover-state-layer-color: theme-color.$primary,\n  action-hover-state-layer-opacity: 0.04,\n  action-hover-label-text-color: null,\n  action-label-text-color: theme-color.$primary,\n  // TODO(b/197004146): Support action label typography.\n  action-label-text-font: null,\n  action-label-text-size: null,\n  action-label-text-tracking: null,\n  action-label-text-weight: null,\n  action-pressed-state-layer-color: theme-color.$primary,\n  action-pressed-state-layer-opacity: 0.1,\n  action-pressed-label-text-color: null,\n  container-color: theme-color.$surface,\n  container-elevation: 0,\n  container-shadow-color: null,\n  container-shape: 0,\n  divider-color: $divider-color,\n  divider-height: 1px,\n  supporting-text-color: theme-color.$on-surface,\n  supporting-text-font: typography.get-font(body2),\n  supporting-text-line-height: typography.get-line-height(body2),\n  supporting-text-size: typography.get-size(body2),\n  supporting-text-tracking: typography.get-tracking(body2),\n  supporting-text-weight: typography.get-weight(body2),\n  with-image-image-shape: $graphic-shape-radius,\n  with-image-image-size: 40px,\n);\n\n@mixin theme($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: _resolve-theme($theme, $resolvers);\n  @include keys.declare-custom-properties($theme, banner);\n}\n\n@function _resolve-theme($theme, $resolvers) {\n  @return map.merge(\n    $theme,\n    _resolve-theme-elevation(\n      $theme,\n      map.get($resolvers, elevation),\n      container-elevation\n    )\n  );\n}\n\n@function _resolve-theme-elevation($theme, $resolver, $keys...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $key in $keys {\n    // Resolve the value for each state key.\n    $resolved-value: meta.call(\n      $resolver,\n      $elevation: map.get($theme, $key),\n      $shadow-color: map.get($theme, container-shadow-color)\n    );\n\n    // Update the theme with the resolved value.\n    $theme: map.set($theme, $key, $resolved-value);\n  }\n\n  @return $theme;\n}\n\n@mixin theme-styles(\n  $theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include text-color(map.get($theme, supporting-text-color), $query: $query);\n  @include _supporting-text-typography(\n    (\n      font: map.get($theme, supporting-text-font),\n      size: map.get($theme, supporting-text-size),\n      tracking: map.get($theme, supporting-text-tracking),\n      weight: map.get($theme, supporting-text-weight),\n      line-height: map.get($theme, supporting-text-line-height),\n    ),\n    $query: $query\n  );\n\n  @include graphic-shape-radius(\n    map.get($theme, with-image-image-shape),\n    $query: $query\n  );\n  @include _graphic-size(\n    map.get($theme, with-image-image-size),\n    $query: $query\n  );\n\n  @include fill-color(map.get($theme, container-color), $query: $query);\n  @include divider-color(map.get($theme, divider-color), $query: $query);\n  @include _divider-height(map.get($theme, divider-height), $query: $query);\n  @include _banner-shape(map.get($theme, container-shape), $query: $query);\n  @include _banner-elevation(\n    $resolver,\n    map.get($theme, container-elevation),\n    map.get($theme, container-shadow-color),\n    $query\n  );\n\n  .mdc-button {\n    @include button-text-theme.theme-styles(\n      (\n        focus-label-text-color: map.get($theme, action-focus-label-text-color),\n        focus-state-layer-color: map.get($theme, action-focus-state-layer-color),\n        focus-state-layer-opacity:\n          map.get($theme, action-focus-state-layer-opacity),\n        hover-label-text-color: map.get($theme, action-hover-label-text-color),\n        hover-state-layer-color: map.get($theme, action-hover-state-layer-color),\n        hover-state-layer-opacity:\n          map.get($theme, action-hover-state-layer-opacity),\n        label-text-color: map.get($theme, action-label-text-color),\n        label-text-font: map.get($theme, action-label-text-font),\n        label-text-size: map.get($theme, action-label-text-size),\n        label-text-tracking: map.get($theme, action-label-text-tracking),\n        label-text-weight: map.get($theme, action-label-text-weight),\n        pressed-label-text-color:\n          map.get($theme, action-pressed-label-text-color),\n        pressed-state-layer-color:\n          map.get($theme, action-pressed-state-layer-color),\n        pressed-state-layer-opacity:\n          map.get($theme, action-pressed-state-layer-opacity),\n      ),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Customizes fill color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-theme-color.property-values`.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes text color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-theme-color.property-values`.\n///\n@mixin text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-banner__text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Customizes divider color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-theme-color.property-values`.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-bottom-color, $color);\n  }\n\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin _divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(border-bottom-width, $height);\n  }\n\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-width, $height);\n    }\n  }\n}\n\n///\n/// Customizes the graphic color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-theme-color.property-values`.\n///\n@mixin graphic-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-banner__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the graphic background color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-theme-color.property-values`.\n///\n@mixin graphic-background-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-banner__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the graphic shape radius.\n/// @param {Number} $shape-radius Shape radius in length or percentage.\n///\n@mixin graphic-shape-radius($shape-radius, $query: feature-targeting.all()) {\n  .mdc-banner__graphic {\n    @include shape-mixins.radius($shape-radius, $query: $query);\n  }\n}\n\n///\n/// Sets the min-width for the banner content.\n/// @param {Number} $min-width Minimum width value in `px`.\n/// @param {Number} $mobile-breakpoint Mobile breakpoint value in `px`.\n///\n@mixin min-width(\n  $min-width,\n  $mobile-breakpoint: $mobile-breakpoint,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-banner__content,\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: $min-width;\n\n      // The first media query ensures that banners are always 100% width on\n      // mobile devices, as required by the spec. The second media query\n      // prevents banners from being wider than the viewport for large min-width\n      // values.\n      @media (max-width: $mobile-breakpoint), (max-width: $min-width) {\n        min-width: 100%;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the banner content.\n/// @param {Number} $max-width Maximum width value in `px`.\n///\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-banner__content {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n///\n/// Sets the banner content to centered instead of leading.\n///\n@mixin position-centered($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-banner__content {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      margin-left: auto;\n      margin-right: auto;\n      right: 0;\n    }\n  }\n}\n\n///\n/// Sets the banner content to stacked layout.\n///\n@mixin layout-stacked($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-banner__content {\n      flex-wrap: wrap;\n    }\n\n    .mdc-banner__graphic {\n      margin-bottom: 12px;\n    }\n\n    .mdc-banner__text {\n      @include rtl.reflexive-property(margin, 16px, 8px);\n      padding-bottom: 4px;\n    }\n\n    .mdc-banner__actions {\n      margin-left: auto;\n    }\n  }\n}\n\n// Sets the z-index of the banner.\n// @param {Number} $z-index\n@mixin z-index($z-index, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $z-index;\n  }\n}\n\n// Sets the width of the banner fixed element. Use to adjust the width of the\n// fixed banner in cases where width is not the same as the viewport.\n// @param {Number} $width Width value in `px`.\n@mixin fixed-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n    }\n  }\n}\n\n@mixin _supporting-text-typography(\n  $typography-map,\n  $query: feature-targeting.all()\n) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $font: map.get($typography-map, font);\n  $size: map.get($typography-map, size);\n  $tracking: map.get($typography-map, tracking);\n  $weight: map.get($typography-map, weight);\n  $line-height: map.get($typography-map, line-height);\n\n  .mdc-banner__text {\n    @include feature-targeting.targets($feat-typography) {\n      @include theme.property(letter-spacing, $tracking);\n      @include theme.property(font-size, $size);\n      @include theme.property(font-family, $font);\n      @include theme.property(font-weight, $weight);\n      @include theme.property(line-height, $line-height);\n    }\n  }\n}\n\n@mixin _banner-shape($shape, $query: feature-targeting.all()) {\n  @include shape-mixins.radius($shape, $query: $query);\n}\n\n@mixin _banner-elevation(\n  $resolver,\n  $elevation,\n  $shadow-color,\n  $query: feature-targeting.all()\n) {\n  $elevation-resolver: map.get($resolver, elevation);\n\n  @include elevation-theme.with-resolver(\n    $elevation-resolver,\n    $elevation: $elevation,\n    $shadow-color: $shadow-color,\n    $query: $query\n  );\n}\n\n@mixin _graphic-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-banner__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use 'sass:math';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/button/button-theme';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use './banner-theme';\n\n$_text-type-scale: body2;\n$_min-width: 344px;\n$_max-width: 720px;\n// Minimum banner height minus standard text height, divided by 2 for both top\n// and bottom padding. This is used to support two/three line banners.\n$_text-padding-top-bottom: math.div(52px - 20px, 2);\n\n$_enter-duration: 300ms;\n$_exit-duration: 250ms;\n\n/// Core styles for banner component.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include banner-theme.graphic-color(\n    banner-theme.$graphic-color,\n    $query: $query\n  );\n  @include banner-theme.graphic-background-color(\n    banner-theme.$graphic-background-color,\n    $query: $query\n  );\n  @include banner-theme.min-width($_min-width, $query: $query);\n  @include banner-theme.max-width($_max-width, $query: $query);\n  @include static-styles($query: $query);\n\n  .mdc-banner {\n    @include banner-theme.theme-styles(\n      banner-theme.$light-theme,\n      $query: $query\n    );\n  }\n\n  .mdc-banner__secondary-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, 0, 8px);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-banner {\n    @include banner-theme.z-index(banner-theme.$z-index, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Mobile view styles.\n      @media (max-width: banner-theme.$mobile-breakpoint) {\n        // Span across viewport for fixed mobile view.\n        .mdc-banner__fixed {\n          left: 0;\n          right: 0;\n        }\n\n        .mdc-banner__text {\n          @include rtl.reflexive-property(margin, 16px, 36px);\n        }\n      }\n\n      border-bottom-style: solid;\n      box-sizing: border-box;\n      display: none;\n      flex-shrink: 0;\n      height: 0;\n      position: relative;\n      width: 100%;\n    }\n\n    &.mdc-banner--mobile-stacked {\n      @media (max-width: banner-theme.$mobile-breakpoint) {\n        @include banner-theme.layout-stacked($query: $query);\n      }\n    }\n  }\n\n  .mdc-banner--opening,\n  .mdc-banner--open,\n  .mdc-banner--closing {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n    }\n  }\n\n  .mdc-banner--open {\n    @include feature-targeting.targets($feat-animation) {\n      transition: height $_enter-duration ease;\n    }\n\n    .mdc-banner__content {\n      @include feature-targeting.targets($feat-animation) {\n        transition: transform $_enter-duration ease;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        transform: translateY(0);\n      }\n    }\n  }\n\n  .mdc-banner--closing {\n    @include feature-targeting.targets($feat-animation) {\n      transition: height $_exit-duration ease;\n    }\n\n    .mdc-banner__content {\n      @include feature-targeting.targets($feat-animation) {\n        transition: transform $_exit-duration ease;\n      }\n    }\n  }\n\n  .mdc-banner--centered {\n    @include banner-theme.position-centered($query: $query);\n  }\n\n  .mdc-banner__fixed {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-style: solid;\n      box-sizing: border-box;\n      height: inherit;\n      position: fixed;\n      width: 100%;\n    }\n  }\n\n  .mdc-banner__content {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      min-height: 52px;\n      position: absolute;\n      transform: translateY(-100%);\n      width: 100%;\n    }\n  }\n\n  .mdc-banner__graphic-text-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      width: 100%;\n    }\n  }\n\n  .mdc-banner__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, 16px, 0);\n\n      flex-shrink: 0;\n      margin-top: 16px;\n      margin-bottom: 16px;\n      text-align: center;\n    }\n  }\n\n  .mdc-banner__icon {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n\n  .mdc-banner__text {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, 24px, 90px);\n\n      align-self: center;\n      flex-grow: 1;\n\n      padding-top: $_text-padding-top-bottom;\n      padding-bottom: $_text-padding-top-bottom;\n    }\n  }\n\n  .mdc-banner__actions {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 0, 8px);\n\n      align-self: flex-end;\n      display: flex;\n      flex-shrink: 0;\n      padding-bottom: 8px;\n      padding-top: 8px;\n    }\n  }\n\n  .mdc-banner__secondary-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, 0, 8px);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './button-ripple';\n\n$height: 36px !default;\n$horizontal-padding: 8px !default;\n$contained-horizontal-padding: 16px !default;\n// For a contained button with an icon, the padding on the side of the\n// button with the icon.\n$contained-horizontal-padding-icon: 12px !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$shape-radius: small !default;\n\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-container-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.12\n) !default;\n\n@mixin theme($theme, $resolver, $query: feature-targeting.all()) {\n  @include _label-text-typography(\n    (\n      family: map.get($theme, label-text-font),\n      size: map.get($theme, label-text-size),\n      tracking: map.get($theme, label-text-tracking),\n      weight: map.get($theme, label-text-weight),\n      transform: map.get($theme, label-text-transform),\n    ),\n    $query: $query\n  );\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, container-color),\n      disabled: map.get($theme, disabled-container-color),\n    ),\n    $query: $query\n  );\n\n  @include ink-color(\n    (\n      default: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    ),\n    $query: $query\n  );\n\n  @include icon-color(\n    (\n      default: map.get($theme, with-icon-icon-color),\n      hover: map.get($theme, with-icon-hover-icon-color),\n      focus: map.get($theme, with-icon-focus-icon-color),\n      pressed: map.get($theme, with-icon-pressed-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n    ),\n    $query: $query\n  );\n\n  $icon-size: map.get($theme, with-icon-icon-size);\n  @include _icon-size($icon-size, $query: $query);\n\n  @include _states-colors(\n    (\n      focus: map.get($theme, focus-state-layer-color),\n      hover: map.get($theme, hover-state-layer-color),\n      pressed: map.get($theme, pressed-state-layer-color),\n    ),\n    $query: $query\n  );\n\n  $hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity);\n  $focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity);\n  $pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity);\n  @include ripple-theme.states-opacities(\n    $opacity-map: (\n      focus: $focus-state-layer-opacity,\n      hover: $hover-state-layer-opacity,\n      press: $pressed-state-layer-opacity,\n    ),\n    $ripple-target: button-ripple.$ripple-target,\n    $query: $query\n  );\n\n  $container-height: map.get($theme, container-height);\n  @include height($container-height, $query: $query);\n\n  $container-height-value: if(\n    custom-properties.is-custom-prop($container-height),\n    custom-properties.get-fallback($container-height),\n    $container-height\n  );\n  @if $container-height-value != null and $container-height-value != $height {\n    @include _touch-target-reset($query: $query);\n  }\n\n  $shape: map.get($theme, container-shape);\n  @if $shape {\n    $container-height: if(\n      $container-height != null,\n      $container-height,\n      $height\n    );\n    @include _shape-radius-with-height(\n      $shape,\n      $height: $container-height,\n      $query: $query\n    );\n  }\n\n  @include _elevation(\n    $resolver,\n    $elevation-map: (\n      default: map.get($theme, container-elevation),\n      disabled: map.get($theme, disabled-container-elevation),\n      focus: map.get($theme, focus-container-elevation),\n      hover: map.get($theme, hover-container-elevation),\n      pressed: map.get($theme, pressed-container-elevation)\n    ),\n    $shadow-color: map.get($theme, container-shadow-color),\n    $query: $query\n  );\n}\n\n@function resolve-theme-elevation-keys($theme, $resolver) {\n  $elevation-resolver: map.get($resolver, elevation);\n  $shadow-color: map.get($theme, container-shadow-color);\n  @if $elevation-resolver == null or $shadow-color == null {\n    @return $theme;\n  }\n\n  $elevation-keys: (\n    container-elevation,\n    hover-container-elevation,\n    focus-container-elevation,\n    pressed-container-elevation,\n    disabled-container-elevation\n  );\n\n  @each $key in $elevation-keys {\n    $elevation: map.get($theme, $key);\n    @if $elevation != null {\n      $resolved-value: meta.call(\n        $resolver,\n        $elevation: $elevation,\n        $shadow-color: $shadow-color\n      );\n      // Update the key with the resolved value.\n      $theme: map.set($theme, $key, $resolved-value);\n    }\n  }\n  @return $theme;\n}\n\n///\n/// Sets ripple color for button.\n///\n@mixin ripple-states(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: button-ripple.$ripple-target\n  );\n}\n\n@mixin filled-accessible(\n  $container-fill-color,\n  $query: feature-targeting.all()\n) {\n  $fill-tone: theme-color.tone($container-fill-color);\n\n  @include container-fill-color($container-fill-color, $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query);\n    @include ripple-states($color: text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query);\n    @include ripple-states($color: text-primary-on-light, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for an enabled button.\n/// @param {Color|map} $color-or-map - The desired container fill color,\n///     specified either as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  // :not(:disabled) is used to support link styled as button\n  // as link does not support :enabled style\n  &:not(:disabled) {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _container-fill-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _container-fill-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _container-fill-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the container fill color to the given color for a disabled button.\n/// @param {Color} $color - The desired container fill color.\n/// @deprecated - call `container-fill-color` instead with `disabled` as a map\n///     key.\n///\n@mixin disabled-container-fill-color($color, $query: feature-targeting.all()) {\n  @include container-fill-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the icon color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired icon color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _icon-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the icon color to the given color for a disabled button.\n/// @param {Color} $color - The desired icon color.\n/// @deprecated - call `icon-color` instead with `disabled` as a map key.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include icon-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the ink color to the given color for an enabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color-or-map - The desired ink color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n\n    &:hover {\n      @include _ink-color(state.get-hover-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.focus() {\n      @include _ink-color(state.get-focus-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.active {\n      @include _ink-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color to the given color for a disabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n/// @deprecated - call `ink-color` instead with `disabled` as a map key.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets density scale for button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-3`,\n///     `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include _touch-target-reset($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin _touch-target-reset($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      // Do not set display: none in case the touch target is <a> element.\n      height: 100%;\n    }\n  }\n}\n\n///\n/// Sets custom height for button.\n/// @param {Number} $height - Height of button in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include _shape-radius-with-height($radius, $rtl-reflexive, $height, $query);\n}\n\n@mixin _shape-radius-with-height(\n  $radius,\n  $rtl-reflexive: false,\n  $height: $height,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{button-ripple.$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets horizontal padding to the given number.\n/// @param {Number} $padding\n/// @param {Number} $padding-icon [null] For buttons with an icon, the\n///     horizontal padding on the side with the icon, if different from\n///     $padding.\n///\n@mixin horizontal-padding(\n  $padding,\n  $padding-icon: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // $padding should be a single value; enforce it by specifying all 4 sides in the output\n    padding: 0 $padding 0 $padding;\n  }\n\n  @if $padding-icon != null {\n    &.mdc-button--icon-trailing {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding-icon 0 $padding;\n      }\n    }\n\n    &.mdc-button--icon-leading {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding 0 $padding-icon;\n      }\n    }\n  }\n}\n\n///\n/// Sets the button label to overflow as ellipsis\n///\n@mixin label-overflow-ellipsis($query: feature-targeting.all()) {\n  .mdc-button__label {\n    @include typography.overflow-ellipsis($query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  &::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  // Link buttons apply focus to the contained link. Focus is indicated via the\n  // link since focus-within isn't supported by IE.\n  & .mdc-button__link:focus,\n  &:focus {\n    &::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 5px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets the container fill color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets the icon color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _icon-size($size-px, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $size-px != null {\n    $size-rem: typography.px-to-rem($size-px);\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(font-size, $size-rem);\n        @include theme.property(width, $size-rem);\n        @include theme.property(height, $size-rem);\n      }\n    }\n  }\n}\n\n///\n/// Sets the ink color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin _states-colors($color-map, $query: feature-targeting.all()) {\n  $hover: map.get($color-map, hover);\n\n  $hover-value: if(\n    custom-properties.is-custom-prop($hover),\n    custom-properties.get-fallback($hover),\n    $hover\n  );\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  @if $hover-value != null {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: button-ripple.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin _label-text-typography(\n  $typography-map,\n  $query: feature-targeting.all()\n) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $family: map.get($typography-map, family);\n  $size: map.get($typography-map, size);\n  $tracking: map.get($typography-map, tracking);\n  $weight: map.get($typography-map, weight);\n  $transform: map.get($typography-map, transform);\n\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, $family);\n    @include theme.property(font-size, $size);\n    @include theme.property(letter-spacing, $tracking);\n    @include theme.property(font-weight, $weight);\n    @include theme.property(text-transform, $transform);\n  }\n}\n\n@mixin _elevation(\n  $resolver,\n  $elevation-map,\n  $shadow-color,\n  $query: feature-targeting.all()\n) {\n  $elevation-resolver: map.get($resolver, elevation);\n\n  @if $shadow-color {\n    $default: state.get-default-state($elevation-map);\n    @if $default != null {\n      @include elevation-theme.with-resolver(\n        $elevation-resolver,\n        $elevation: $default,\n        $shadow-color: $shadow-color,\n        $query: $query\n      );\n    }\n\n    $focus: state.get-focus-state($elevation-map);\n    @if $focus != null {\n      @include ripple-theme.focus {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $focus,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $hover: state.get-hover-state($elevation-map);\n    @if $hover != null {\n      &:hover {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $hover,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $pressed: state.get-pressed-state($elevation-map);\n    @if $pressed != null {\n      @include ripple-theme.active {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $pressed,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $disabled: state.get-disabled-state($elevation-map);\n    @if $disabled != null {\n      &:disabled {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $disabled,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './elevation-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $z-value from 0 through 24 {\n    .mdc-elevation--z#{$z-value} {\n      @include elevation-theme.elevation($z-value, $query: $query);\n    }\n  }\n\n  .mdc-elevation-transition {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-theme.transition-value();\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      will-change: elevation-theme.$property;\n    }\n  }\n}\n\n///\n/// Called once per application to set up the global default elevation styles.\n///\n@mixin overlay-common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include base-mixins.emit-once('mdc-elevation/common/structure') {\n        position: absolute;\n        border-radius: inherit;\n        pointer-events: none;\n\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-elevation-overlay-opacity, 0)\n        );\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      @include base-mixins.emit-once('mdc-elevation/common/animation') {\n        transition: elevation-theme.overlay-transition-value();\n      }\n    }\n\n    @include base-mixins.emit-once('mdc-elevation/common/color') {\n      $fill-color: custom-properties.create(\n        --mdc-elevation-overlay-color,\n        elevation-theme.$overlay-color\n      );\n      @include elevation-theme.overlay-fill-color($fill-color, $query: $query);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tokens/resolvers';\n@use './button-ripple';\n@use './button-shared-theme';\n@use './button-text-theme';\n\n@mixin styles(\n  $theme: button-text-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button {\n    @include button-text-theme.theme-styles($theme, $query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button {\n    // TODO(b/179402677): move this into theme config\n    @include button-shared-theme.horizontal-padding(\n      button-shared-theme.$horizontal-padding,\n      $query: $query\n    );\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './button-ripple';\n\n$height: 36px !default;\n$horizontal-padding: 8px !default;\n$contained-horizontal-padding: 16px !default;\n// For a contained button with an icon, the padding on the side of the\n// button with the icon.\n$contained-horizontal-padding-icon: 12px !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$shape-radius: small !default;\n\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-container-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.12\n) !default;\n\n@mixin theme($theme, $resolver, $query: feature-targeting.all()) {\n  @include _label-text-typography(\n    (\n      family: map.get($theme, label-text-font),\n      size: map.get($theme, label-text-size),\n      tracking: map.get($theme, label-text-tracking),\n      weight: map.get($theme, label-text-weight),\n      transform: map.get($theme, label-text-transform),\n    ),\n    $query: $query\n  );\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, container-color),\n      disabled: map.get($theme, disabled-container-color),\n    ),\n    $query: $query\n  );\n\n  @include ink-color(\n    (\n      default: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    ),\n    $query: $query\n  );\n\n  @include icon-color(\n    (\n      default: map.get($theme, with-icon-icon-color),\n      hover: map.get($theme, with-icon-hover-icon-color),\n      focus: map.get($theme, with-icon-focus-icon-color),\n      pressed: map.get($theme, with-icon-pressed-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n    ),\n    $query: $query\n  );\n\n  $icon-size: map.get($theme, with-icon-icon-size);\n  @include _icon-size($icon-size, $query: $query);\n\n  @include _states-colors(\n    (\n      focus: map.get($theme, focus-state-layer-color),\n      hover: map.get($theme, hover-state-layer-color),\n      pressed: map.get($theme, pressed-state-layer-color),\n    ),\n    $query: $query\n  );\n\n  $hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity);\n  $focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity);\n  $pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity);\n  @include ripple-theme.states-opacities(\n    $opacity-map: (\n      focus: $focus-state-layer-opacity,\n      hover: $hover-state-layer-opacity,\n      press: $pressed-state-layer-opacity,\n    ),\n    $ripple-target: button-ripple.$ripple-target,\n    $query: $query\n  );\n\n  $container-height: map.get($theme, container-height);\n  @include height($container-height, $query: $query);\n\n  $container-height-value: if(\n    custom-properties.is-custom-prop($container-height),\n    custom-properties.get-fallback($container-height),\n    $container-height\n  );\n  @if $container-height-value != null and $container-height-value != $height {\n    @include _touch-target-reset($query: $query);\n  }\n\n  $shape: map.get($theme, container-shape);\n  @if $shape {\n    $container-height: if(\n      $container-height != null,\n      $container-height,\n      $height\n    );\n    @include _shape-radius-with-height(\n      $shape,\n      $height: $container-height,\n      $query: $query\n    );\n  }\n\n  @include _elevation(\n    $resolver,\n    $elevation-map: (\n      default: map.get($theme, container-elevation),\n      disabled: map.get($theme, disabled-container-elevation),\n      focus: map.get($theme, focus-container-elevation),\n      hover: map.get($theme, hover-container-elevation),\n      pressed: map.get($theme, pressed-container-elevation)\n    ),\n    $shadow-color: map.get($theme, container-shadow-color),\n    $query: $query\n  );\n}\n\n@function resolve-theme-elevation-keys($theme, $resolver) {\n  $elevation-resolver: map.get($resolver, elevation);\n  $shadow-color: map.get($theme, container-shadow-color);\n  @if $elevation-resolver == null or $shadow-color == null {\n    @return $theme;\n  }\n\n  $elevation-keys: (\n    container-elevation,\n    hover-container-elevation,\n    focus-container-elevation,\n    pressed-container-elevation,\n    disabled-container-elevation\n  );\n\n  @each $key in $elevation-keys {\n    $elevation: map.get($theme, $key);\n    @if $elevation != null {\n      $resolved-value: meta.call(\n        $resolver,\n        $elevation: $elevation,\n        $shadow-color: $shadow-color\n      );\n      // Update the key with the resolved value.\n      $theme: map.set($theme, $key, $resolved-value);\n    }\n  }\n  @return $theme;\n}\n\n///\n/// Sets ripple color for button.\n///\n@mixin ripple-states(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: button-ripple.$ripple-target\n  );\n}\n\n@mixin filled-accessible(\n  $container-fill-color,\n  $query: feature-targeting.all()\n) {\n  $fill-tone: theme-color.tone($container-fill-color);\n\n  @include container-fill-color($container-fill-color, $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query);\n    @include ripple-states($color: text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query);\n    @include ripple-states($color: text-primary-on-light, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for an enabled button.\n/// @param {Color|map} $color-or-map - The desired container fill color,\n///     specified either as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  // :not(:disabled) is used to support link styled as button\n  // as link does not support :enabled style\n  &:not(:disabled) {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _container-fill-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _container-fill-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _container-fill-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the container fill color to the given color for a disabled button.\n/// @param {Color} $color - The desired container fill color.\n/// @deprecated - call `container-fill-color` instead with `disabled` as a map\n///     key.\n///\n@mixin disabled-container-fill-color($color, $query: feature-targeting.all()) {\n  @include container-fill-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the icon color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired icon color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _icon-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the icon color to the given color for a disabled button.\n/// @param {Color} $color - The desired icon color.\n/// @deprecated - call `icon-color` instead with `disabled` as a map key.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include icon-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the ink color to the given color for an enabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color-or-map - The desired ink color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n\n    &:hover {\n      @include _ink-color(state.get-hover-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.focus() {\n      @include _ink-color(state.get-focus-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.active {\n      @include _ink-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color to the given color for a disabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n/// @deprecated - call `ink-color` instead with `disabled` as a map key.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets density scale for button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-3`,\n///     `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include _touch-target-reset($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin _touch-target-reset($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      // Do not set display: none in case the touch target is <a> element.\n      height: 100%;\n    }\n  }\n}\n\n///\n/// Sets custom height for button.\n/// @param {Number} $height - Height of button in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include _shape-radius-with-height($radius, $rtl-reflexive, $height, $query);\n}\n\n@mixin _shape-radius-with-height(\n  $radius,\n  $rtl-reflexive: false,\n  $height: $height,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{button-ripple.$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets horizontal padding to the given number.\n/// @param {Number} $padding\n/// @param {Number} $padding-icon [null] For buttons with an icon, the\n///     horizontal padding on the side with the icon, if different from\n///     $padding.\n///\n@mixin horizontal-padding(\n  $padding,\n  $padding-icon: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // $padding should be a single value; enforce it by specifying all 4 sides in the output\n    padding: 0 $padding 0 $padding;\n  }\n\n  @if $padding-icon != null {\n    &.mdc-button--icon-trailing {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding-icon 0 $padding;\n      }\n    }\n\n    &.mdc-button--icon-leading {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding 0 $padding-icon;\n      }\n    }\n  }\n}\n\n///\n/// Sets the button label to overflow as ellipsis\n///\n@mixin label-overflow-ellipsis($query: feature-targeting.all()) {\n  .mdc-button__label {\n    @include typography.overflow-ellipsis($query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  &::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  // Link buttons apply focus to the contained link. Focus is indicated via the\n  // link since focus-within isn't supported by IE.\n  & .mdc-button__link:focus,\n  &:focus {\n    &::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 5px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets the container fill color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets the icon color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _icon-size($size-px, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $size-px != null {\n    $size-rem: typography.px-to-rem($size-px);\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(font-size, $size-rem);\n        @include theme.property(width, $size-rem);\n        @include theme.property(height, $size-rem);\n      }\n    }\n  }\n}\n\n///\n/// Sets the ink color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin _states-colors($color-map, $query: feature-targeting.all()) {\n  $hover: map.get($color-map, hover);\n\n  $hover-value: if(\n    custom-properties.is-custom-prop($hover),\n    custom-properties.get-fallback($hover),\n    $hover\n  );\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  @if $hover-value != null {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: button-ripple.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin _label-text-typography(\n  $typography-map,\n  $query: feature-targeting.all()\n) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $family: map.get($typography-map, family);\n  $size: map.get($typography-map, size);\n  $tracking: map.get($typography-map, tracking);\n  $weight: map.get($typography-map, weight);\n  $transform: map.get($typography-map, transform);\n\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, $family);\n    @include theme.property(font-size, $size);\n    @include theme.property(letter-spacing, $tracking);\n    @include theme.property(font-weight, $weight);\n    @include theme.property(text-transform, $transform);\n  }\n}\n\n@mixin _elevation(\n  $resolver,\n  $elevation-map,\n  $shadow-color,\n  $query: feature-targeting.all()\n) {\n  $elevation-resolver: map.get($resolver, elevation);\n\n  @if $shadow-color {\n    $default: state.get-default-state($elevation-map);\n    @if $default != null {\n      @include elevation-theme.with-resolver(\n        $elevation-resolver,\n        $elevation: $default,\n        $shadow-color: $shadow-color,\n        $query: $query\n      );\n    }\n\n    $focus: state.get-focus-state($elevation-map);\n    @if $focus != null {\n      @include ripple-theme.focus {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $focus,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $hover: state.get-hover-state($elevation-map);\n    @if $hover != null {\n      &:hover {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $hover,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $pressed: state.get-pressed-state($elevation-map);\n    @if $pressed != null {\n      @include ripple-theme.active {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $pressed,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $disabled: state.get-disabled-state($elevation-map);\n    @if $disabled != null {\n      &:disabled {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $disabled,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tokens/resolvers';\n@use './button-base';\n@use './button-filled-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-filled-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--unelevated {\n    @include button-filled-theme.theme-styles(\n      $theme,\n      $resolver,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--unelevated {\n    @include button-base.raised-transition($query: $query);\n    // TODO(b/179402677): move into theme config\n    @include button-shared-theme.horizontal-padding(\n      $padding: button-shared-theme.$contained-horizontal-padding,\n      $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n      $query: $query\n    );\n  }\n}\n\n// Legacy mixins\n\n@mixin filled($query: feature-targeting.all()) {\n  // TODO(b/179402677): move into theme config\n  @include button-shared-theme.horizontal-padding(\n    $padding: button-shared-theme.$contained-horizontal-padding,\n    $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n    $query: $query\n  );\n  @include button-filled-theme.theme-styles(\n    button-filled-theme.$light-theme,\n    $query: $query\n  );\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-filled($query) {\n  @include filled($query);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './button-base';\n@use './button-protected-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-protected-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--raised {\n    @include button-protected-theme.theme-styles(\n      $theme,\n      $resolver: $resolver,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--raised {\n    @include button-base.raised-transition($query);\n    // TODO(b/179402677): move into theme config\n    @include button-shared-theme.horizontal-padding(\n      $padding: button-shared-theme.$contained-horizontal-padding,\n      $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-raised($query) {\n  @include raised($query);\n}\n\n@mixin raised($query) {\n  @include elevation-theme.elevation(2, $query: $query);\n\n  &:hover,\n  &:focus {\n    @include elevation-theme.elevation(4, $query: $query);\n  }\n\n  &:active {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  &:disabled {\n    @include elevation-theme.elevation(0, $query: $query);\n  }\n\n  @include button-base.raised-transition($query);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './button-base';\n@use './button-outlined-theme';\n@use './button-ripple';\n@use './button-shared-theme';\n\n@mixin styles(\n  $theme: button-outlined-theme.$light-theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include button-base.static-styles($query: $query);\n  @include static-styles($query: $query);\n  .mdc-button--outlined {\n    @include theme-styles($theme, $resolver, $query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  .mdc-button--outlined {\n    @include _static-styles($query: $query);\n  }\n}\n\n@mixin _static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-style: solid;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    $duration: elevation-theme.$transition-duration;\n    $easing: elevation-theme.$transition-timing-function;\n    transition: border #{$duration} #{$easing};\n  }\n\n  #{button-ripple.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      border-style: solid;\n      border-color: transparent;\n    }\n  }\n}\n\n@mixin outlined($query: feature-targeting.all()) {\n  @include _static-styles($query: $query);\n  @include button-outlined-theme.theme-styles(\n    button-outlined-theme.$light-theme,\n    $query: $query\n  );\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-outlined($query) {\n  @include outlined($query);\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-ripple-surface {\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{math.div($radius, 2)});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{math.div($radius, 2)});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n\n$ripple-target: '.mdc-button__ripple';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-button {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        // Ripple needs content-box as the box sizing and box-sizing: border-box\n        // is often set as a default, so we override that here.\n        box-sizing: content-box;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        z-index: 0;\n      }\n    }\n\n    // Ripple targets inside outlined buttons set their own `top`/`left`,\n    // depending on the border width.\n    &:not(.mdc-button--outlined) #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './button-base';\n@use './button-filled';\n@use './button-filled-theme';\n@use './button-outlined';\n@use './button-outlined-theme';\n@use './button-protected';\n@use './button-protected-theme';\n@use './button-ripple';\n@use './button-text';\n@use './button-text-theme';\n@use './button-theme';\n@use './button-shared-theme';\n\n// For backwards compatibility.\n@forward './button-base' show deprecated-base, base, icon, icon-trailing, icon-svg, icon-contained, icon-contained-trailing, deprecated-icon, deprecated-icon-trailing, deprecated-icon-svg, deprecated-icon-contained, deprecated-icon-contained-trailing;\n\n@mixin styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n  @include theme-styles($query: $query);\n}\n\n@mixin theme-styles($query: feature-targeting.all()) {\n  .mdc-button {\n    @include button-text-theme.theme-styles(\n      button-text-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--unelevated {\n    @include button-filled-theme.theme-styles(\n      button-filled-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--raised {\n    @include button-protected-theme.theme-styles(\n      button-protected-theme.$light-theme,\n      $query: $query\n    );\n  }\n  .mdc-button--outlined {\n    @include button-outlined-theme.theme-styles(\n      button-outlined-theme.$light-theme,\n      $query: $query\n    );\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include static-styles-without-ripple($query: $query);\n  @include button-ripple.static-styles($query: $query);\n}\n\n@mixin static-styles-without-ripple($query: feature-targeting.all()) {\n  @include button-base.static-styles($query: $query);\n  @include button-text.static-styles-without-ripple($query: $query);\n  @include button-filled.static-styles-without-ripple($query: $query);\n  @include button-protected.static-styles-without-ripple($query: $query);\n  @include button-outlined.static-styles-without-ripple($query: $query);\n}\n\n// Legacy mixins\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include button-base.deprecated-static-styles-without-ripple($query: $query);\n  @include button-text.static-styles-without-ripple($query: $query);\n  @include button-filled.static-styles-without-ripple($query: $query);\n  @include button-protected.static-styles-without-ripple($query: $query);\n  @include button-outlined.static-styles-without-ripple($query: $query);\n  @include _theme-styles-without-ripple($query: $query);\n}\n\n@mixin _theme-styles-without-ripple($query: feature-targeting.all()) {\n  @include button-text-theme.deprecated-theme-styles($query: $query);\n  @include button-filled-theme.deprecated-theme-styles($query: $query);\n  @include button-outlined-theme.deprecated-theme-styles($query: $query);\n  // Elevation has been recategorized into theme styles. Keeping old elevation\n  // styles here for backwards compatibility.\n  .mdc-button--raised {\n    @include button-protected.raised($query: $query);\n  }\n}\n\n// @deprecated - use styles() instead.\n@mixin core-styles($query: feature-targeting.all()) {\n  @include styles($query: $query);\n  // TODO: remove this rule since padding now takes care of icon margins.\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-button--raised,\n  .mdc-button--unelevated,\n  .mdc-button--outlined {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        // Icons inside contained buttons have different styles due to increased button padding\n        @include button-base.icon-contained;\n      }\n    }\n\n    .mdc-button__label + .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include button-base.icon-contained-trailing;\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/tokens/resolvers';\n@use '@material/ripple/ripple-theme';\n@use './button-base';\n@use './button-shared-theme';\n@use './button-ripple';\n\n$outlined-border-width: 1px !default;\n$outline-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$_custom-property-prefix: 'outlined-button';\n\n$light-theme: (\n  container-height: button-shared-theme.$height,\n  container-shape: button-shared-theme.$shape-radius,\n  disabled-label-text-color: button-shared-theme.$disabled-ink-color,\n  disabled-outline-color: button-shared-theme.$disabled-container-color,\n  focus-label-text-color: null,\n  focus-outline-color: null,\n  focus-state-layer-color: primary,\n  focus-state-layer-opacity: 0.12,\n  hover-label-text-color: null,\n  hover-outline-color: null,\n  hover-state-layer-color: primary,\n  hover-state-layer-opacity: 0.04,\n  label-text-color: primary,\n  label-text-font: button-font-family,\n  label-text-size: button-font-size,\n  label-text-tracking: button-letter-spacing,\n  label-text-transform: button-text-transform,\n  label-text-weight: button-font-weight,\n  outline-color: $outline-color,\n  outline-width: $outlined-border-width,\n  pressed-label-text-color: null,\n  pressed-state-layer-color: primary,\n  pressed-state-layer-opacity: 0.12,\n  with-icon-icon-color: null,\n  with-icon-icon-size: 18px,\n  with-icon-hover-icon-color: null,\n  with-icon-focus-icon-color: null,\n  with-icon-pressed-icon-color: null,\n  with-icon-disabled-icon-color: null,\n);\n\n/// Sets theme based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use.\n@mixin theme($theme, $resolver: resolvers.$material) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: button-shared-theme.resolve-theme-elevation-keys(\n    $theme,\n    $resolver: $resolver\n  );\n  @include keys.declare-custom-properties($theme, $_custom-property-prefix);\n}\n\n@mixin theme-styles(\n  $theme,\n  $resolver: resolvers.$material,\n  $query: feature-targeting.all()\n) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n  @include _theme($theme, $resolver, $query: $query);\n}\n\n@mixin _theme($theme, $resolver, $query) {\n  @include button-shared-theme.theme($theme, $resolver, $query: $query);\n  @include outline-color(\n    (\n      default: map.get($theme, outline-color),\n      disabled: map.get($theme, disabled-outline-color),\n      focus: map.get($theme, focus-outline-color),\n      hover: map.get($theme, hover-outline-color),\n    ),\n    $query: $query\n  );\n  @include outline-width(map.get($theme, outline-width), $query: $query);\n}\n\n@mixin deprecated-theme-styles($query: feature-targeting.all()) {\n  .mdc-button--outlined {\n    $theme: map.merge(\n      $light-theme,\n      (\n        focus-state-layer-color: null,\n        focus-state-layer-opacity: null,\n        hover-state-layer-color: null,\n        hover-state-layer-opacity: null,\n        pressed-state-layer-color: null,\n        pressed-state-layer-opacity: null,\n        label-text-font: null,\n        label-text-size: null,\n        label-text-tracking: null,\n        label-text-transform: null,\n        label-text-weight: null,\n      )\n    );\n    @include _theme($theme, resolvers.$material, $query: $query);\n  }\n}\n\n///\n/// Sets the outline color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired outline color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focused, pressed, disabled} as keys.\n///\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    // Increase active state specificity due to ripple-theme.focus().\n    &:active,\n    &:focus:active {\n      @include _outline-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the outline color to the given color for a disabled button.\n/// @param {Color} $color - The desired outline color.\n/// @deprecated - call `outline-color` instead with `disabled` as a map key.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include outline-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n@mixin outline-width(\n  $outline-width,\n  $padding: button-shared-theme.$contained-horizontal-padding,\n  // For a button with an icon, the padding on the side of the button with the\n  // icon.\n  $padding-icon: button-shared-theme.$contained-horizontal-padding-icon,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $outline-width != null {\n    $outline-width-value: if(\n      custom-properties.is-custom-prop($outline-width),\n      custom-properties.get-fallback($outline-width),\n      $outline-width\n    );\n    // TODO(b/194792044): uncouple padding from outline-width\n    // Note: Adjust padding to maintain consistent width with non-outlined buttons\n    $padding-value: math.max($padding - $outline-width-value, 0);\n    $padding-icon-value: math.max($padding-icon - $outline-width-value, 0);\n\n    @include button-shared-theme.horizontal-padding(\n      $padding: $padding-value,\n      $padding-icon: $padding-icon-value,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-width, $outline-width);\n    }\n\n    #{button-ripple.$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          top,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(\n          left,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(border-width, $outline-width);\n      }\n    }\n    .mdc-button__touch {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          left,\n          'calc(-1 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n        @include theme.property(\n          width,\n          'calc(100% + 2 * outline-width)',\n          $replace: (outline-width: $outline-width)\n        );\n      }\n    }\n  }\n}\n\n///\n/// Sets the outline color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use './variables';\n@use '@material/theme/theme-color';\n@use '@material/dom/mixins' as dom-mixins;\n\n//\n// Public\n//\n\n$ripple-target: '.mdc-card__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// card styles. It is recommended that most users use `mdc-card-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  // postcss-bem-linter: define card\n\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-card {\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include fill-color(surface, $query);\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    @include elevation-mixins.elevation(1, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include container-layout_;\n    }\n\n    // Transparent card border for high-contrast mode.\n    &::after {\n      @include shape-radius(variables.$shape-radius, $query: $query);\n      @include dom-mixins.transparent-border($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-card--outlined {\n    @include elevation-mixins.elevation(0, $query: $query);\n    @include outline(variables.$outline-color, $query: $query);\n\n    // Outlined card already displays border in high-contrast mode. Overwriting\n    // styles set above to remove a duplicate border.\n    &::after {\n      @include feature-targeting.targets($feat-structure) {\n        border: none;\n      }\n    }\n  }\n\n  .mdc-card__content {\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: inherit;\n      height: 100%;\n    }\n  }\n\n  //\n  // Media\n  //\n\n  .mdc-card__media {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative; // Child element `__media-content` has `position: absolute`\n      box-sizing: border-box;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n    }\n\n    &::before {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        content: '';\n      }\n    }\n  }\n\n  .mdc-card__media:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: inherit;\n      border-top-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__media:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-left-radius: inherit;\n      border-bottom-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__media--square {\n    @include media-aspect-ratio(1, 1, $query);\n  }\n\n  .mdc-card__media--16-9 {\n    @include media-aspect-ratio(16, 9, $query);\n  }\n\n  .mdc-card__media-content {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      box-sizing: border-box;\n    }\n  }\n\n  //\n  // Primary action\n  //\n\n  .mdc-card__primary-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include container-layout_;\n\n      position: relative; // Needed to prevent the ripple wash from overflowing the container in IE and Edge\n      outline: none;\n      color: inherit;\n      text-decoration: none;\n      cursor: pointer;\n      overflow: hidden;\n    }\n  }\n\n  .mdc-card__primary-action:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: inherit;\n      border-top-right-radius: inherit;\n    }\n  }\n\n  .mdc-card__primary-action:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-left-radius: inherit;\n      border-bottom-right-radius: inherit;\n    }\n  }\n\n  //\n  // Action row\n  //\n\n  .mdc-card__actions {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_;\n\n      min-height: 52px;\n      padding: 8px;\n    }\n  }\n\n  .mdc-card__actions--full-bleed {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n    }\n  }\n\n  .mdc-card__action-buttons,\n  .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_;\n    }\n  }\n\n  .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, variables.$action-icon-color);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      flex-grow: 1;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-card__action-buttons + .mdc-card__action-icons {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 16px);\n    }\n  }\n\n  //\n  // Action items\n  //\n\n  .mdc-card__action {\n    @include feature-targeting.targets($feat-structure) {\n      @include actions-layout_(inline-flex);\n\n      justify-content: center;\n      cursor: pointer;\n      user-select: none;\n    }\n\n    &:focus {\n      @include feature-targeting.targets($feat-structure) {\n        outline: none;\n      }\n    }\n  }\n\n  //\n  // Action buttons\n  //\n\n  .mdc-card__action--button {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 8px);\n\n      padding: 0 8px;\n    }\n\n    &:last-child {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 0);\n      }\n    }\n  }\n\n  .mdc-card__actions--full-bleed .mdc-card__action--button {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n      width: 100%;\n      height: auto;\n      max-height: none;\n      margin: 0;\n      padding: 8px 16px;\n      @include rtl.ignore-next-line();\n      text-align: left;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  //\n  // Action icons\n  //\n\n  .mdc-card__action--icon {\n    @include feature-targeting.targets($feat-structure) {\n      // Icon buttons are taller than buttons, so we need to adjust their margins to prevent the action row from\n      // expanding.\n      margin: -6px 0;\n\n      // Same padding as mdc-icon-button.\n      padding: 12px;\n    }\n  }\n\n  .mdc-card__action--icon:not(:disabled) {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, variables.$action-icon-color);\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// card styles. It is recommended that most users use `mdc-card-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-card__primary-action {\n    @include ripple.surface($query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: content-box;\n        height: 100%;\n        overflow: hidden;\n        left: 0;\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        width: 100%;\n      }\n    }\n\n    @include ripple-theme.focus {\n      &::after {\n        @include dom-mixins.transparent-border(\n          $border-width: 5px,\n          $border-style: double,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin outline(\n  $color,\n  $thickness: variables.$outline-width,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $thickness;\n    border-style: solid;\n  }\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: theme-color.prop-value($color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n@mixin media-aspect-ratio($x, $y, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      // This clever trick brought to you by: http://www.mademyday.de/css-height-equals-width-with-pure-css.html\n      margin-top: math.percentage(math.div($y, $x));\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin container-layout_ {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n@mixin actions-layout_($display: flex) {\n  display: $display;\n  flex-direction: row;\n  align-items: center;\n  box-sizing: border-box;\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$action-icon-color: rgba(\n  theme-color.prop-value(on-surface),\n  theme-color.text-emphasis(medium)\n) !default;\n$outline-color: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  12%\n) !default;\n$outline-width: 1px !default;\n$shape-radius: medium !default;\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/theme/theme-color';\n@use './checkbox-custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/touch-target/variables' as touch-target-variables;\n@use './checkbox-theme';\n\n///\n/// Checkbox and ripple styles.\n///\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple-styles($query);\n}\n\n/// Checkbox styles (Excluding ripple styles).\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n// TODO(b/162887560): Rename to `checkbox-without-ripple-styles()`\n@mixin without-ripple($query: feature-targeting.all()) {\n  // TODO(b/165005345): Include theme-styles() after static-styles().\n  @include theme-styles($query: $query);\n  @include static-styles($query: $query);\n}\n\n/// Checkbox static styles.\n/// Checkbox styles that are not customizable should go here.\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include feature-targeting.targets($feat-animation) {\n    @include mark-keyframes_;\n  }\n\n  .mdc-checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      @include base_;\n    }\n  }\n\n  @include dom.forced-colors-mode {\n    @include checkbox-theme.disabled-container-colors(\n      $unmarked-stroke-color: GrayText,\n      $unmarked-fill-color: transparent,\n      $marked-stroke-color: GrayText,\n      $marked-fill-color: transparent,\n      $query: $query\n    );\n    @include checkbox-theme.disabled-ink-color(GrayText, $query: $query);\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0 1px; // Extra horizontal space around mixedmark symbol.\n      }\n    }\n  }\n\n  // Needed to disable hover effects on CSS-only (non-JS) checkboxes\n  .mdc-checkbox--disabled {\n    @include feature-targeting.targets($feat-structure) {\n      @include disabled_;\n    }\n  }\n\n  .mdc-checkbox__background {\n    @include background_($query);\n  }\n\n  .mdc-checkbox__checkmark {\n    @include checkmark_($query);\n  }\n\n  .mdc-checkbox__checkmark-path {\n    @include checkmark-path_($query);\n  }\n\n  .mdc-checkbox__mixedmark {\n    @include mixedmark_($query);\n  }\n\n  .mdc-checkbox--anim {\n    @include feature-targeting.targets($feat-animation) {\n      @include anim_;\n    }\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-animation) {\n      @include background--marked_;\n    }\n\n    .mdc-checkbox__checkmark-path {\n      @include feature-targeting.targets($feat-structure) {\n        @include checkmark-path--marked_;\n      }\n    }\n  }\n\n  .mdc-checkbox__native-control {\n    @include feature-targeting.targets($feat-structure) {\n      @include native-control_;\n    }\n\n    &:disabled {\n      @include feature-targeting.targets($feat-structure) {\n        @include disabled_;\n      }\n    }\n  }\n\n  .mdc-checkbox--touch {\n    @include checkbox-theme.touch-target(\n      custom-properties.create(\n        checkbox-state-layer-size,\n        touch-target-variables.$height\n      ),\n      custom-properties.create(\n        checkbox-state-layer-size,\n        checkbox-theme.$ripple-size\n      ),\n      $query: $query\n    );\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--checked_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--checked_;\n      }\n    }\n  }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--indeterminate_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--indeterminate_;\n      }\n    }\n  }\n\n  // JS checkbox\n  .mdc-checkbox.mdc-checkbox--upgraded {\n    .mdc-checkbox__background,\n    .mdc-checkbox__checkmark,\n    .mdc-checkbox__checkmark-path,\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-animation) {\n        @include child--upgraded_;\n      }\n    }\n  }\n}\n\n/// Checkbox theme styles.\n/// Checkbox styles that are customizable should go here.\n@mixin theme-styles($query: feature-targeting.all()) {\n  .mdc-checkbox {\n    @include checkbox-theme.theme-deprecated(\n      checkbox-theme.$light-theme-deprecated,\n      $query: $query\n    );\n  }\n}\n\n/// Checkbox's ripple styles.\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n@mixin ripple-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-checkbox {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple-theme.behind-content(\n      checkbox-theme.$ripple-target,\n      $query: $query\n    );\n  }\n\n  #{checkbox-theme.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin base_ {\n  display: inline-block;\n  position: relative;\n  flex: 0 0 checkbox-theme.$icon-size;\n  box-sizing: content-box;\n  width: checkbox-theme.$icon-size;\n  height: checkbox-theme.$icon-size;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom;\n}\n\n@mixin disabled_ {\n  cursor: default;\n  pointer-events: none;\n}\n\n@mixin child--upgraded_ {\n  transition: none;\n}\n\n// Animation\n\n@mixin anim_ {\n  $mdc-checkbox-indeterminate-change-duration_: 500ms;\n\n  // stylelint-disable selector-max-type\n\n  &-unchecked-checked,\n  &-unchecked-indeterminate,\n  &-checked-unchecked,\n  &-indeterminate-unchecked {\n    .mdc-checkbox__background {\n      animation-duration: checkbox-theme.$transition-duration * 2;\n      animation-timing-function: linear;\n    }\n  }\n\n  &-unchecked-checked {\n    .mdc-checkbox__checkmark-path {\n      // Instead of delaying the animation, we simply multiply its length by 2 and begin the\n      // animation at 50% in order to prevent a flash of styles applied to a checked checkmark\n      // as the background is fading in before the animation begins.\n      animation: mdc-checkbox-unchecked-checked-checkmark-path\n        checkbox-theme.$transition-duration * 2 linear 0s;\n      transition: none;\n    }\n  }\n\n  &-unchecked-indeterminate {\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-unchecked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-unchecked {\n    .mdc-checkbox__checkmark-path {\n      animation: mdc-checkbox-checked-unchecked-checkmark-path\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-indeterminate {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-checked-indeterminate-checkmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-checked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-checked {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-indeterminate-checked-checkmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-indeterminate-checked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-unchecked {\n    .mdc-checkbox__mixedmark {\n      // stylelint-disable-next-line declaration-colon-space-after\n      animation: mdc-checkbox-indeterminate-unchecked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ * 0.6 linear 0s;\n      transition: none;\n    }\n  }\n\n  // stylelint-enable selector-max-type\n}\n\n@mixin background_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: checkbox-theme.$icon-size;\n    height: checkbox-theme.$icon-size;\n    // border-color is overridden by the mdc-checkbox-unmarked-stroke-color() mixin\n    border: checkbox-theme.$border-width solid currentColor;\n    border-radius: 2px;\n    background-color: transparent;\n    pointer-events: none;\n    will-change: background-color, border-color;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(background-color), transition-exit(border-color);\n  }\n}\n\n@mixin background--marked_ {\n  transition: transition-enter(border-color), transition-enter(background-color);\n}\n\n// stylelint-disable block-no-empty -- For backward compatibility.\n@mixin focus-indicator_($query: feature-targeting.all()) {\n}\n@mixin focus-indicator--focused_($query: feature-targeting.all()) {\n}\n// stylelint-enable block-no-empty\n\n// Native input\n\n@mixin native-control_ {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit;\n}\n\n// Check mark\n\n@mixin checkmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      opacity,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  .mdc-checkbox--upgraded & {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin checkmark--checked_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-enter(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration * 2\n      ),\n      transition-enter(transform, 0ms, checkbox-theme.$transition-duration * 2);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin checkmark--indeterminate_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: rotate(45deg);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration\n      ),\n      transition-exit(transform, 0ms, checkbox-theme.$transition-duration);\n  }\n}\n\n// Check mark path\n\n@mixin checkmark-path_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      stroke-dashoffset,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    stroke: currentColor;\n    stroke-width: checkbox-theme.$mark-stroke-size * 1.3;\n    stroke-dashoffset: $mark-path-length_;\n    stroke-dasharray: $mark-path-length_;\n  }\n}\n\n@mixin checkmark-path--marked_ {\n  stroke-dashoffset: 0;\n}\n\n// Mixed mark\n\n@mixin mixedmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    height: 0;\n    transform: scaleX(0) rotate(0deg);\n    border-width: math.div(math.floor(checkbox-theme.$mark-stroke-size), 2);\n    border-style: solid;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(opacity), transition-exit(transform);\n  }\n}\n\n@mixin mixedmark--checked_ {\n  transform: scaleX(1) rotate(-45deg);\n}\n\n@mixin mixedmark--indeterminate_ {\n  transform: scaleX(1) rotate(0deg);\n  opacity: 1;\n}\n\n@function transition-enter(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.enter($property, $duration, $delay);\n}\n\n@function transition-exit(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.exit-temporary($property, $duration, $delay);\n}\n\n// Manual calculation done on SVG\n$mark-path-length_: 29.7833385 !default;\n$indeterminate-checked-easing-function_: cubic-bezier(0.14, 0, 0, 1) !default;\n\n@mixin mark-keyframes_ {\n  @keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n    0%,\n    50% {\n      stroke-dashoffset: $mark-path-length_;\n    }\n\n    50% {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n    }\n\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n    0%,\n    68.2% {\n      transform: scaleX(0);\n    }\n\n    68.2% {\n      animation-timing-function: cubic-bezier(0, 0, 0, 1);\n    }\n\n    100% {\n      transform: scaleX(1);\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n    from {\n      animation-timing-function: animation-variables.$acceleration-curve-timing-function;\n      opacity: 1;\n      stroke-dashoffset: 0;\n    }\n\n    to {\n      opacity: 0;\n      stroke-dashoffset: $mark-path-length_ * -1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-checkmark {\n    from {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-checkmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(360deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n    from {\n      animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n      transform: rotate(-45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(315deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n    0% {\n      animation-timing-function: linear;\n      transform: scaleX(1);\n      opacity: 1;\n    }\n\n    32.8%,\n    100% {\n      transform: scaleX(0);\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/187852988): `selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(map.get($theme, selected-checkmark-color));\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    // stylelint-disable max-nesting-depth\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n\n    // stylelint-enable max-nesting-depth\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch;\n@use './variables';\n\n$ripple-target: '.mdc-deprecated-chip-trailing-action__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query: $query);\n  @include ripple($query: $query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include touch.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  @include _touch-target-base($query);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include size(variables.$size, $query);\n    @include color(variables.$color, $query);\n    @include touch-target-width(variables.$touch-target-width, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      border: none;\n      display: inline-flex;\n      position: relative;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding: 0;\n      outline: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      background: none;\n    }\n\n    // Nested to increase specificity, ensuring SVG and font icon\n    // color is affected regardless of load order without needing\n    // !important or HTML tag targetting.\n    .mdc-deprecated-chip-trailing-action__icon {\n      @include feature-targeting.targets($feat-color) {\n        fill: currentColor;\n        color: inherit;\n      }\n    }\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      variables.$ripple-color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    #{$ripple-target} {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        // Ripple needs content-box as the box sizing and box-sizing: border-box\n        // is often set as a default, so we override that here.\n        box-sizing: content-box;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n    }\n  }\n}\n\n/// Set the color of the trailing action\n/// @param {Color} $color The trailing action color\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n/// Set the size of the trailing action\n/// @param {Number} $number The size of the trailing action\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action__icon {\n    @include feature-targeting.targets($feat-structure) {\n      height: $size;\n      width: $size;\n      font-size: $size;\n    }\n  }\n}\n\n/// Set the horizontal spacing of the trailing action\n/// @param {Number} $left The left spacing\n/// @param {Number} $right The right spacing\n@mixin horizontal-spacing($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n/// Set the width of the touch target\n/// @param {Number} $width The width of the touch target\n@mixin touch-target-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-deprecated-chip-trailing-action__touch {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n    }\n  }\n}\n\n/// Private mixins\n\n@mixin _touch-target-base($query: feature-targeting.all()) {\n  .mdc-deprecated-chip-trailing-action__touch {\n    @include touch.touch-target($set-width: true, $query: $query);\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$size: 18px !default;\n$margin-right: -4px !default;\n$margin-left: 4px !default;\n$touch-target-width: 26px !default;\n$color: on-surface !default;\n$ripple-color: on-surface !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/animation/functions';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/checkbox/functions' as checkbox-functions;\n@use '@material/checkbox/variables' as checkbox-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use './variables';\n@use '@material/elevation/functions' as elevation-functions;\n@use '@material/theme/theme-color';\n@use './trailingaction/mixins' as trailing-action-mixins;\n\n$ripple-target: '.mdc-chip__ripple';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query: $query);\n  @include ripple($query: $query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include leading-icon-color(variables.$icon-color, $query: $query);\n  @include trailing-icon-color(variables.$icon-color, $query: $query);\n  @include leading-icon-size(variables.$leading-icon-size, $query: $query);\n  @include trailing-icon-size(variables.$trailing-icon-size, $query: $query);\n  @include trailing-icon-margin($query: $query);\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-chip {\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include fill-color(variables.$fill-color-default, $query: $query);\n    @include ink-color-without-ripple_(\n      variables.$ink-color-default,\n      $query: $query\n    );\n    @include typography.typography(body2, $query: $query);\n    @include density($density-scale: 0, $query: $query);\n    @include leading-icon-margin($query: $query);\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      // position: relative; already set in mdc-elevation-overlay-surface-position\n      align-items: center;\n      box-sizing: border-box;\n      padding: 0 variables.$horizontal-padding;\n      border-width: 0;\n      outline: none;\n      cursor: pointer;\n      -webkit-appearance: none;\n\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, on-surface);\n      }\n    }\n\n    .mdc-chip__touch {\n      @include touch-target-mixins.touch-target($query: $query);\n    }\n  }\n\n  .mdc-chip--exit {\n    @include feature-targeting.targets($feat-color) {\n      transition: variables.$exit-transition;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n\n  .mdc-chip__overflow {\n    @include feature-targeting.targets($feat-structure) {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n  }\n\n  .mdc-chip__text {\n    @include feature-targeting.targets($feat-structure) {\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-chip__icon {\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: 50%;\n      outline: none;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-chip__checkmark {\n    @include feature-targeting.targets($feat-structure) {\n      height: variables.$leading-icon-size;\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-animation) {\n      transition: checkbox-functions.transition-exit(\n        stroke-dashoffset,\n        variables.$checkmark-animation-delay,\n        variables.$checkmark-animation-duration\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      stroke-width: 2px;\n      stroke-dashoffset: checkbox-variables.$mark-path-length_;\n      stroke-dasharray: checkbox-variables.$mark-path-length_;\n    }\n  }\n\n  .mdc-chip__primary-action:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-structure) {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  .mdc-chip__icon--leading,\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      // Make these positioned elements, such that they're stacked above the\n      // touch target element (`mdc-chip__touch`), so that clicks reach the\n      // icons (e.g. for removable input chips).\n      position: relative;\n    }\n  }\n\n  // Change color of selected choice chips\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include selected-ink-color-without-ripple_(primary, $query: $query);\n    }\n\n    .mdc-chip--selected {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, surface);\n      }\n    }\n  }\n\n  // Add leading checkmark to filter chips with no leading icon\n\n  .mdc-chip__checkmark-svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 0;\n      height: variables.$leading-icon-size;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: width variables.$width-animation-duration\n        animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-chip--selected .mdc-chip__checkmark-svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$leading-icon-size;\n    }\n  }\n\n  // Add leading checkmark to filter chips with a leading icon\n\n  .mdc-chip-set--filter {\n    .mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity variables.$opacity-animation-duration linear;\n        transition-delay: variables.$leading-icon-delay;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity variables.$opacity-animation-duration linear;\n\n          // Delay the checkmark transition.\n          transition-delay: variables.$checkmark-with-leading-icon-delay;\n        }\n\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 0;\n        }\n\n        .mdc-chip__checkmark-svg {\n          // stylelint-disable max-nesting-depth\n\n          @include feature-targeting.targets($feat-animation) {\n            transition: width 0ms;\n          }\n\n          // stylelint-enable max-nesting-depth\n        }\n      }\n    }\n\n    .mdc-chip--selected .mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-structure) {\n          // This ensures that the checkmark has zero width while the leading icon is still animating.\n          width: 0;\n          opacity: 1;\n        }\n      }\n    }\n\n    .mdc-chip__icon--leading-hidden.mdc-chip__icon--leading {\n      @include feature-targeting.targets($feat-structure) {\n        width: 0;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // This ensures that the leading icon doesn't fade in while the checkmark is fading out.\n        opacity: 0;\n      }\n\n      + .mdc-chip__checkmark {\n        @include feature-targeting.targets($feat-structure) {\n          width: variables.$leading-icon-size;\n        }\n      }\n    }\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-chip {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ink-color-ripple_(variables.$ink-color-default, $query: $query);\n\n    #{$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n  }\n\n  .mdc-chip-set--choice {\n    .mdc-chip {\n      @include selected-ink-color-ripple_(primary, $query: $query);\n    }\n  }\n}\n\n@mixin set-core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-chip-entry {\n      from {\n        transform: scale(0.8);\n        opacity: 0.4;\n      }\n\n      to {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-chip-set {\n    @include set-spacing(8px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-wrap: wrap;\n      box-sizing: border-box;\n    }\n  }\n\n  .mdc-chip-set--input .mdc-chip {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-chip-entry 100ms\n        animation-variables.$deceleration-curve-timing-function;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $fill-tone: theme-color.tone($color);\n\n  @include fill-color($color, $query: $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query: $query);\n    @include selected-ink-color(text-primary-on-dark, $query: $query);\n    @include leading-icon-color(text-primary-on-dark, $query: $query);\n    @include trailing-icon-color(text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query: $query);\n    @include selected-ink-color(text-primary-on-light, $query: $query);\n    @include leading-icon-color(text-primary-on-light, $query: $query);\n    @include trailing-icon-color(text-primary-on-light, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color-ripple_($color, $query: $query);\n  @include ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin ink-color-without-ripple_($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin ink-color-ripple_($color, $query) {\n  @include ripple-theme.states(\n    $color,\n    true,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin selected-ink-color($color, $query: feature-targeting.all()) {\n  @include selected-ink-color-ripple_($color, $query: $query);\n  @include selected-ink-color-without-ripple_($color, $query: $query);\n}\n\n@mixin selected-ink-color-without-ripple_($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-chip--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n\n    @include leading-icon-color($color, $query: $query);\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  .mdc-chip__checkmark-path {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(stroke, $color);\n    }\n  }\n}\n\n@mixin selected-ink-color-ripple_($color, $query) {\n  &.mdc-chip {\n    @include ripple-theme.states-selected(\n      $color,\n      $has-nested-focusable-element: true,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin outline(\n  $width: 1px,\n  $style: solid,\n  $color: theme-color.prop-value(on-surface),\n  $query: feature-targeting.all()\n) {\n  @include outline-width($width, $query: $query);\n  @include outline-style($style, $query: $query);\n  @include outline-color($color, $query: $query);\n}\n\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $color);\n  }\n}\n\n@mixin outline-style($style, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-style: $style;\n  }\n}\n\n@mixin outline-width(\n  $width,\n  $horizontal-padding: variables.$horizontal-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Note: Adjust padding to maintain consistent width with non-outlined chips\n  $horizontal-padding-value: math.max($horizontal-padding - $width, 0);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $horizontal-padding-value;\n    padding-left: $horizontal-padding-value;\n    border-width: $width;\n  }\n\n  #{$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      top: -$width;\n      left: -$width;\n      border: $width solid transparent;\n    }\n  }\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n@mixin set-spacing($gap-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding: math.div($gap-size, 2);\n  }\n\n  .mdc-chip {\n    @include feature-targeting.targets($feat-structure) {\n      margin: math.div($gap-size, 2);\n    }\n  }\n\n  .mdc-chip--touch {\n    @include touch-target-mixins.margin(\n      $component-height: variables.$height,\n      $query: $query\n    );\n  }\n}\n\n@mixin leading-icon-color(\n  $color,\n  $opacity: variables.$icon-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-chip__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin trailing-icon-color(\n  $color,\n  $opacity: variables.$icon-opacity,\n  $hover-opacity: variables.$trailing-icon-hover-opacity,\n  $focus-opacity: variables.$trailing-icon-focus-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include trailing-action-mixins.color($color, $query: $query);\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n\n    &:hover {\n      @include feature-targeting.targets($feat-color) {\n        color: rgba(theme-color.prop-value($color), $hover-opacity);\n      }\n    }\n\n    &:focus {\n      @include feature-targeting.targets($feat-color) {\n        color: rgba(theme-color.prop-value($color), $focus-opacity);\n      }\n    }\n  }\n}\n\n// For customizing icon size, we need to increase specifity to ensure\n// overrides apply. Styles defined in the .material-icons CSS class are\n// loaded separately, so the order of CSS definitions is not guaranteed.\n\n@mixin leading-icon-size($size, $query: feature-targeting.all()) {\n  .mdc-chip__icon.mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include icon-size_($size, $query: $query);\n  }\n}\n\n@mixin trailing-icon-size($size, $query: feature-targeting.all()) {\n  @include trailing-action-mixins.size($size, $query: $query);\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon.mdc-chip__icon--trailing {\n    @include icon-size_($size, $query: $query);\n  }\n}\n\n@mixin icon-size_($size, $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    font-size: $size;\n  }\n}\n\n@mixin leading-icon-margin(\n  $left-margin: variables.$leading-icon-margin-left,\n  $right-margin: variables.$leading-icon-margin-right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-chip--selected .mdc-chip__checkmark,\n  .mdc-chip__icon--leading:not(.mdc-chip__icon--leading-hidden) {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n    }\n  }\n}\n\n@mixin trailing-icon-margin(\n  $left-margin: variables.$trailing-icon-margin-left,\n  $right-margin: variables.$trailing-icon-margin-right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include trailing-action-mixins.horizontal-spacing(\n    $left-margin,\n    $right-margin,\n    $query: $query\n  );\n\n  // TODO(b/151980552): Remove the following block\n  .mdc-chip__icon--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n    }\n  }\n}\n\n@mixin elevation-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-functions.transition-value();\n  }\n\n  &.mdc-chip--exit {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-functions.transition-value(),\n        variables.$exit-transition;\n    }\n  }\n}\n\n///\n/// Sets the density scale for chips.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values are `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include touch-target-reset_($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin touch-target-reset_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Selector is necessary here to override original specificity.\n  &.mdc-chip--touch {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-chip__touch {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$fill-color-default: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  12%\n) !default;\n$ink-color-default: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$horizontal-padding: 12px !default;\n$height: 32px !default;\n$shape-radius: 50% !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$icon-color: theme-color.prop-value(on-surface) !default;\n$icon-opacity: 0.54 !default;\n$trailing-icon-hover-opacity: 0.62 !default;\n$trailing-icon-focus-opacity: 0.87 !default;\n$leading-icon-size: 20px !default;\n$trailing-icon-size: 18px !default;\n// Speed up delay to bridge gap between leading icon and checkmark transition.\n$leading-icon-delay: -50ms !default;\n$checkmark-with-leading-icon-delay: 80ms !default;\n\n$checkmark-animation-delay: 50ms !default;\n$checkmark-animation-duration: 150ms !default;\n$width-animation-duration: 150ms !default;\n$opacity-animation-duration: 75ms !default;\n\n$leading-icon-margin-right: 4px !default;\n$leading-icon-margin-left: -4px !default;\n\n$trailing-icon-margin-right: -4px !default;\n$trailing-icon-margin-left: 4px !default;\n\n$exit-transition: opacity 75ms\n    animation-variables.$standard-curve-timing-function,\n  width 150ms animation-variables.$deceleration-curve-timing-function,\n  padding 100ms linear, margin 100ms linear !default;\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/gss';\n@use '@material/theme/theme';\n@use './variables';\n@use './keyframes';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include color(variables.$color, $query);\n  @include track-color(variables.$track-color, $query: $query);\n\n  @include feature-targeting.targets($feat-animation) {\n    @include keyframes.container-rotate-keyframes_;\n    @include keyframes.spinner-layer-rotate-keyframes_;\n    @include keyframes.color-1-fade-in-out-keyframes_;\n    @include keyframes.color-2-fade-in-out-keyframes_;\n    @include keyframes.color-3-fade-in-out-keyframes_;\n    @include keyframes.color-4-fade-in-out-keyframes_;\n    @include keyframes.left-spin-keyframes_;\n    @include keyframes.right-spin-keyframes_;\n  }\n\n  .mdc-circular-progress {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      position: relative;\n      @include rtl.ignore-next-line();\n      direction: ltr;\n      line-height: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-temporary(opacity, 250ms);\n    }\n  }\n\n  .mdc-circular-progress__determinate-container,\n  .mdc-circular-progress__indeterminate-circle-graphic,\n  .mdc-circular-progress__indeterminate-container,\n  .mdc-circular-progress__spinner-layer {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .mdc-circular-progress__determinate-container {\n    @include feature-targeting.targets($feat-structure) {\n      transform: rotate(-90deg);\n    }\n  }\n\n  .mdc-circular-progress__indeterminate-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Font size, letter spacing and nowrap are required in order to ignore\n      // whitespaces between HTML elements.\n      font-size: 0;\n      letter-spacing: 0;\n      white-space: nowrap;\n      opacity: 0;\n    }\n  }\n\n  .mdc-circular-progress__determinate-circle-graphic,\n  .mdc-circular-progress__indeterminate-circle-graphic {\n    @include feature-targeting.targets($feat-structure) {\n      fill: transparent;\n    }\n  }\n\n  .mdc-circular-progress__determinate-circle {\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.enter(stroke-dashoffset, 500ms);\n    }\n  }\n\n  .mdc-circular-progress__gap-patch {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      @include rtl.ignore-next-line();\n      left: 47.5%;\n      box-sizing: border-box;\n      width: 5%;\n      height: 100%;\n      overflow: hidden;\n    }\n\n    .mdc-circular-progress__indeterminate-circle-graphic {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        left: -900%;\n        width: 2000%;\n        transform: rotate(180deg);\n      }\n    }\n  }\n\n  .mdc-circular-progress__circle-clipper {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      position: relative;\n      width: 50%;\n      height: 100%;\n      overflow: hidden;\n    }\n\n    .mdc-circular-progress__indeterminate-circle-graphic {\n      @include feature-targeting.targets($feat-structure) {\n        width: 200%;\n      }\n    }\n  }\n\n  .mdc-circular-progress__circle-right {\n    .mdc-circular-progress__indeterminate-circle-graphic {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        left: -100%;\n      }\n    }\n  }\n\n  .mdc-circular-progress--indeterminate {\n    .mdc-circular-progress__determinate-container {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    .mdc-circular-progress__indeterminate-container {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    @include indeterminate-active-animations_($query);\n  }\n\n  .mdc-circular-progress--closed {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n// Public mixins\n\n/// Customizes the stroke-color of the indicator. Applies to the\n/// determinate variant, and also the indeterminate variant unless the\n/// four-color mixin is applied.\n/// @param {Color} $color - The desired stroke color.\n/// @see {mixin} indeterminate-colors\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-circular-progress__determinate-circle,\n  .mdc-circular-progress__indeterminate-circle-graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(stroke, $color);\n    }\n  }\n}\n\n/// Customizes the track color of the indicator. Applies to the\n/// determinate variant only.\n/// @param {Color} $color - The desired track color.\n@mixin track-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-circular-progress__determinate-track {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(stroke, $color);\n    }\n  }\n}\n\n/// Applies four animated stroke-colors to the indeterminate indicator.\n/// Applicable to the indeterminate variant only and overrides any single color\n/// currently set.\n/// @param {List} $colors - A list of four desired colors.\n/// @see {mixin} color\n@mixin indeterminate-colors($colors, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if length($colors) != 4 {\n    @error \"`mdc-circular-progress-colors` accepts exactly 4 colors\";\n  }\n\n  @for $i from 1 through 4 {\n    .mdc-circular-progress__color-#{$i}\n      .mdc-circular-progress__indeterminate-circle-graphic {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(stroke, nth($colors, $i));\n      }\n    }\n  }\n}\n\n// Private mixins\n\n/// Sets the animations for the indicator in indeterminate mode.\n/// @access private\n@mixin indeterminate-active-animations_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-circular-progress__indeterminate-container {\n    @include feature-targeting.targets($feat-animation) {\n      $duration: math.div(\n        360deg * variables.$arc-time,\n        variables.$arc-start-rotation-interval + (360 - variables.$arc-size)\n      );\n\n      animation: mdc-circular-progress-container-rotate $duration linear\n        infinite;\n    }\n  }\n\n  $spinner-rotate-animation: mdc-circular-progress-spinner-layer-rotate 4 *\n    variables.$arc-time variables.$timing-function infinite both;\n\n  .mdc-circular-progress__spinner-layer {\n    @include feature-targeting.targets($feat-animation) {\n      animation: $spinner-rotate-animation;\n    }\n  }\n\n  @for $i from 1 through 4 {\n    $color-fade-in-out-animation: mdc-circular-progress-color-#{$i}-fade-in-out\n      4 *\n      variables.$arc-time\n      variables.$timing-function\n      infinite\n      both;\n\n    .mdc-circular-progress__color-#{$i} {\n      @include feature-targeting.targets($feat-animation) {\n        animation: $spinner-rotate-animation, $color-fade-in-out-animation;\n      }\n    }\n  }\n\n  .mdc-circular-progress__circle-left\n    .mdc-circular-progress__indeterminate-circle-graphic {\n    @include feature-targeting.targets($feat-animation) {\n      @include gss.annotate(\n        (\n          noflip: true,\n        )\n      );\n      animation: mdc-circular-progress-left-spin variables.$arc-time\n        variables.$timing-function infinite both;\n    }\n  }\n\n  .mdc-circular-progress__circle-right\n    .mdc-circular-progress__indeterminate-circle-graphic {\n    @include feature-targeting.targets($feat-animation) {\n      @include gss.annotate(\n        (\n          noflip: true,\n        )\n      );\n      animation: mdc-circular-progress-right-spin variables.$arc-time\n        variables.$timing-function infinite both;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use './variables';\n\n/// Keyframes for the persistent rotation of the outermost container\n/// @access private\n@mixin container-rotate-keyframes_ {\n  @keyframes mdc-circular-progress-container-rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n}\n\n/// Keyframes for the rotation of the spinner layer\n/// @access private\n@mixin spinner-layer-rotate-keyframes_ {\n  @keyframes mdc-circular-progress-spinner-layer-rotate {\n    @for $i from 1 through 8 {\n      #{$i * 12.5}% {\n        transform: rotate($i * 0.5 * variables.$arc-size);\n      }\n    }\n  }\n}\n\n/// Keyframes for the fade-in and fade-out of the first color.\n/// .99 opacity is used to force subpixel rendering.\n/// @access private\n@mixin color-1-fade-in-out-keyframes_ {\n  @keyframes mdc-circular-progress-color-1-fade-in-out {\n    from {\n      opacity: 0.99;\n    }\n    25% {\n      opacity: 0.99;\n    }\n    26% {\n      opacity: 0;\n    }\n    89% {\n      opacity: 0;\n    }\n    90% {\n      opacity: 0.99;\n    }\n    to {\n      opacity: 0.99;\n    }\n  }\n}\n\n/// Keyframes for the fade-in and fade-out of the second color.\n/// .99 opacity is used to force subpixel rendering.\n/// @access private\n@mixin color-2-fade-in-out-keyframes_ {\n  @keyframes mdc-circular-progress-color-2-fade-in-out {\n    from {\n      opacity: 0;\n    }\n    15% {\n      opacity: 0;\n    }\n    25% {\n      opacity: 0.99;\n    }\n    50% {\n      opacity: 0.99;\n    }\n    51% {\n      opacity: 0;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n}\n\n/// Keyframes for the fade-in and fade-out of the third color.\n/// .99 opacity is used to force subpixel rendering.\n/// @access private\n@mixin color-3-fade-in-out-keyframes_ {\n  @keyframes mdc-circular-progress-color-3-fade-in-out {\n    from {\n      opacity: 0;\n    }\n    40% {\n      opacity: 0;\n    }\n    50% {\n      opacity: 0.99;\n    }\n    75% {\n      opacity: 0.99;\n    }\n    76% {\n      opacity: 0;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n}\n\n/// Keyframes for the fade-in and fade-out of the fourth color.\n/// .99 opacity is used to force subpixel rendering.\n/// @access private\n@mixin color-4-fade-in-out-keyframes_ {\n  @keyframes mdc-circular-progress-color-4-fade-in-out {\n    from {\n      opacity: 0;\n    }\n    65% {\n      opacity: 0;\n    }\n    75% {\n      opacity: 0.99;\n    }\n    90% {\n      opacity: 0.99;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n}\n\n/// Keyframes for the expansion and contraction of the arc for the\n/// left semi-circle.\n/// @access private\n@mixin left-spin-keyframes_ {\n  @keyframes mdc-circular-progress-left-spin {\n    from {\n      transform: rotate(265deg);\n    }\n    50% {\n      transform: rotate(130deg);\n    }\n    to {\n      transform: rotate(265deg);\n    }\n  }\n}\n\n/// Keyframes for the expansion and contraction of the arc for the\n/// right semi-circle.\n/// @access private\n@mixin right-spin-keyframes_ {\n  @keyframes mdc-circular-progress-right-spin {\n    from {\n      transform: rotate(-265deg);\n    }\n    50% {\n      transform: rotate(-130deg);\n    }\n    to {\n      transform: rotate(-265deg);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use './functions';\n\n// Public\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define line-ripple\n  .mdc-line-ripple {\n    @include feature-targeting.targets($feat-structure) {\n      &::before,\n      &::after {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-bottom-style: solid;\n        content: '';\n      }\n\n      &::before {\n        border-bottom-width: 1px;\n        z-index: 1;\n      }\n\n      &::after {\n        transform: scaleX(0);\n        border-bottom-width: 2px;\n        opacity: 0;\n        z-index: 2;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      &::after {\n        transition: functions.transition-value(transform),\n          functions.transition-value(opacity);\n      }\n    }\n  }\n\n  .mdc-line-ripple--active::after {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  .mdc-line-ripple--deactivating::after {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::after {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin inactive-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::before {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Keep this in sync with constants.numbers.MIN_LEADING_STROKE_EDGE_POSITION\n$min-leading-stroke-edge-position: 12px !default;\n// The gap between the stroke end and floating label\n// Keep this in sync with constants.numbers.NOTCH_GUTTER_SIZE\n$notch-gutter-size: 4px !default;\n$border-width: 1px !default;\n$leading-width: 12px !default;\n$padding: 4px !default;\n// This variable keeps the before/after JS label centered in the notch when the font-size is changed.\n$label-adjust: 14% !default;\n\n/// Label box height when it is floating above for notched upgraded. This value is used to put the label vertically in\n/// the middle when it is notched.\n$label-box-height: 13.5px !default;\n\n/// Label adjust offset applied to floating label when it is notched. Since notch without upgraded has different font\n/// size we add additional offset value.\n$label-adjust-absolute: 2.5px !default;\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/typography/mixins' as typography-mixins;\n@use './select-helper-text-theme';\n@use './select-icon-theme';\n@use './select-theme';\n@use './select-filled';\n@use './select-outlined';\n@use './select-ripple';\n@use './select-helper-text';\n@use './select-icon';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select {\n    @include select-theme.ink-color(\n      (\n        default: select-theme.$ink-color,\n        disabled: select-theme.$disabled-ink-color,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.label-color(\n      (\n        default: select-theme.$label-color,\n        focus: select-theme.$focused-label-color,\n        disabled: select-theme.$disabled-label-color,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.dropdown-icon-color(\n      (\n        default: select-theme.$dropdown-icon-color,\n        focus: primary,\n        disabled: select-theme.$disabled-dropdown-icon-color,\n      ),\n      $query: $query\n    );\n\n    @include select-helper-text-theme.helper-text-color(\n      (\n        default: select-helper-text-theme.$helper-text-color,\n        disabled: select-helper-text-theme.$disabled-helper-text-color,\n      ),\n      $query: $query\n    );\n\n    @include select-icon-theme.icon-color(\n      (\n        default: select-icon-theme.$icon-color,\n        disabled: select-icon-theme.$disabled-icon-color,\n      ),\n      $query: $query\n    );\n\n    // High-contrast mode support\n    @include dom-mixins.forced-colors-mode() {\n      $gray-text: (\n        disabled: GrayText,\n      );\n      @include select-theme.ink-color($gray-text, $query: $query);\n      @include select-theme.dropdown-icon-color(\n        (\n          disabled: red,\n        ),\n        $query: $query\n      );\n      @include select-theme.label-color($gray-text, $query: $query);\n      @include select-theme.bottom-line-color($gray-text, $query: $query);\n      @include select-theme.outline-color($gray-text, $query: $query);\n      @include select-icon-theme.icon-color($gray-text, $query: $query);\n      @include select-helper-text-theme.helper-text-color(\n        $gray-text,\n        $query: $query\n      );\n    }\n\n    // Floating label private mixin\n    @include _floating-label($query: $query);\n\n    // structural\n    @include _padding-horizontal(\n      $left: select-theme.$anchor-padding-left,\n      $left-with-leading-icon:\n        select-theme.$anchor-padding-left-with-leading-icon,\n      $right: select-theme.$anchor-padding-right,\n      $query: $query\n    );\n    @include select-icon-theme.size(\n      select-icon-theme.$icon-size,\n      $query: $query\n    );\n    @include select-theme.dropdown-icon-size(\n      select-icon-theme.$icon-size,\n      $query: $query\n    );\n    @include _option-side-padding(16px, $query: $query);\n    @include _option-graphic-trailing-margin(12px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      position: relative; // Menu is absolutely positioned relative to this.\n    }\n\n    &__dropdown-icon {\n      @include _dropdown-icon-base($query: $query);\n      @include _dropdown-icon-inactive($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          margin,\n          select-icon-theme.$icon-horizontal-margin,\n          select-icon-theme.$icon-horizontal-margin\n        );\n        display: inline-flex;\n        position: relative;\n        align-self: center;\n        align-items: center;\n        justify-content: center;\n        flex-shrink: 0;\n        pointer-events: none;\n      }\n\n      .mdc-select--activated & {\n        @include _dropdown-icon-active($query: $query);\n      }\n    }\n  }\n\n  .mdc-select__anchor {\n    @include floating-label-mixins.float-position(\n      select-theme.$label-position-y,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      width: select-theme.$default-width;\n      min-width: 0;\n      flex: 1 1 auto;\n      position: relative;\n      box-sizing: border-box;\n      overflow: hidden;\n      outline: none;\n      cursor: pointer;\n    }\n  }\n\n  @include _text($query: $query);\n\n  .mdc-select--invalid {\n    @include select-theme.label-color(\n      (\n        default: select-theme.$error-color,\n        focus: select-theme.$error-color,\n      ),\n      $query: $query\n    );\n    @include select-helper-text-theme.helper-text-validation-color(\n      select-theme.$error-color,\n      $query: $query\n    );\n    @include select-theme.dropdown-icon-color(\n      (\n        default: select-theme.$error-color,\n        focus: select-theme.$error-color,\n      ),\n      $query: $query\n    );\n  }\n\n  .mdc-select--disabled {\n    @include _disabled($query: $query);\n  }\n\n  .mdc-select--with-leading-icon {\n    @include _option-side-padding(12px, $query: $query);\n  }\n\n  @include _list($query: $query);\n\n  @include select-filled.core-styles($query: $query);\n  @include select-outlined.core-styles($query: $query);\n  @include select-ripple.core-styles($query: $query);\n  @include select-helper-text.helper-text-core-styles($query: $query);\n  @include select-icon.icon-core-styles($query: $query);\n}\n\n@mixin _list($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__menu .mdc-deprecated-list,\n  .mdc-select__menu .mdc-list {\n    @include select-icon-theme.icon-horizontal-margins(0, 0, $query: $query);\n    @include list-mixins.deprecated-item-selected-text-color(\n      on-surface,\n      $query: $query\n    );\n  }\n\n  .mdc-select__menu .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      align-items: center;\n    }\n  }\n\n  .mdc-select__option {\n    @include list-evolution-mixins.item-spacing(16px, $query: $query);\n  }\n\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-height(48px, $query: $query);\n  }\n\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-height(64px, $query: $query);\n\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__start {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: 20px;\n        }\n      }\n\n      .mdc-list-item__primary-text {\n        @include typography-mixins.text-baseline(\n          $top: 28px,\n          $bottom: 20px,\n          $query: $query\n        );\n      }\n\n      &.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n        @include typography-mixins.text-baseline($top: 36px, $query: $query);\n      }\n    }\n  }\n\n  .mdc-select__option-with-leading-content {\n    @include list-evolution-mixins.item-start-spacing(12px, 0, $query: $query);\n    @include list-evolution-mixins.item-start-size(36px, 24px, $query: $query);\n    @include list-evolution-mixins.item-spacing(0, 12px, $query: $query);\n  }\n\n  .mdc-select__option-with-meta {\n    @include list-evolution-mixins.item-end-spacing(12px, $query: $query);\n  }\n}\n\n///\n/// Sets base dropdown icon styles.\n/// @access private\n///\n@mixin _dropdown-icon-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon-active,\n  .mdc-select__dropdown-icon-inactive {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n  }\n\n  .mdc-select__dropdown-icon-graphic {\n    $svg-natural-width: 10px;\n    $svg-natural-height: 5px;\n\n    @include feature-targeting.targets($feat-structure) {\n      width: math.div($svg-natural-width, select-icon-theme.$icon-size) * 100%;\n      height: math.div($svg-natural-height, select-icon-theme.$icon-size) * 100%;\n    }\n  }\n}\n\n///\n/// Sets styles for transitioning the dropdown icon to inactive state.\n/// @access private\n///\n@mixin _dropdown-icon-inactive($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-select__dropdown-icon-inactive {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity select-theme.$icon-inactive-fade-in-duration linear\n        select-theme.$icon-inactive-fade-out-duration;\n    }\n  }\n\n  .mdc-select__dropdown-icon-active {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity select-theme.$icon-inactive-fade-out-duration linear;\n    }\n  }\n}\n\n///\n/// Sets styles for transitioning the dropdown icon to activated state.\n/// @access private\n///\n@mixin _dropdown-icon-active($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-select__dropdown-icon-inactive {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity select-theme.$icon-active-fade-out-duration linear;\n    }\n  }\n\n  .mdc-select__dropdown-icon-active {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity select-theme.$icon-active-fade-in-duration linear\n        select-theme.$icon-active-fade-out-duration;\n    }\n  }\n}\n\n///\n/// Sets the side padding for option text.\n/// @access private\n///\n@mixin _option-side-padding($side-padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__menu .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, $side-padding, $side-padding);\n    }\n  }\n}\n\n///\n/// Sets the traliing margin for an option's leading graphic.\n/// @access private\n///\n@mixin _option-graphic-trailing-margin(\n  $margin-right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__menu .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, $margin-right);\n    }\n  }\n}\n\n@mixin _floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-select__selected-text-container {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      appearance: none;\n      pointer-events: none;\n      box-sizing: border-box;\n      width: auto;\n      min-width: 0;\n      flex-grow: 1;\n      height: select-theme.$selected-text-height;\n      border: none;\n      outline: none;\n      padding: 0;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      background-color: transparent;\n      color: inherit; // Override default user agent stylesheet\n    }\n  }\n\n  .mdc-select__selected-text {\n    @include typography-mixins.typography(subtitle1, $query: $query);\n    @include typography-mixins.overflow-ellipsis($query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n      width: 100%;\n      @include rtl.ignore-next-line();\n      text-align: left;\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n}\n\n@mixin _disabled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    cursor: default;\n    pointer-events: none;\n  }\n}\n\n/// Adds horizontal padding to the selected text\n///\n/// @param {Number} $left - left side padding\n/// @param {Number} $left-with-leading-icon - left-side padding when a leading\n///     icon is present\n/// @param {Number} $right - right-side padding; note that a trailing icon is\n///     always present.\n@mixin _padding-horizontal(\n  $left,\n  $left-with-leading-icon,\n  $right,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, $left, $right);\n    }\n  }\n\n  &.mdc-select--with-leading-icon .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, $left-with-leading-icon, $right);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use './select-icon-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // stylelint-disable-next-line selector-combinator-space-after\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$helper-text-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$disabled-helper-text-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n@mixin helper-text-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _helper-text-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _helper-text-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin helper-text-validation-color(\n  $color-or-map,\n  $query: feature-targeting.all()\n) {\n  &:not(.mdc-select--disabled) {\n    @include _helper-text-validation-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _helper-text-validation-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n// Private mixins\n\n@mixin _helper-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    & + .mdc-select-helper-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _helper-text-validation-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    &.mdc-select--invalid + .mdc-select-helper-text--validation-msg {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n@use '@material/theme/theme-color';\n@use './evolution-mixins';\n\n@mixin deprecated-core-styles($query: feature-targeting.all()) {\n  @include deprecated-without-ripple($query);\n  @include deprecated-ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the\n// ripple-related styles from the other list styles. It is recommended that most\n// users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$deprecated-divider-color-on-dark-bg,\n    variables.$deprecated-divider-color-on-light-bg\n  );\n\n  .mdc-deprecated-list {\n    @include deprecated-base_($query);\n  }\n\n  @include deprecated-single-line-density(\n    variables.$deprecated-single-line-density-scale,\n    $query: $query\n  );\n  @include deprecated-item-secondary-text-ink-color(\n    text-secondary-on-background,\n    $query\n  );\n  @include deprecated-item-graphic-fill-color(transparent, $query);\n  @include deprecated-item-graphic-ink-color(text-icon-on-background, $query);\n  @include deprecated-item-meta-ink-color(text-hint-on-background, $query);\n  @include deprecated-group-subheader-ink-color(\n    text-primary-on-background,\n    $query\n  );\n  @include deprecated-item-disabled-text-opacity(\n    variables.$deprecated-text-disabled-opacity,\n    $query\n  );\n  @include deprecated-item-disabled-text-color(\n    variables.$deprecated-text-disabled-color,\n    $query\n  );\n  @include deprecated-item-selected-text-color(\n    variables.$deprecated-text-selected-color,\n    $query\n  );\n\n  .mdc-deprecated-list--dense {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      font-size: 0.812rem;\n    }\n  }\n\n  .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      @include deprecated-item-base_;\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-deprecated-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-deprecated-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    @include deprecated-list-item-padding-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n    @include deprecated-list-item-height-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // This is included here to preserve expected specificity behavior (avatar\n  // graphic styles must take priority).\n  // TODO(b/157038316): regroup this with density styles when nesting is fixed.\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(20px, $query);\n  }\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      fill: currentColor;\n      object-fit: cover;\n    }\n\n    // TODO(b/156624966): this retains legacy spacing but should be updated.\n    @include deprecated-graphic-size-variant(\n      variables.$deprecated-deprecated-graphic-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // Extra specificity is to override .material-icons display style if used in\n  // conjunction with mdc-deprecated-list-item__graphic\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-deprecated-list-item__meta {\n    &:not(.material-icons) {\n      @include typography.typography(caption, $query);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      margin-left: auto;\n      @include rtl.ignore-next-line();\n      margin-right: 0;\n\n      @at-root {\n        .mdc-deprecated-list-item[dir='rtl'] &,\n        [dir='rtl'] .mdc-deprecated-list-item & {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n          @include rtl.ignore-next-line();\n          margin-right: auto;\n        }\n      }\n    }\n  }\n\n  .mdc-deprecated-list-item__text {\n    @include typography.overflow-ellipsis($query);\n  }\n\n  // Disable interaction on label elements that may automatically\n  // toggle corresponding checkbox / radio input.\n  .mdc-deprecated-list-item__text[for] {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n\n  .mdc-deprecated-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-primary-text-baseline-height,\n      $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-deprecated-list--video-list &,\n    .mdc-deprecated-list--image-list &,\n    .mdc-deprecated-list--thumbnail-list &,\n    .mdc-deprecated-list--avatar-list &,\n    .mdc-deprecated-list--icon-list & {\n      @include typography.text-baseline(\n        $top:\n          variables.$deprecated-item-primary-text-baseline-height-with-graphic,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include typography.text-baseline(\n        $top: variables.$deprecated-dense-item-primary-text-baseline-height,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: inherit;\n      }\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 40px;\n    }\n  }\n\n  .mdc-deprecated-list--two-line .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n\n  .mdc-deprecated-list--two-line {\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-height;\n      }\n    }\n\n    &.mdc-deprecated-list--video-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--image-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--thumbnail-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-graphic-height;\n      }\n    }\n\n    // Icons in multiline lists are the only graphic that isn't centered.\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: flex-start;\n        margin-top: variables.$deprecated-two-line-icon-top-margin;\n      }\n    }\n  }\n\n  .mdc-deprecated-list--two-line.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item,\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 60px;\n    }\n  }\n\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(36px, $query);\n  }\n\n  // Only change mouse cursor for list items which are not disabled.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 0;\n      margin: 0;\n      border: none;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n    }\n  }\n\n  // Note: ideally we'd be able to hoist this to the top-level `$feat-color`,\n  // but doing so will cause the `border` declaration on\n  // `.mdc-deprecated-list-divider` above to override it.\n  @include deprecated-divider-color($divider-color, $query);\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items are fully inset using padding.\n  .mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-textual-variant-config,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items's leading, but not trailing, edge is inset to account for *avatar*\n  // width.\n  .mdc-deprecated-list-divider--inset {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Item's leading and trailing edges are inset to account for *avatar* width.\n  .mdc-deprecated-list-divider--inset.mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-textual-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--icon-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-icon-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--avatar-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--thumbnail-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-thumbnail-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--image-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-image-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--video-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-video-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-deprecated-list-group__subheader {\n    $list-subheader-virtual-height: 3rem;\n    $list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $list-subheader-margin: calc(\n      (#{$list-subheader-virtual-height} - #{$list-subheader-leading}) / 2\n    );\n\n    @include typography.typography(subtitle1, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: $list-subheader-margin variables.$deprecated-side-padding;\n    }\n  }\n\n  @include evolution-mixins.without-ripple($query: $query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// list styles. It is recommended that most users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // List items should support states by default, but it should be possible to opt out.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include deprecated-item-interactive-ripple_($query);\n  }\n\n  // Set styles only for focus state on disabled list item.\n  .mdc-deprecated-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n\n    #{variables.$deprecated-ripple-target},\n    #{variables.$deprecated-temporary-ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n\n  @include evolution-mixins.with-ripple($query: $query);\n}\n\n///\n/// Sets ripple color for a list item.\n///\n@mixin deprecated-ripple-states($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-ripple-target\n  );\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-temporary-ripple-target\n  );\n}\n\n/// Sets the text color of the list item in selected or activated state.\n/// @param {color} $color - The desired text color.\n@mixin deprecated-item-selected-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  // \"Selected\" is ephemeral and likely to change soon. E.g., selecting one or more photos to share in Google Photos.\n  // \"Activated\" is more permanent. E.g., the currently highlighted navigation destination in a drawer.\n  .mdc-deprecated-list-item--selected,\n  .mdc-deprecated-list-item--activated {\n    @include deprecated-item-primary-text-ink-color($color, $query: $query);\n    @include deprecated-item-graphic-ink-color($color, $query: $query);\n  }\n}\n\n@mixin deprecated-item-primary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n@mixin deprecated-item-secondary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-fill-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-meta-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__meta {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$deprecated-single-line-density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin deprecated-divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-group-subheader-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-opacity(\n  $opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled {\n    .mdc-deprecated-list-item__text,\n    .mdc-deprecated-list-item__primary-text,\n    .mdc-deprecated-list-item__secondary-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Establishes each list item's padding using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  @include deprecated-list-item-padding($leading-padding, $query);\n}\n\n///\n/// Establishes each list item's padding.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding(\n  $leading-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      padding,\n      $leading-padding,\n      variables.$deprecated-trailing-padding\n    );\n  }\n}\n\n///\n/// Establishes each list item's single line height using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $single-line-height: map.get($variant-config, single-line-height);\n  @include deprecated-list-item-height($single-line-height, $query);\n}\n\n///\n/// Establishes each list item's height.\n///\n/// @param {Number} $height The item's height.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets the trailing margin used by icons.\n///\n/// @param {Number} $margin The trailing margin applied to icons.\n///\n/// @access public\n///\n@mixin deprecated-icon-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-deprecated-list-item__graphic {\n      @include rtl.reflexive-box(margin, right, $margin);\n    }\n  }\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  @include deprecated-divider-insets($leading-padding, $text-offset, $query);\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n/// @param {Number} $text-offset The item's text offset.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets(\n  $leading-padding,\n  $text-offset,\n  $query: feature-targeting.all()\n) {\n  .mdc-deprecated-list-divider--inset-leading {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $leading: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing.mdc-deprecated-list-divider--inset-padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n}\n\n// Sets the width and height of the graphic element using a variant config.\n@mixin deprecated-graphic-size-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  $width: map.get(map.get($variant-config, graphic-size), width);\n  $height: map.get(map.get($variant-config, graphic-size), height);\n\n  @include deprecated-graphic-size(\n    $leading-padding,\n    $text-offset,\n    $width,\n    $height,\n    $query\n  );\n}\n\n// Sets the width and height of the graphic element, as well as calculates the\n// trailing margin for the graphic element such that the text is always offset\n// from the item's leading edge by 72px, which is defined within the spec. If\n// height isn't specified, the graphic is assumed to be square.\n// TODO(b/155397992): restructure to use symmetric margins.\n@mixin deprecated-graphic-size(\n  $leading-padding,\n  $text-offset,\n  $width,\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $margin-value: max(\n    $text-offset - $leading-padding - $width,\n    $leading-padding\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(margin, right, $margin-value);\n    width: $width;\n    height: $height;\n  }\n}\n\n// Deprecated. Supports legacy density styles.\n@mixin deprecated-graphic-size-dense_($size, $query: feature-targeting.all()) {\n  @include deprecated-graphic-size(\n    $leading-padding: 16px,\n    $text-offset: 16px,\n    $width: $size,\n    $height: $size,\n    $query: $query\n  );\n}\n\n///\n/// Computes the appropriate leading inset for a divider based on list type.\n///\n/// @param {String}  $variant-config The list variant configuration.\n/// @param {Boolean} $leading Whether to apply the leading inset.\n/// @param {Boolean} $trailing Whether to apply the trailing inset.\n/// @param {Boolean} $use-padding Whether to align with padding vs. text offset.\n///\n/// @access private\n///\n@mixin deprecated-divider-inset-variant(\n  $variant-config,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n\n  @include deprecated-divider-inset(\n    $leading-padding,\n    $text-offset,\n    $leading,\n    $trailing,\n    $use-padding,\n    $query\n  );\n}\n\n@mixin deprecated-divider-inset(\n  $leading-padding,\n  $text-offset,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $trailing-inset: if($trailing, variables.$deprecated-trailing-padding, 0);\n  $leading-inset: if(\n    $leading,\n    if($use-padding, $leading-padding, $text-offset),\n    0\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @if $leading {\n      @include rtl.reflexive-box(margin, left, $leading-inset);\n    }\n    width: calc(100% - #{$leading-inset + $trailing-inset});\n  }\n}\n\n///\n/// Sets density scale to single line list variant.\n///\n/// @param {Number} $density-scale Density scale for list. Supported density scales are `-4`, `-3`, `-2`, `-1` and  `0`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include deprecated-single-line-height($height, $query: $query);\n  }\n}\n\n///\n/// Sets height to single line list variant.\n///\n/// @param {Number} $height Height value in `px`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n//\n// Private\n//\n\n@mixin deprecated-base_($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  @include deprecated-item-primary-text-ink-color(\n    text-primary-on-background,\n    $query\n  );\n}\n\n@mixin deprecated-item-base_ {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  overflow: hidden;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n// Ripple styles for an interactive list item (one that is enabled and inside an interactive list).\n@mixin deprecated-item-interactive-ripple_($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n\n  #{variables.$deprecated-ripple-target},\n  #{variables.$deprecated-temporary-ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 1px;\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/rtl/rtl';\n@use './variables';\n@use './menu-surface-custom-properties';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define menu-surface\n  .mdc-menu-surface {\n    @include base_($query);\n    @include elevation-mixins.elevation($z-value: 8, $query: $query);\n    @include fill-color(surface, $query);\n    @include ink-color(on-surface, $query);\n    @include shape-radius(variables.$shape-radius, false, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(transform-origin, top left, top right);\n    }\n  }\n\n  .mdc-menu-surface--anchor {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      overflow: visible;\n    }\n  }\n\n  .mdc-menu-surface--fixed {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n    }\n  }\n\n  .mdc-menu-surface--fullwidth {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n// Used by filled variants of GM components to conditionally flatten the top\n// corners of the menu.\n@mixin flatten-top-when-opened-below($query: feature-targeting.all()) {\n  .mdc-menu-surface--is-open-below {\n    $feat-structure: feature-targeting.create-target($query, structure);\n\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: 0px;\n      border-top-right-radius: 0px;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: none;\n    position: absolute;\n    box-sizing: border-box;\n\n    $max-width: custom-properties.create(\n      menu-surface-custom-properties.$max-width,\n      calc(100vw - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-width, $max-width);\n    $max-height: custom-properties.create(\n      menu-surface-custom-properties.$max-height,\n      calc(100vh - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-height, $max-height);\n    margin: 0;\n    padding: 0;\n    transform: scale(1);\n    transform-origin: top left;\n    opacity: 0;\n    overflow: auto;\n    will-change: transform, opacity;\n    z-index: variables.$z-index;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity variables.$fade-in-duration linear,\n      transform variables.$scale-duration\n        animation-variables.$deceleration-curve-timing-function,\n      height 250ms animation-variables.$deceleration-curve-timing-function;\n  }\n\n  &:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &--animating-open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n  }\n\n  // Render this after `--animating-open` to override `opacity` & `transform`\n  // CSS properties.\n  &--open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  &--animating-closed {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity variables.$fade-out-duration linear;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/menu-surface/mixins' as menu-surface-mixins;\n@use '@material/rtl/rtl';\n@use './select-icon-theme';\n@use './select-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select--filled {\n    @include select-theme.filled-height(select-theme.$height, $query: $query);\n    @include select-theme.filled-shape-radius(\n      select-theme.$shape-radius,\n      $query: $query\n    );\n\n    @include select-theme.container-fill-color(\n      (\n        default: select-theme.$fill-color,\n        disabled: select-theme.$disabled-fill-color,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.bottom-line-color(\n      (\n        default: select-theme.$bottom-line-idle-color,\n        focus: primary,\n        hover: select-theme.$bottom-line-hover-color,\n        disabled: select-theme.$disabled-bottom-line-color,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.truncate-floating-label-max-width(\n      $leading-icon-size: 0,\n      $dropdown-icon-size: select-icon-theme.$icon-size,\n      $query: $query\n    );\n\n    @include menu-surface-mixins.flatten-top-when-opened-below($query: $query);\n\n    &.mdc-select--focused.mdc-line-ripple::after {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1, 2);\n        opacity: 1;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-position(\n          left,\n          select-theme.$outline-label-offset\n        );\n      }\n    }\n\n    &.mdc-select--with-leading-icon {\n      @include select-theme.leading-icon-floating-label-position(\n        select-icon-theme.$icon-size,\n        $query: $query\n      );\n\n      @include select-theme.truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$icon-size,\n        $dropdown-icon-size: select-icon-theme.$icon-size,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-select--invalid {\n    @include select-theme.bottom-line-color(\n      (\n        default: select-theme.$error-color,\n        hover: select-theme.$error-color,\n        focus: select-theme.$error-color,\n      ),\n      $query: $query\n    );\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use './select-icon-theme';\n@use './select-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-select--outlined {\n    $feat-structure: feature-targeting.create-target($query, structure);\n    $feat-color: feature-targeting.create-target($query, color);\n\n    @include select-theme.outlined-height(select-theme.$height, $query: $query);\n    @include select-theme.outline-shape-radius(\n      select-theme.$shape-radius,\n      $query: $query\n    );\n\n    @include select-theme.container-fill-color(\n      (\n        default: transparent,\n        disabled: transparent,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.outline-color(\n      (\n        default: select-theme.$outlined-idle-border,\n        hover: select-theme.$outlined-hover-border,\n        focus: primary,\n        disabled: select-theme.$disabled-outline-color,\n      ),\n      $query: $query\n    );\n\n    @include select-theme.truncate-notched-outline-max-width(\n      $leading-icon-size: 0,\n      $dropdown-icon-size: select-icon-theme.$icon-size,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      border: none;\n    }\n\n    .mdc-select__anchor {\n      @include floating-label-mixins.shake-animation(\n        select-outlined,\n        $query: $query\n      );\n      @include notched-outline-mixins.floating-label-float-position-absolute(\n        select-theme.$outlined-label-position-y,\n        $query: $query\n      );\n      @include notched-outline-mixins.notch-offset(\n        notched-outline-variables.$border-width,\n        $query: $query\n      );\n      @include select-theme.center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n        // To eliminate extra gap between helper text & outlined select in IE.\n        align-items: baseline;\n        overflow: visible;\n      }\n    }\n\n    .mdc-select__selected-text-container {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n        border: none;\n        z-index: 1;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        background-color: transparent;\n      }\n    }\n\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 2;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        line-height: 1.15rem;\n\n        @include rtl.reflexive-position(\n          left,\n          notched-outline-variables.$padding\n        );\n      }\n    }\n\n    &.mdc-select--focused {\n      @include notched-outline-mixins.notch-offset(\n        select-theme.$outlined-stroke-width,\n        $query: $query\n      );\n    }\n\n    &.mdc-select--invalid {\n      @include select-theme.outline-color(\n        (\n          default: select-theme.$error-color,\n          hover: select-theme.$error-color,\n          focus: select-theme.$error-color,\n        ),\n        $query: $query\n      );\n    }\n\n    &.mdc-select--with-leading-icon {\n      @include select-theme.outlined-with-leading-icon-floating-label-position-animation(\n        select-theme.$height,\n        select-icon-theme.$icon-size,\n        $query: $query\n      );\n      @include select-theme.truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$icon-size,\n        $dropdown-icon-size: select-icon-theme.$icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-menu-surface {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 8px;\n      }\n    }\n\n    &.mdc-select--no-label .mdc-menu-surface,\n    .mdc-menu-surface--is-open-below {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use './select-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-select__anchor {\n    @include ripple.surface(\n      $ripple-target: select-theme.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: select-theme.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      select-theme.$ink-color,\n      $ripple-target: select-theme.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-opacities(\n      (\n        hover: ripple-theme.states-opacity(select-theme.$ink-color, hover),\n        focus: ripple-theme.states-opacity(select-theme.$ink-color, focus),\n      ),\n      $ripple-target: select-theme.$ripple-target,\n      $query: $query\n    );\n\n    #{select-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n\n  .mdc-select__menu .mdc-deprecated-list .mdc-deprecated-list-item--selected {\n    @include list-mixins.deprecated-ripple-states(on-surface, $query: $query);\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/animation/variables';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/mixins' as typography-mixins;\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select-helper-text {\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      @include rtl.reflexive-property(margin, 16px, 16px);\n    }\n    @include typography-mixins.typography(caption, $query: $query);\n    @include typography-mixins.text-baseline(16px, $query: $query);\n  }\n\n  .mdc-select-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity 180ms variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-select--invalid + .mdc-select-helper-text--validation-msg,\n  .mdc-select-helper-text--validation-msg-persistent {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use './select-icon-theme';\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select--with-leading-icon {\n    @include _icon($query: $query);\n    @include select-icon-theme.icon-horizontal-margins(\n      $left: select-icon-theme.$icon-horizontal-margin,\n      $right: select-icon-theme.$icon-horizontal-margin,\n      $query: $query\n    );\n  }\n\n  .mdc-select__icon:not([tabindex]),\n  .mdc-select__icon[tabindex='-1'] {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      box-sizing: border-box;\n      border: none;\n      text-decoration: none;\n      cursor: pointer;\n      user-select: none;\n      flex-shrink: 0;\n      align-self: center;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      background-color: transparent;\n      fill: currentColor;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n  @include data-table-progress-indicator.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading & trailing header cells.\n  // Header cells have explicite background color applied which requires border\n  // radius to take its parent rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with densities\n    // -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      width: $component-size;\n      height: $component-size;\n      padding: math.div($component-size - $icon-size, 2);\n    }\n\n    &.mdc-icon-button--touch {\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width + $padding * 2;\n    height: $height + $padding * 2;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Dialog MDC component.\n\n@use 'sass:math';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/button/button-theme';\n@use '@material/dom/dom';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/variables' as touch-target-variables;\n@use '@material/typography/typography';\n@use './dialog-custom-properties';\n@use '@material/icon-button/icon-button-theme';\n@use './variables';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define dialog\n\n  .mdc-dialog,\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n      top: 0;\n      left: 0;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .mdc-dialog {\n    // Note: the top padding is only 20px for dialogs without titles; see below for override.\n    @include content-padding(20px, 24px, 20px, 24px, $query: $query);\n    @include min-width(variables.$min-width, $query: $query);\n    @include max-width(variables.$max-width, variables.$margin, $query: $query);\n    @include max-height(null, variables.$margin, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Use `display: none` instead of `visibility: hidden` to avoid recalculating layout when the dialog is closed.\n      display: none;\n      $z-index: custom-properties.create(\n        dialog-custom-properties.$z-index,\n        variables.$z-index\n      );\n      @include theme.property(z-index, $z-index);\n    }\n\n    &.mdc-dialog--fullscreen {\n      @include _fullscreen-dialog-size($query: $query);\n    }\n\n    &.mdc-dialog__scrim--hidden {\n      .mdc-dialog__scrim {\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 0;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n      z-index: -1;\n    }\n  }\n\n  // This wrapper element is needed to make max-height work in IE 11.\n  // See https://github.com/philipwalton/flexbugs/issues/216\n  .mdc-dialog__container {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: row; // IE 11\n      align-items: center;\n      justify-content: space-around; // Ensure Safari centers the dialog (because it treats the container's width oddly)\n      box-sizing: border-box;\n      height: 100%;\n      transform: scale(0.8);\n      opacity: 0;\n      // This element is necessary for IE 11 and needs to have `height: 100%`.\n      // Let clicks on element fall through to scrim element underneath.\n      pointer-events: none;\n    }\n  }\n\n  .mdc-dialog__surface {\n    @include elevation-mixins.overlay-surface-position($query: $query);\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-grow: 0; // IE 11\n      flex-shrink: 0; // IE 11\n      box-sizing: border-box;\n      max-width: 100%; // IE 11\n      max-height: 100%; // IE 11\n      pointer-events: auto; // Override from `.mdc-dialog__container`.\n      // IE 11: Otherwise, scrolling content in `mdc-dialog__content` overflows.\n      overflow-y: auto;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      @include dom.forced-colors-mode {\n        // Colored outline is used for HCM instead of transparent border\n        // below to prevent scrolling content overflow.\n        outline: 2px solid windowText;\n      }\n    }\n\n    &::before {\n      @include dom.transparent-border($border-width: 2px, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        // Prevent IE11 from rendering this element, because it causes scrolling\n        // content to overflow.\n        @media screen and (-ms-high-contrast: active),\n          screen and (-ms-high-contrast: none) {\n          content: none;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__title {\n    @include typography.text-baseline(\n      $top: 40px,\n      $display: block,\n      $lineHeight: null,\n      $query: $query\n    );\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      margin: 0 0 1px;\n      padding: 0 24px variables.$title-bottom-padding;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog--scrollable .mdc-dialog__title {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 1px;\n      // Adjust bottom padding to make title height align to spec when divider is present.\n      // (Titles for alert dialogs w/o dividers align based on text baseline. All spec values are divisible by 4.)\n      padding-bottom: variables.$title-bottom-padding + 6px;\n    }\n  }\n\n  .mdc-dialog--fullscreen {\n    .mdc-dialog__header {\n      @include feature-targeting.targets($feat-structure) {\n        align-items: baseline;\n        border-bottom: 1px solid transparent;\n        display: inline-flex;\n        justify-content: space-between;\n        padding: 0 variables.$header-side-padding\n          variables.$title-bottom-padding;\n        z-index: 1;\n\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    .mdc-dialog__title {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 0;\n        padding: 0;\n        border-bottom: 0;\n      }\n    }\n\n    &.mdc-dialog--scrollable .mdc-dialog__title {\n      @include feature-targeting.targets($feat-structure) {\n        border-bottom: 0;\n        margin-bottom: 0;\n      }\n    }\n\n    .mdc-dialog__close {\n      @include feature-targeting.targets($feat-structure) {\n        top: 5px;\n      }\n    }\n\n    &.mdc-dialog--scrollable .mdc-dialog__actions {\n      // If full-screen dialog is scrollable, the scroll divider over the action\n      // buttons (i.e. the \"footer\") should only be visible when the content is\n      // \"cut off\" by the footer. To toggle this divider, we override the\n      // styling set by the mdc-dialog--scrollable class, and instead rely on\n      // the mdc-dialog-scroll-divider-footer class to determine when the\n      // border-top should be visible.\n      @include feature-targeting.targets($feat-structure) {\n        border-top: 1px solid transparent;\n      }\n    }\n  }\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      flex-grow: 1;\n      box-sizing: border-box;\n      margin: 0;\n      overflow: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n\n    // The content element already has top/bottom padding, so we need to suppress margins on its first/last children.\n    > :first-child {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: 0;\n      }\n    }\n\n    // The content element already has top/bottom padding, so we need to suppress margins on its first/last children.\n    > :last-child {\n      @include feature-targeting.targets($feat-structure) {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog__title + .mdc-dialog__content,\n  .mdc-dialog__header + .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      // Eliminate padding to bring as close to spec as possible, relying on title padding.\n      // (Spec seems inconsistent RE title/body spacing on alert vs. simple variants.)\n      padding-top: 0;\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog--scrollable .mdc-dialog__title + .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      // Reduce and equalize vertical paddings when scrollable dividers are present\n      // (Note: this is intentionally after title + content to take precedence)\n      padding-top: 8px;\n      padding-bottom: 8px;\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-dialog__content .mdc-deprecated-list:first-child:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      // Override default .mdc-deprecated-list padding for content consisting exclusively of a MDC List\n      padding: 6px 0 0; // Top padding balances with title height\n    }\n  }\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern, selector-max-specificity\n  .mdc-dialog--scrollable\n    .mdc-dialog__content\n    .mdc-deprecated-list:first-child:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      // Override default .mdc-deprecated-list padding for content consisting exclusively of a MDC List\n      padding: 0;\n    }\n  }\n\n  .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      position: relative;\n      flex-shrink: 0;\n      flex-wrap: wrap;\n      align-items: center;\n      justify-content: flex-end;\n      box-sizing: border-box;\n      min-height: 52px;\n      margin: 0;\n      padding: variables.$actions-padding;\n      border-top: 1px solid transparent;\n    }\n\n    .mdc-dialog--stacked & {\n      @include feature-targeting.targets($feat-structure) {\n        flex-direction: column;\n        align-items: flex-end;\n      }\n    }\n  }\n\n  .mdc-dialog__button {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 8px);\n    }\n\n    &:first-child {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, left, 0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      max-width: 100%; // Prevent long text from overflowing parent element in IE 11\n      @include rtl.ignore-next-line();\n      text-align: right;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n\n    .mdc-dialog--stacked &:not(:first-child) {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: 12px;\n      }\n    }\n  }\n\n  .mdc-dialog--open,\n  .mdc-dialog--opening,\n  .mdc-dialog--closing {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n    }\n  }\n\n  .mdc-dialog--opening {\n    .mdc-dialog__scrim {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 150ms linear;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 75ms linear,\n          animation-functions.enter(transform, 150ms);\n      }\n    }\n  }\n\n  .mdc-dialog--closing {\n    .mdc-dialog__scrim,\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity 75ms linear;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        // Dialog container scales up while opening, but should remain scaled up while closing\n        transform: none;\n      }\n    }\n  }\n\n  .mdc-dialog--open {\n    .mdc-dialog__scrim {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n        opacity: 1;\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--shown {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-structure) {\n          opacity: 1;\n          z-index: 1;\n        }\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--hiding {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity 75ms linear;\n        }\n      }\n    }\n\n    &.mdc-dialog__surface-scrim--showing {\n      .mdc-dialog__surface-scrim {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity 150ms linear;\n        }\n      }\n    }\n  }\n\n  .mdc-dialog__surface-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      opacity: 0;\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .mdc-dialog__surface-scrim--shown &,\n    .mdc-dialog__surface-scrim--showing &,\n    .mdc-dialog__surface-scrim--hiding & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  // postcss-bem-linter: end\n\n  // Class applied to body while dialog is open, to prevent scrolling behind the dialog\n  .mdc-dialog-scroll-lock {\n    @include feature-targeting.targets($feat-structure) {\n      overflow: hidden;\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog {\n    @include container-fill-color(surface, $query: $query);\n    @include scrim-color(variables.$scrim-color, $query: $query);\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include content-ink-color(variables.$content-ink-color, $query: $query);\n    @include scroll-divider-color(\n      variables.$scroll-divider-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n  }\n\n  .mdc-dialog__surface {\n    @include elevation-mixins.elevation(24, $query: $query);\n  }\n\n  .mdc-dialog__title {\n    @include typography.typography(headline6, $query: $query);\n  }\n\n  .mdc-dialog__content {\n    @include typography.typography(body1, $query: $query);\n  }\n\n  // For go/soy-checks/rewrite-css\n  .mdc-dialog__title-icon {\n    @include feature-targeting.targets($feat-structure) {\n      /** Hook for theming API. */\n    }\n  }\n\n  @include static-styles($query: $query);\n}\n\n@mixin container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin scrim-color(\n  $color,\n  $opacity: variables.$scrim-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__scrim {\n    @include feature-targeting.targets($feat-color) {\n      background-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  .mdc-dialog__surface-scrim {\n    @include feature-targeting.targets($feat-color) {\n      background-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin title-ink-color(\n  $color,\n  $opacity: variables.$title-ink-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__title {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n}\n\n@mixin content-ink-color(\n  $color,\n  $opacity: variables.$content-ink-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-color) {\n      color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  .mdc-dialog__close {\n    @include icon-button-theme.ink_color($color: $color, $query: $query);\n  }\n}\n\n@mixin content-padding(\n  $padding-top,\n  $padding-right,\n  $padding-bottom,\n  $padding-left,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__content {\n    @include feature-targeting.targets($feat-structure) {\n      padding: $padding-top $padding-right $padding-bottom $padding-left;\n    }\n  }\n}\n\n@mixin scroll-divider-color(\n  $color,\n  $opacity: variables.$scroll-divider-opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-dialog--scrollable .mdc-dialog__title,\n  &.mdc-dialog--scrollable .mdc-dialog__actions,\n  &.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer\n    .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-color) {\n      border-color: rgba(theme-color.prop-value($color), $opacity);\n    }\n  }\n\n  &.mdc-dialog--scrollable .mdc-dialog__title {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom: 1px solid rgba(theme-color.prop-value($color), $opacity);\n      margin-bottom: 0;\n    }\n  }\n\n  &.mdc-dialog-scroll-divider-header.mdc-dialog--fullscreen\n    .mdc-dialog__header {\n    @include elevation-mixins.elevation(2, $query: $query);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin max-width($max-width, $margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $max-size-calc-expr: calc(100vw - #{$margin * 2});\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      @if $max-width {\n        $max-width-breakpoint: $max-width + ($margin * 2);\n\n        // Fit snugly within the viewport at smaller screen sizes.\n        @media (max-width: $max-width-breakpoint) {\n          max-width: $max-size-calc-expr;\n        }\n\n        // Once the screen gets big enough, apply a fixed maximum width.\n        @media (min-width: $max-width-breakpoint) {\n          max-width: $max-width;\n        }\n      } @else {\n        max-width: $max-size-calc-expr;\n      }\n    }\n  }\n}\n\n@mixin max-height($max-height, $margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $max-size-calc-expr: calc(100% - #{$margin * 2});\n\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      @if $max-height {\n        $max-height-breakpoint: $max-height + ($margin * 2);\n\n        // Fit snugly within the viewport at smaller screen sizes.\n        @media (max-height: $max-height-breakpoint) {\n          max-height: $max-size-calc-expr;\n        }\n\n        // Once the screen gets big enough, apply a fixed maximum height.\n        @media (min-height: $max-height-breakpoint) {\n          max-height: $max-height;\n        }\n      } @else {\n        max-height: $max-size-calc-expr;\n      }\n    }\n  }\n\n  // Target IE 11.\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    // On IE 11, if surface height is fixed and container height is 100%,\n    // scrolling content overflows. So, reset height if surface height\n    // is fixed.\n    .mdc-dialog__container {\n      @include feature-targeting.targets($feat-structure) {\n        /* stylelint-disable */\n        // Disable stylelint here, as nesting depth > 3 is required to\n        // work around IE 11.\n        @if $max-height {\n          $max-height-breakpoint: $max-height + ($margin * 2);\n\n          @media (min-height: $max-height-breakpoint) {\n            align-items: stretch;\n            height: auto;\n          }\n        }\n        /* stylelint-enable*/\n      }\n    }\n  }\n}\n\n// Applied to dialogs that have buttons with an increased touch target.\n@mixin with-touch-target($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $touch-target-margin: math.div(\n    touch-target-variables.$height - button-theme.$height,\n    2\n  );\n  $vertical-padding: math.max(\n    0,\n    variables.$actions-padding - $touch-target-margin\n  );\n\n  // Buttons with an increased touch target have added vertical margin, so\n  // decrease the actions element padding to compensate.\n  .mdc-dialog__actions {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $vertical-padding;\n      padding-bottom: $vertical-padding;\n\n      // The below styles override the default button touch target values,\n      // which otherwise cause `mdc-dialog__surface` to scroll unnnecessarily\n      // in IE 11.\n      .mdc-button__touch {\n        top: -$touch-target-margin; // IE 11\n        transform: none; // IE 11\n      }\n    }\n  }\n}\n\n@mixin _fullscreen-dialog-size($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-dialog__surface {\n    @include feature-targeting.targets($feat-structure) {\n      // Reset the max-width so the default dialog sizing doesn't interfere with\n      // the full-screen dialog sizing.\n      max-width: none;\n    }\n\n    // Medium screens\n    @media (max-width: 960px) {\n      @include feature-targeting.targets($feat-structure) {\n        max-height: 560px;\n        width: 560px;\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    // Small screens\n    @media (max-width: 720px) {\n      @include feature-targeting.targets($feat-structure) {\n        $max-small-height: 560px;\n        $max-small-width: 560px;\n        $min-horizontal-small-margin: 56px;\n        $min-vertical-small-margin: 80px;\n        @include _fluid-size-calc(\n          $vertical-margin: $min-vertical-small-margin,\n          $max-height: $max-small-height,\n          $horizontal-margin: $min-horizontal-small-margin,\n          $max-width: $max-small-width\n        );\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n\n    // X-Small Screens (horizontal)\n    @media (max-width: 720px) and (max-height: 400px) {\n      @include feature-targeting.targets($feat-structure) {\n        // Use 100% instead of vw/vh so the url bar is taken into account on\n        // mobile.\n        height: 100%;\n        max-height: 100vh;\n        max-width: 100vw;\n        width: 100vw;\n        @include _fullscreen-header(\n          $close-icon-padding: variables.$close-icon-padding,\n          $title-side-padding: variables.$title-side-padding\n        );\n      }\n      @include shape-mixins.radius(0, $query: $query);\n    }\n\n    // X-Small Screens\n    @media (max-width: 600px) {\n      @include feature-targeting.targets($feat-structure) {\n        // Use 100% instead of vw/vh so the url bar is taken into account on\n        // mobile.\n        height: 100%;\n        max-height: 100vh;\n        max-width: 100vw;\n        width: 100vw;\n        @include _fullscreen-header(\n          $close-icon-padding: variables.$close-icon-padding,\n          $title-side-padding: variables.$title-side-padding\n        );\n      }\n      @include shape-mixins.radius(0, $query: $query);\n    }\n\n    // Large to X-Large screens\n    @media (min-width: 960px) {\n      @include feature-targeting.targets($feat-structure) {\n        $min-horizontal-margin: 200px;\n        width: calc(100vw - #{$min-horizontal-margin * 2});\n        @include _modal-header(\n          $close-icon-padding: variables.$close-icon-padding\n        );\n      }\n    }\n  }\n}\n\n/// Defines styling to specify a fluid dialog size while maintaining a specific\n/// vertical and horizontal margin.\n/// @param  {Number} $vertical-margin\n/// @param  {Number} $max-height\n/// @param  {Number} $horizontal-margin\n/// @param  {Number} $max-width\n@mixin _fluid-size-calc(\n  $vertical-margin,\n  $max-height,\n  $horizontal-margin,\n  $max-width\n) {\n  $max-width-calc-expr: calc(100vw - #{$horizontal-margin * 2});\n  $max-width-breakpoint: $max-width + ($horizontal-margin * 2);\n\n  @media (max-width: $max-width-breakpoint) {\n    width: $max-width-calc-expr;\n  }\n  @media (min-width: $max-width-breakpoint) {\n    width: $max-width;\n  }\n\n  $max-height-calc-expr: calc(100vh - #{$vertical-margin * 2});\n  $max-height-breakpoint: $max-height + ($vertical-margin * 2);\n\n  @media (max-height: $max-height-breakpoint) {\n    max-height: $max-height-calc-expr;\n  }\n  @media (min-height: $max-height-breakpoint) {\n    max-height: $max-height;\n  }\n}\n\n/// Defines styles for the header bar when a dialog takes up the full screen.\n/// @param  {Number} $close-icon-padding - Padding on close icon button.\n/// @param  {Number} $title-side-padding - Space between the edge of the close\n///   icon button and edge of the title.\n@mixin _fullscreen-header($close-icon-padding, $title-side-padding) {\n  .mdc-dialog__close {\n    order: -1;\n    @include theme.property(left, -#{$close-icon-padding});\n  }\n  .mdc-dialog__header {\n    padding: 0 variables.$fullscreen-header-side-padding\n      variables.$title-bottom-padding;\n    justify-content: flex-start;\n  }\n  .mdc-dialog__title {\n    @include theme.property(\n      margin-left,\n      'calc(title - 2 * close)',\n      $replace: (title: $title-side-padding, close: $close-icon-padding)\n    );\n  }\n}\n\n/// Defines styles for the header bar when a dialog is modal.\n/// @param  {Number} $close-icon-padding - Padding on close icon button.\n@mixin _modal-header($close-icon-padding) {\n  .mdc-dialog__close {\n    @include theme.property(right, -#{$close-icon-padding});\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$scrim-color: on-surface !default;\n$title-ink-color: on-surface !default;\n$content-ink-color: on-surface !default;\n$scroll-divider-color: on-surface !default;\n\n$scrim-opacity: 0.32 !default;\n$title-ink-opacity: 0.87 !default;\n$content-ink-opacity: 0.6 !default;\n$scroll-divider-opacity: 0.12 !default;\n\n$min-width: 280px !default;\n$max-width: 560px !default;\n$margin: 16px !default;\n$shape-radius: medium !default;\n$title-bottom-padding: 9px !default;\n$actions-padding: 8px !default;\n$header-side-padding: 24px !default;\n\n$close-icon-padding: 12px !default;\n$title-side-padding: 16px !default;\n$fullscreen-header-side-padding: 16px !default;\n\n$z-index: 7 !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define drawer\n  .mdc-drawer {\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include subtitle-ink-color(variables.$subtitle-ink-color, $query: $query);\n    @include border-color(variables.$divider-color, $query: $query);\n    @include surface-fill-color(variables.$surface-fill-color, $query: $query);\n    @include item-icon-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-text-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-activated-icon-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include item-activated-text-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include item-shape-radius(variables.$item-shape-radius, $query: $query);\n    @include z-index(variables.$z-index, $query: $query);\n    @include width(variables.$width, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      height: 100%;\n      @include rtl.ignore-next-line();\n      border-right-width: 1px;\n      @include rtl.ignore-next-line();\n      border-right-style: solid;\n      overflow: hidden;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        border-right-width: 0;\n        @include rtl.ignore-next-line();\n        border-left-width: 1px;\n        @include rtl.ignore-next-line();\n        border-right-style: none;\n        @include rtl.ignore-next-line();\n        border-left-style: solid;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: transform;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    @include list-item_($query);\n  }\n\n  .mdc-drawer--animate {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl.rtl {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  .mdc-drawer--opening {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(0);\n\n      // Required to level the specificity with animate class.\n      @include rtl.rtl {\n        transform: translateX(0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-enter;\n    }\n  }\n\n  .mdc-drawer--closing {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl.rtl {\n        transform: translateX(100%);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-exit;\n    }\n  }\n\n  .mdc-drawer__header {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      box-sizing: border-box;\n      min-height: 64px; // same as $mdc-top-app-bar-row-height\n      padding: 0 variables.$surface-padding 4px;\n    }\n  }\n\n  .mdc-drawer__title {\n    @include typography.typography(headline6, $query: $query);\n    @include typography.text-baseline(\n      $top: 36px,\n      $bottom: 20px,\n      $query: $query\n    );\n  }\n\n  .mdc-drawer__subtitle {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 20px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-drawer__content {\n    @include feature-targeting.targets($feat-structure) {\n      height: 100%;\n      overflow-y: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin dismissible-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-drawer--dismissible {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, 0);\n\n      display: none;\n      position: absolute;\n\n      &.mdc-drawer--open {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 0);\n\n      position: relative;\n    }\n  }\n}\n\n@mixin modal-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-drawer--modal {\n    @include scrim-fill-color(variables.$modal-scrim-color, $query: $query);\n    @include elevation-mixins.elevation(\n      variables.$modal-elevation,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, 0);\n\n      display: none;\n      position: fixed;\n    }\n\n    &.mdc-drawer--open {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: variables.$z-index - 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: opacity;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-drawer--open + & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n\n    .mdc-drawer--animate + & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    .mdc-drawer--opening + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-enter;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-drawer--closing + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-exit;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n  }\n}\n\n@mixin activated-overlay-color($color, $query: feature-targeting.all()) {\n  :not(.mdc-deprecated-list--non-interactive) > .mdc-deprecated-list-item {\n    @include ripple-theme.states-activated($color, $query: $query);\n  }\n}\n\n@mixin border-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $value);\n  }\n}\n\n@mixin item-shape-radius(\n  $radius,\n  $rtl-reflexive: true,\n  $query: feature-targeting.all()\n) {\n  @include list-mixins.deprecated-single-line-shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n@mixin shape-radius($radius, $query: feature-targeting.all()) {\n  // Check type since $radius may be a custom property Map\n  $is-list: meta.type-of($radius) == 'list';\n  @if $is-list and list.length($radius) > 2 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  } @else if $is-list and list.length($radius) == 2 {\n    $radius: 0 list.nth($radius, 1) list.nth($radius, 2) 0;\n  } @else {\n    $radius: 0 $radius $radius 0;\n  }\n\n  @include shape-mixins.radius($radius, $rtl-reflexive: true, $query: $query);\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include list-mixins.deprecated-divider-color($value, $query: $query);\n}\n\n@mixin title-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$title-ink-opacity);\n\n  .mdc-drawer__title {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin subtitle-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$subtitle-ink-opacity);\n\n  @include list-mixins.deprecated-group-subheader-ink-color(\n    $value,\n    $query: $query\n  );\n\n  .mdc-drawer__subtitle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $accessibleColor: theme-color.accessible-ink-color($color);\n\n  @include title-ink-color($accessibleColor, $query: $query);\n  @include subtitle-ink-color($accessibleColor, $query: $query);\n  @include item-text-ink-color($accessibleColor, $query: $query);\n  @include item-icon-ink-color($accessibleColor, $query: $query);\n  @include surface-fill-color($color, $query: $query);\n}\n\n@mixin item-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-icon-ink-opacity\n  );\n\n  @include list-mixins.deprecated-item-graphic-ink-color(\n    $value,\n    $query: $query\n  );\n}\n\n@mixin item-activated-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-icon-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-graphic-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-activated-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin surface-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin scrim-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$modal-scrim-opacity);\n\n  + .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $value);\n    }\n  }\n}\n\n@mixin z-index($value, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $value;\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(width, $width);\n  }\n\n  &.mdc-drawer--open:not(.mdc-drawer--closing) + .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, $width);\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin list-item_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      height: calc(48px - 2 * #{variables.$list-item-spacing});\n      // To accomodate margin conflict.\n      margin: (variables.$list-item-spacing * 2) 8px;\n      padding: 0 math.div(variables.$surface-padding, 2);\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 2px;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-last-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-group__subheader {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 24px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      padding: 0 variables.$surface-padding;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      margin: 3px 0 4px;\n    }\n  }\n\n  // Prevents list item children from being included in the click target.\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item__text,\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n// Colors\n$title-ink-color: theme-color.prop-value(on-surface) !default;\n$subtitle-ink-color: theme-color.prop-value(on-surface) !default;\n$item-inactive-ink-color: theme-color.prop-value(on-surface) !default;\n$item-activated-ink-color: theme-color.prop-value(primary) !default;\n$divider-color: theme-color.prop-value(on-surface) !default;\n$surface-fill-color: surface !default;\n\n// Opacity\n$title-ink-opacity: theme-color.text-emphasis(high) !default;\n$subtitle-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-icon-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$item-active-icon-ink-opacity: 1 !default;\n$item-active-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$divider-opacity: 0.12 !default;\n\n// Widths\n$width: 256px !default;\n$list-item-spacing: 4px !default;\n$surface-padding: 16px !default;\n$shape-radius: large !default;\n$item-shape-radius: small !default;\n\n// Animations\n$animation-enter: 250ms !default;\n$animation-exit: 200ms !default;\n\n// Scrim\n$modal-scrim-color: theme-color.prop-value(on-surface) !default;\n$modal-scrim-opacity: 0.32 !default;\n\n$z-index: 6 !default;\n$modal-elevation: 16 !default;\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/elevation/elevation';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-custom-properties';\n@use './extended-fab-theme';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:list';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define fab\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include base_($query: $query);\n  }\n\n  .mdc-fab--mini {\n    @include mini_($query: $query);\n  }\n\n  .mdc-fab--extended {\n    @include extended_($query: $query);\n  }\n\n  .mdc-fab--touch {\n    @include touch-target-mixins.margin(\n      $component-height: fab-theme.$mini-height,\n      $component-width: fab-theme.$mini-height,\n      $query: $query\n    );\n\n    .mdc-fab__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-fab::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  .mdc-fab__label {\n    @include label_($query: $query);\n  }\n\n  .mdc-fab__icon {\n    @include icon_($query: $query);\n  }\n\n  // Increase specificity for FAB icon styles that need to override styles defined for .material-icons\n  // (which is loaded separately so the order of CSS definitions is not guaranteed)\n  .mdc-fab .mdc-fab__icon {\n    @include icon-overrides_($query: $query);\n  }\n\n  .mdc-fab--exited {\n    @include exited_($query: $query);\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-fab {\n    @include fab-theme.container-color(secondary, $query: $query);\n    @include fab-theme.icon-size(24px, $query: $query);\n    @include fab-theme.ink-color(on-secondary, $query: $query);\n    @include fab-theme.shape-radius(fab-theme.$shape-radius, $query: $query);\n    @include elevation-theme.elevation(6, $query: $query);\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    // Set `$opacity-map` to null to apply default opacity-map.\n    @include fab-theme.ripple-color(\n      on-secondary,\n      $opacity-map: null,\n      $query: $query\n    );\n\n    #{fab-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n    @include ripple-theme.behind-content(\n      fab-theme.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n$icon-enter-delay_: 90ms;\n$icon-enter-duration_: 180ms;\n\n@mixin base_($query: feature-targeting.all()) {\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: fab-theme.$height;\n    height: fab-theme.$height;\n    padding: 0;\n    border: none;\n    fill: currentColor;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: box-shadow elevation-theme.$transition-duration\n        elevation-theme.$transition-timing-function,\n      opacity 15ms linear 30ms,\n      animation-functions.enter(\n        transform,\n        $icon-enter-duration_ + $icon-enter-delay_\n      );\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  &:hover {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  @include ripple-theme.focus() {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  // Increase active state specificity due to ripple-theme.focus().\n  &:active,\n  &:focus:active {\n    @include elevation-theme.elevation(12, $query: $query);\n  }\n\n  &:active,\n  &:focus {\n    // TODO(acdvorak): Should this be paired with states and/or ripple? We don't want to disable outline\n    // (an accessibility/usability feature) unless we're confident that there is also a visual indication that the\n    // element has focus. If the client has customized the DOM in some unexpected way, and is certain that another\n    // element will receive focus instead, they can always override this property manually in their CSS.\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // stylelint-disable selector-max-type\n  // postcss-bem-linter: ignore\n  > svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // stylelint-enable selector-max-type\n}\n\n@mixin mini_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: fab-theme.$mini-height;\n    height: fab-theme.$mini-height;\n  }\n}\n\n@mixin extended_($query: feature-targeting.all()) {\n  @include typography.typography(button, $query: $query);\n  @include extended-fab-theme.extended-shape-radius(\n    fab-theme.$shape-radius,\n    $query: $query\n  );\n  $extended-icon-padding: custom-properties.create(\n    fab-custom-properties.$extended-icon-padding,\n    extended-fab-theme.$extended-icon-padding\n  );\n  $extended-label-padding: custom-properties.create(\n    fab-custom-properties.$extended-label-padding,\n    extended-fab-theme.$extended-label-padding\n  );\n  @include extended-fab-theme.extended-padding(\n    extended-fab-theme.$extended-icon-padding,\n    extended-fab-theme.$extended-label-padding,\n    $query: $query\n  );\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: auto;\n    max-width: 100%;\n    height: extended-fab-theme.$extended-height;\n    // This allows the text within the extended fab to be centered for varying font sizes.\n    /* @alternate */\n    line-height: normal;\n  }\n}\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation-functions.enter(\n      transform,\n      $icon-enter-duration_,\n      $icon-enter-delay_\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    fill: currentColor;\n    will-change: transform;\n  }\n}\n\n@mixin label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow-x: hidden;\n    overflow-y: visible;\n  }\n}\n\n@mixin icon-overrides_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n@mixin exited_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity 15ms linear 150ms,\n      animation-functions.exit-permanent(transform, 180ms);\n  }\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scale(0);\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-permanent(transform, 135ms);\n    }\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation-theme';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/tokens/resolvers';\n@use './fab-custom-properties';\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n$height: 56px !default;\n$mini-height: 40px !default;\n$shape-radius: 50% !default;\n$ripple-target: '.mdc-fab__ripple';\n\n$_light-theme: (\n  container-color: secondary,\n  container-elevation: 6,\n  container-height: 56px,\n  container-shadow-color: black,\n  container-shape: $shape-radius,\n  container-width: 56px,\n  focus-container-elevation: null,\n  focus-icon-color: null,\n  focus-outline-color: null,\n  focus-outline-width: null,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: null,\n  hover-container-elevation: null,\n  hover-icon-color: null,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: null,\n  icon-color: on-secondary,\n  icon-size: 24px,\n  lowered-container-elevation: null,\n  lowered-focus-container-elevation: null,\n  lowered-hover-container-elevation: null,\n  lowered-pressed-container-elevation: null,\n  pressed-container-elevation: null,\n  pressed-icon-color: null,\n  pressed-ripple-color: null,\n  pressed-ripple-opacity: null,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: null,\n);\n\n$custom-property-prefix: 'fab';\n\n///\n/// Applies the given theme as custom properties without any selectors.\n///\n@mixin theme($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($_light-theme, $theme);\n  $resolved-theme: resolve-theme($theme, $resolvers);\n  @include keys.declare-custom-properties(\n    $resolved-theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($_light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n  @include base-theme-styles($theme, $resolvers: $resolvers);\n\n  $shape-radius: map.get($theme, container-shape);\n  @if $shape-radius {\n    @include shape-radius($shape-radius);\n  }\n}\n\n///\n/// Resolves the given theme with the given resolvers.\n///\n@function resolve-theme($theme, $resolvers) {\n  $elevation-resolver: map.get($resolvers, elevation);\n  @return _resolve-theme-elevation-keys(\n    $theme,\n    $elevation-resolver,\n    (\n      container-elevation,\n      hover-container-elevation,\n      focus-container-elevation,\n      pressed-container-elevation,\n      disabled-container-elevation,\n      lowered-container-elevation,\n      lowered-focus-container-elevation,\n      lowered-hover-container-elevation,\n      lowered-pressed-container-elevation\n    )\n  );\n}\n\n///\n/// Returns the theme with the elevation keys resolved.\n///\n@function _resolve-theme-elevation-keys($theme, $resolver, $elevation-keys) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  // Shadow color is universal for the component.\n  $shadow-color: map.get($theme, container-shadow-color);\n\n  @each $key in $elevation-keys {\n    $elevation: map.get($theme, $key);\n    @if $elevation != null {\n      $resolved-value: meta.call(\n        $resolver,\n        $elevation: $elevation,\n        $shadow-color: $shadow-color\n      );\n      // Update the key with the resolved value.\n      $theme: map.set($theme, $key, $resolved-value);\n    }\n  }\n\n  @return $theme;\n}\n\n@mixin base-theme-styles($theme, $resolvers: resolvers.$material) {\n  @include container-color(map.get($theme, container-color));\n  @include _container-elevation(\n    map.get($resolvers, elevation),\n    map.get($theme, container-shadow-color),\n    (\n      default: map.get($theme, container-elevation),\n      hover: map.get($theme, hover-container-elevation),\n      focus: map.get($theme, focus-container-elevation),\n      pressed: map.get($theme, pressed-container-elevation),\n    )\n  );\n  @include _container-height(map.get($theme, container-height));\n  @include _container-width(map.get($theme, container-width));\n  @include icon-size(map.get($theme, icon-size));\n  @include _icon-color(\n    (\n      default: map.get($theme, icon-color),\n      hover: map.get($theme, hover-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  $opacity-map: (\n    hover: map.get($theme, hover-state-layer-opacity),\n    focus: map.get($theme, focus-state-layer-opacity),\n    press: map.get($theme, pressed-state-layer-opacity),\n  );\n  $hover-state-layer-color: map.get($theme, hover-state-layer-color);\n  @if $hover-state-layer-color {\n    @include ripple-color($hover-state-layer-color, $opacity-map: $opacity-map);\n  }\n\n  $focus-outline-color: map.get($theme, focus-outline-color);\n  @if $focus-outline-color {\n    @include focus-outline-color($focus-outline-color);\n  }\n  $focus-outline-width: map.get($theme, focus-outline-width);\n  @if $focus-outline-width {\n    @include focus-outline-width($focus-outline-width);\n  }\n}\n\n@mixin ripple-color($color, $opacity-map: (), $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin accessible($container-color, $query: feature-targeting.all()) {\n  @include container-color($container-color, $query: $query);\n\n  $fill-tone: theme-color.tone($container-color);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query: $query);\n    @include ripple-theme.states(\n      text-primary-on-dark,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  } @else {\n    @include ink-color(text-primary-on-light, $query: $query);\n    @include ripple-theme.states(\n      text-primary-on-light,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin container-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin icon-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('width', $width);\n      @include theme.property('height', $height);\n      @include theme.property('font-size', $height);\n    }\n  }\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &,\n    &:not(:disabled) .mdc-fab__icon,\n    &:not(:disabled) .mdc-fab__label,\n    &:disabled .mdc-fab__icon,\n    &:disabled .mdc-fab__label {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin _container-height($height) {\n  @include theme.property('height', $height);\n}\n\n@mixin _container-width($width) {\n  @include theme.property('width', $width);\n}\n\n@mixin _icon-color($color-or-map) {\n  &:not(:disabled) {\n    @include _set-icon-color(state.get-default-state($color-or-map));\n\n    &:hover {\n      @include _set-icon-color(state.get-hover-state($color-or-map));\n    }\n\n    &:focus {\n      @include _set-icon-color(state.get-focus-state($color-or-map));\n    }\n\n    &:active {\n      @include _set-icon-color(state.get-pressed-state($color-or-map));\n    }\n  }\n\n  &:disabled {\n    @include _set-icon-color(state.get-disabled-state($color-or-map));\n  }\n}\n\n@mixin _set-icon-color($color) {\n  .mdc-fab__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _container-elevation($resolver, $shadow-color, $map) {\n  &:not(:disabled) {\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: state.get-default-state($map),\n      $shadow-color: $shadow-color\n    );\n\n    &:hover {\n      @include elevation-theme.with-resolver(\n        $resolver,\n        $elevation: state.get-hover-state($map),\n        $shadow-color: $shadow-color\n      );\n    }\n\n    &:focus {\n      @include elevation-theme.with-resolver(\n        $resolver,\n        $elevation: state.get-focus-state($map),\n        $shadow-color: $shadow-color\n      );\n    }\n\n    &:active {\n      @include elevation-theme.with-resolver(\n        $resolver,\n        $elevation: state.get-pressed-state($map),\n        $shadow-color: $shadow-color\n      );\n    }\n  }\n\n  &:disabled {\n    // FAB does not have disabled state. Use default state's elevation.\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: state.get-default-state($map),\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n///\n/// Sets outline width only when button is in focus. Also sets padding to\n/// include outline on focus (Helps prevent size jump on focus).\n/// @param {Number} $width - Outline (border) width.\n/// @param {Number|List} $padding [0] - Padding when button is not in focus.\n///     Offsets padding based on given outline width on focus.\n///\n@mixin focus-outline-width(\n  $width,\n  $padding: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $padding: css.unpack-value($padding);\n  $padding-fallbacks: (0 0 0 0);\n  $is-padding-custom-prop: (false false false false);\n  $is-width-custom-prop: custom-properties.is-custom-prop($width);\n  $width-fallback: if(\n    custom-properties.is-custom-prop($width),\n    custom-properties.get-fallback($width),\n    $width\n  );\n  $width: if(\n    custom-properties.is-custom-prop($width),\n    custom-properties.get-declaration-value($width),\n    $width\n  );\n\n  // conform padding values and extract custom property metadata from them\n  @for $i from 1 through list.length($padding) {\n    $value: list.nth($padding, $i);\n    $value-is-custom-prop: custom-properties.is-custom-prop($value);\n    // css max will fail to compare a bare 0 to a px value\n    $value: if($value == 0, 0px, $value);\n    $value-fallback: if(\n      $value-is-custom-prop,\n      custom-properties.get-fallback($value),\n      $value\n    );\n    $value: if(\n      $value-is-custom-prop,\n      custom-properties.get-declaration-value($value),\n      $value\n    );\n\n    $padding: list.set-nth($padding, $i, $value);\n    $padding-fallbacks: list.set-nth($padding-fallbacks, $i, $value-fallback);\n    $is-padding-custom-prop: list.set-nth(\n      $is-padding-custom-prop,\n      $i,\n      $value-is-custom-prop\n    );\n  }\n\n  // Padding should include outline width which will be set on focus.\n  // sass math required for IE since IE doesn't support css max\n  $padding-top-fallback: math.max(\n    list.nth($padding-fallbacks, 1),\n    $width-fallback\n  );\n  $padding-right-fallback: math.max(\n    list.nth($padding-fallbacks, 2),\n    $width-fallback\n  );\n  $padding-bottom-fallback: math.max(\n    list.nth($padding-fallbacks, 3),\n    $width-fallback\n  );\n  $padding-left-fallback: math.max(\n    list.nth($padding-fallbacks, 4),\n    $width-fallback\n  );\n\n  $padding-top: replace.replace-string(\n    'max(paddingval, width)',\n    (\n      paddingval: list.nth($padding, 1),\n      width: $width,\n    )\n  );\n  $padding-right: replace.replace-string(\n    'max(paddingval, width)',\n    (\n      paddingval: list.nth($padding, 2),\n      width: $width,\n    )\n  );\n  $padding-bottom: replace.replace-string(\n    'max(paddingval, width)',\n    (\n      paddingval: list.nth($padding, 3),\n      width: $width,\n    )\n  );\n  $padding-left: replace.replace-string(\n    'max(paddingval, width)',\n    (\n      paddingval: list.nth($padding, 4),\n      width: $width,\n    )\n  );\n\n  $top-has-custom-prop: $is-width-custom-prop or\n    list.nth($is-padding-custom-prop, 1);\n  @include css.declaration(padding-top, $padding-top-fallback);\n  @if $top-has-custom-prop {\n    @include css.declaration(\n      padding-top,\n      $padding-top,\n      $gss: (alternate: $top-has-custom-prop)\n    );\n  }\n\n  $right-has-custom-prop: $is-width-custom-prop or\n    list.nth($is-padding-custom-prop, 2);\n  @include css.declaration(padding-right, $padding-right-fallback);\n  @if $right-has-custom-prop {\n    @include css.declaration(\n      padding-right,\n      $padding-right,\n      $gss: (alternate: $right-has-custom-prop)\n    );\n  }\n\n  $bottom-has-custom-prop: $is-width-custom-prop or\n    list.nth($is-padding-custom-prop, 3);\n  @include css.declaration(padding-bottom, $padding-bottom-fallback);\n  @if $bottom-has-custom-prop {\n    @include css.declaration(\n      padding-bottom,\n      $padding-bottom,\n      $gss: (alternate: $bottom-has-custom-prop)\n    );\n  }\n\n  $left-has-custom-prop: $is-width-custom-prop or\n    list.nth($is-padding-custom-prop, 4);\n  @include css.declaration(padding-left, $padding-left-fallback);\n  @if $left-has-custom-prop {\n    @include css.declaration(\n      padding-left,\n      $padding-left,\n      $gss: (alternate: $left-has-custom-prop)\n    );\n  }\n\n  &:not(:disabled) {\n    @include ripple-theme.focus() {\n      @include feature-targeting.targets($feat-structure) {\n        border-style: solid;\n        @include theme.property(border-width, $width);\n\n        // sass math required for IE since IE doesn't support css max\n        $padding-top-fallback: math.abs(\n          list.nth($padding-fallbacks, 1) - $width-fallback\n        );\n        $padding-right-fallback: math.abs(\n          list.nth($padding-fallbacks, 2) - $width-fallback\n        );\n        $padding-bottom-fallback: math.abs(\n          list.nth($padding-fallbacks, 3) - $width-fallback\n        );\n        $padding-left-fallback: math.abs(\n          list.nth($padding-fallbacks, 4) - $width-fallback\n        );\n\n        // max(a, calc(a * -1)) is equivalent to math.abs\n        $padding-top: replace.replace-string(\n          'max(paddingcalc, calc(paddingcalc * -1))',\n          (\n            paddingcalc: 'calc(paddingval - width)',\n            paddingval: list.nth($padding, 1),\n            width: $width,\n          )\n        );\n        $padding-right: replace.replace-string(\n          'max(paddingcalc, calc(paddingcalc * -1))',\n          (\n            paddingcalc: 'calc(paddingval - width)',\n            paddingval: list.nth($padding, 2),\n            width: $width,\n          )\n        );\n        $padding-bottom: replace.replace-string(\n          'max(paddingcalc, calc(paddingcalc * -1))',\n          (\n            paddingcalc: 'calc(paddingval - width)',\n            paddingval: list.nth($padding, 3),\n            width: $width,\n          )\n        );\n        $padding-left: replace.replace-string(\n          'max(paddingcalc, calc(paddingcalc * -1))',\n          (\n            paddingcalc: 'calc(paddingval - width)',\n            paddingval: list.nth($padding, 4),\n            width: $width,\n          )\n        );\n\n        @include css.declaration(padding-top, $padding-top-fallback);\n        @if $top-has-custom-prop {\n          @include css.declaration(\n            padding-top,\n            $padding-top,\n            $gss: (alternate: $top-has-custom-prop)\n          );\n        }\n        @include css.declaration(padding-right, $padding-right-fallback);\n        @if $right-has-custom-prop {\n          @include css.declaration(\n            padding-right,\n            $padding-right,\n            $gss: (alternate: $right-has-custom-prop)\n          );\n        }\n        @include css.declaration(padding-bottom, $padding-bottom-fallback);\n        @if $bottom-has-custom-prop {\n          @include css.declaration(\n            padding-bottom,\n            $padding-bottom,\n            $gss: (alternate: $bottom-has-custom-prop)\n          );\n        }\n        @include css.declaration(padding-left, $padding-left-fallback);\n        @if $left-has-custom-prop {\n          @include css.declaration(\n            padding-left,\n            $padding-left,\n            $gss: (alternate: $left-has-custom-prop)\n          );\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets outline color only when button is in focus. Use `focus-outline-width()`\n/// to set appropriate outline width.\n/// @param {Color} $color - Outline (border) color.\n///\n@mixin focus-outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:not(:disabled) {\n    @include ripple-theme.focus() {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  &:not(.mdc-fab--extended) {\n    // Do not specify $component-height for shape radius. FABs are circular,\n    // which means they can use percentage border radius without resolving to\n    // a component height.\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n    #{$ripple-target} {\n      @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n    }\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/tokens/resolvers';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n\n$extended-icon-padding: 12px !default;\n$extended-label-padding: 20px !default;\n$extended-height: 48px !default;\n\n$_extended-light-theme: (\n  container-color: theme-color.$surface,\n  container-elevation: 3,\n  container-height: 56px,\n  container-shadow-color: black,\n  container-shape: 50%,\n  focus-container-elevation: null,\n  focus-icon-color: null,\n  focus-label-text-color: null,\n  focus-outline-color: null,\n  focus-outline-width: null,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: null,\n  hover-container-elevation: null,\n  hover-icon-color: null,\n  hover-label-text-color: null,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: null,\n  icon-color: null,\n  icon-size: 36px,\n  label-text-color: theme-color.$on-surface,\n  label-text-font: typography.get-font(button),\n  label-text-size: typography.get-size(button),\n  label-text-tracking: typography.get-tracking(button),\n  label-text-weight: typography.get-weight(button),\n  lowered-container-elevation: null,\n  lowered-focus-container-elevation: null,\n  lowered-hover-container-elevation: null,\n  lowered-pressed-container-elevation: null,\n  pressed-container-elevation: null,\n  pressed-icon-color: null,\n  pressed-label-text-color: null,\n  pressed-ripple-color: null,\n  pressed-ripple-opacity: null,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: null,\n);\n\n$custom-property-prefix: 'extended-fab';\n\n///\n/// Applies the given theme as custom properties without any selectors.\n///\n@mixin theme($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($_extended-light-theme, $theme);\n  $resolved-theme: fab-theme.resolve-theme($theme, $resolvers);\n  @include keys.declare-custom-properties(\n    $resolved-theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($_extended-light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include fab-theme.base-theme-styles($theme, $resolvers: $resolvers);\n  $container-shape: map.get($theme, container-shape);\n  @if $container-shape {\n    @include extended-shape-radius($container-shape);\n  }\n  @include _label-color(\n    (\n      default: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n    )\n  );\n  @include _label-typography(\n    (\n      font: map.get($theme, label-text-font),\n      size: map.get($theme, label-text-size),\n      weight: map.get($theme, label-text-weight),\n      tracking: map.get($theme, label-text-tracking),\n    )\n  );\n}\n\n@mixin extended-fluid($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n  }\n}\n\n@mixin extended-padding(\n  $icon-padding,\n  $label-padding,\n  $focus-outline-width: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include extended-label-padding($label-padding, $query: $query);\n\n  // Offsets the outer label padding by deducting it from icon padding.\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include extended-icon-padding($icon-padding, $label-padding);\n    }\n  }\n\n  // For Extended FAB with text label followed by icon.\n  .mdc-fab__label + .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include extended-icon-padding(\n        $icon-padding,\n        $label-padding,\n        $is-icon-at-end: true\n      );\n    }\n  }\n\n  @if $focus-outline-width {\n    @include fab-theme.focus-outline-width(\n      $focus-outline-width,\n      $padding: 0 $label-padding\n    );\n  }\n}\n\n@mixin extended-icon-padding(\n  $icon-padding,\n  $label-padding,\n  $is-icon-at-end: false\n) {\n  $start: 'calc(icon - label)';\n  $end: $icon-padding;\n\n  @if $is-icon-at-end {\n    $start: $icon-padding;\n    $end: 'calc(icon - label)';\n  }\n\n  @include rtl.reflexive-property(\n    margin,\n    $start,\n    $end,\n    $replace: (icon: $icon-padding, label: $label-padding)\n  );\n}\n\n@mixin extended-label-padding($label-padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding-left, $label-padding, $gss: (noflip: true));\n    @include theme.property(\n      padding-right,\n      $label-padding,\n      $gss: (noflip: true)\n    );\n  }\n}\n\n@mixin extended-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  // Extended FABs _do_ need a $component-height since they are not circular.\n  // Percentage radii must be resolved.\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $extended-height,\n    $query: $query\n  );\n\n  #{fab-theme.$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $extended-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin _label-color($color-or-map) {\n  &:not(:disabled) {\n    @include _set-label-color(state.get-default-state($color-or-map));\n\n    &:hover {\n      @include _set-label-color(state.get-hover-state($color-or-map));\n    }\n\n    &:focus {\n      @include _set-label-color(state.get-focus-state($color-or-map));\n    }\n\n    &:active {\n      @include _set-label-color(state.get-pressed-state($color-or-map));\n    }\n  }\n\n  &:disabled {\n    @include _set-label-color(state.get-disabled-state($color-or-map));\n  }\n}\n\n@mixin _set-label-color($color) {\n  .mdc-fab__label {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _label-typography($typography-map) {\n  @include theme.property(font-family, map.get($typography-map, font));\n  @include theme.property(font-size, map.get($typography-map, size));\n  @include theme.property(font-weight, map.get($typography-map, weight));\n  @include theme.property(letter-spacing, map.get($typography-map, tracking));\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    // stylelint-disable-next-line selector-max-type\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    // stylelint-disable-next-line selector-max-type\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    // stylelint-disable-next-line selector-max-type\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use './icon-button-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define icon-button\n  .mdc-icon-button {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      position: relative;\n      box-sizing: border-box;\n      border: none;\n      outline: none;\n      background-color: transparent;\n      fill: currentColor;\n      color: inherit;\n      text-decoration: none;\n      cursor: pointer;\n      user-select: none;\n      overflow: visible; // Added to fix IE11 touch target tests.\n    }\n\n    .mdc-icon-button__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n\n    @include if-disabled_ {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: default;\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-icon-button--display-flex {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      justify-content: center;\n    }\n  }\n\n  .mdc-icon-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n    }\n\n    // stylelint-disable-next-line plugin/selector-bem-pattern\n    &.mdc-icon-button__icon--on {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n\n  .mdc-icon-button--touch {\n    @include touch-target-mixins.margin(\n      $component-height: icon-button-theme.$size,\n      $query: $query\n    );\n  }\n\n  .mdc-icon-button--on {\n    .mdc-icon-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n\n      // stylelint-disable-next-line plugin/selector-bem-pattern\n      &.mdc-icon-button__icon--on {\n        @include feature-targeting.targets($feat-structure) {\n          display: inline-block;\n        }\n      }\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-icon-button {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: icon-button-theme.$icon-size;\n    }\n\n    @include icon-button-theme.density(0, $query: $query);\n\n    @include icon-button-theme.disabled-ink-color(\n      text-disabled-on-light,\n      $query: $query\n    );\n\n    svg,\n    img {\n      @include feature-targeting.targets($feat-structure) {\n        width: icon-button-theme.$icon-size;\n        height: icon-button-theme.$icon-size;\n      }\n    }\n  }\n\n  @include static-styles($query: $query);\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-icon-button {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n    @include ripple-theme.states(\n      $query: $query,\n      $ripple-target: icon-button-theme.$ripple-target\n    );\n\n    .mdc-icon-button__ripple {\n      $feat-structure: feature-targeting.create-target($query, structure);\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n        z-index: 1;\n      }\n    }\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:math';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define image-list\n  .mdc-image-list {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-wrap: wrap;\n      // Margin and padding are set to override default user agent styles for lists, and also to center the Image List\n      margin: 0 auto;\n      padding: 0;\n    }\n  }\n\n  .mdc-image-list__item,\n  .mdc-image-list__image-aspect-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Supports absolute positioning of protected supporting content for item, and image for image-aspect-container\n      position: relative;\n      box-sizing: border-box;\n    }\n  }\n\n  .mdc-image-list__item {\n    @include feature-targeting.targets($feat-structure) {\n      list-style-type: none;\n    }\n  }\n\n  .mdc-image-list__image {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n\n  // Descendant selector allows image-aspect-container to be optional in DOM structure\n  .mdc-image-list__image-aspect-container .mdc-image-list__image {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      height: 100%;\n      // Background styles to support div instead of img\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n    }\n  }\n\n  @include aspect(1, $query: $query);\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  .mdc-image-list__supporting {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      box-sizing: border-box;\n      padding: 8px 0;\n      line-height: variables.$icon-size;\n    }\n  }\n\n  .mdc-image-list__label {\n    @include typography.typography(subtitle1, $query: $query);\n    @include typography.overflow-ellipsis($query: $query);\n  }\n\n  // Modifier for labels/icons with text protection, overlaying images.\n\n  .mdc-image-list--with-text-protection .mdc-image-list__supporting {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      height: variables.$text-protection-height;\n      padding: 0 variables.$text-protection-horizontal-padding;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      background: variables.$text-protection-background-color;\n      color: #fff;\n    }\n  }\n\n  // Masonry Image List, using CSS columns (i.e. renders down then across)\n\n  .mdc-image-list--masonry {\n    @include feature-targeting.targets($feat-structure) {\n      display: block; // Override flex\n    }\n\n    .mdc-image-list__item {\n      @include feature-targeting.targets($feat-structure) {\n        break-inside: avoid-column;\n      }\n    }\n\n    .mdc-image-list__image {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        height: auto;\n      }\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin aspect($width-height-ratio, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-image-list__image-aspect-container {\n    @include feature-targeting.targets($feat-structure) {\n      padding-bottom: calc(100% / #{$width-height-ratio});\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  .mdc-image-list__image {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n\n  $selector: if(\n    &,\n    '&.mdc-image-list--with-text-protection',\n    '.mdc-image-list--with-text-protection'\n  );\n\n  #{$selector} .mdc-image-list__supporting {\n    $masked-radius: shape-functions.mask-radius($radius, 0 0 1 1);\n\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $query: $query\n    );\n  }\n}\n\n// Standard Image List\n\n@mixin standard-columns(\n  $column-count,\n  $gutter-size: variables.$standard-gutter-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This uses margin rather than padding to facilitate properly positioning the supporting content element when\n  // --with-text-protection is used.\n  .mdc-image-list__item {\n    @include feature-targeting.targets($feat-structure) {\n      // Subtract extra fraction from each item's width to ensure correct wrapping in IE/Edge which round differently\n      width: calc(\n        100% / #{$column-count} - #{$gutter-size + math.div(1, $column-count)}\n      );\n      margin: math.div($gutter-size, 2);\n    }\n  }\n}\n\n// Masonry Image List\n\n@mixin masonry-columns(\n  $column-count,\n  $gutter-size: variables.$masonry-gutter-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    column-count: $column-count;\n    column-gap: $gutter-size;\n  }\n\n  .mdc-image-list__item {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: $gutter-size;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n$standard-gutter-size: 4px !default;\n$masonry-gutter-size: 16px !default;\n$icon-size: 24px !default;\n$text-protection-background-color: rgba(0, 0, 0, 0.6) !default;\n$text-protection-height: 48px !default;\n$text-protection-horizontal-padding: 16px !default;\n$shape-radius: 0 !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use './variables';\n@use './mixins';\n\n:root {\n  @each $size in map.keys(variables.$columns) {\n    --mdc-layout-grid-margin-#{$size}: #{map.get(\n        variables.$default-margin,\n        $size\n      )};\n    --mdc-layout-grid-gutter-#{$size}: #{map.get(\n        variables.$default-gutter,\n        $size\n      )};\n    --mdc-layout-grid-column-width-#{$size}: #{map.get(\n        variables.$column-width,\n        $size\n      )};\n  }\n}\n\n// postcss-bem-linter: define layout-grid\n.mdc-layout-grid {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n\n      @include mixins.layout-grid($size, $margin, variables.$max-width);\n    }\n  }\n}\n\n.mdc-layout-grid__inner {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.inner($size, $margin, $gutter);\n    }\n  }\n}\n\n.mdc-layout-grid__cell {\n  // select the upper breakpoint\n  $upper-breakpoint: list.nth(map.keys(variables.$columns), 1);\n\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.cell($size, variables.$default-column-span, $gutter);\n\n      @for $span from 1 through map.get(variables.$columns, $upper-breakpoint) {\n        // Span classes.\n        // stylelint-disable max-nesting-depth\n        @at-root .mdc-layout-grid__cell--span-#{$span},\n          .mdc-layout-grid__cell--span-#{$span}-#{$size} {\n          @include mixins.cell-span_($size, $span, $gutter);\n        }\n        // stylelint-enable max-nesting-depth\n      }\n    }\n  }\n\n  // Order override classes.\n  @for $i from 1 through map.get(variables.$columns, $upper-breakpoint) {\n    &--order-#{$i} {\n      @include mixins.cell-order($i);\n    }\n  }\n\n  // Alignment classes.\n  &--align-top {\n    @include mixins.cell-align(top);\n  }\n\n  &--align-middle {\n    @include mixins.cell-align(middle);\n  }\n\n  &--align-bottom {\n    @include mixins.cell-align(bottom);\n  }\n}\n\n.mdc-layout-grid--fixed-column-width {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n      $column-width: map.get(variables.$column-width, $size);\n\n      @include mixins.fixed-column-width(\n        $size,\n        $margin,\n        $gutter,\n        $column-width\n      );\n    }\n  }\n}\n\n.mdc-layout-grid--align-left {\n  margin-right: auto;\n  margin-left: 0;\n}\n\n.mdc-layout-grid--align-right {\n  margin-right: 0;\n  margin-left: auto;\n}\n// postcss-bem-linter: end\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use './variables';\n\n// returns the lower grid boundary or null if the smallest grid is selected\n@function breakpoint-min($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $min: map.get(variables.$breakpoints, $size);\n\n  @return if($min > 0, $min, null);\n}\n\n// returns the upper grid boundary or null if the largest grid is selected\n@function breakpoint-max($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $names: map.keys(variables.$columns);\n  $n: list.index($names, $size);\n  $prev: if($n > 1, list.nth($names, $n - 1), null);\n\n  @return if($prev, (breakpoint-min($prev) - 1px), null);\n}\n\n// Private mixins, meant for internal use.\n@mixin media-query_($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $min: breakpoint-min($size);\n  $max: breakpoint-max($size);\n\n  @if $min == null and $max != null {\n    // Phone\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max != null {\n    // Tablet\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    // Desktop\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    // Fallback - no breakpoints defined\n    @content;\n  }\n}\n\n@mixin cell-span_($size, $span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $percent: math.percentage(\n    math.div($span, map.get(variables.$columns, $size))\n  );\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span math.min($span, map.get(variables.$columns, $size));\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin layout-grid($size, $margin, $max-width: null) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: $margin;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  padding: var(--mdc-layout-grid-margin-#{$size}, #{$margin});\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n}\n\n@mixin inner($size, $margin, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: math.div(-$gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2 * -1);\n\n  @supports (display: grid) {\n    display: grid;\n    margin: 0;\n    grid-gap: $gutter;\n    // stylelint-disable-next-line declaration-block-no-duplicate-properties\n    grid-gap: var(--mdc-layout-grid-gutter-#{$size}, $gutter);\n    grid-template-columns: repeat(\n      map.get(variables.$columns, $size),\n      minmax(0, 1fr)\n    );\n  }\n}\n\n@mixin cell($size, $default-span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  @include cell-span_($size, $default-span, $gutter);\n\n  box-sizing: border-box;\n  margin: math.div($gutter, 2);\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2);\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n@mixin cell-order($order) {\n  order: $order;\n}\n\n@mixin cell-align($position) {\n  @if $position == 'top' {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == 'middle' {\n    align-self: center;\n  }\n\n  @if $position == 'bottom' {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == 'stretch' {\n    align-self: stretch;\n  }\n}\n\n@mixin fixed-column-width($size, $margin, $gutter, $column-width) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $columnCount: map.get(variables.$columns, $size);\n  $gutter-number: $columnCount - 1;\n  $margin-number: 2;\n\n  width: $column-width * $columnCount + $gutter * $gutter-number + $margin *\n    $margin-number;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(\n    var(--mdc-layout-grid-column-width-#{$size}, #{$column-width}) * #{$columnCount} +\n      var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) * #{$gutter-number} +\n      var(--mdc-layout-grid-margin-#{$size}, #{$margin}) * #{$margin-number}\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n\n@mixin primary-indeterminate-translate-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-translate {\n    0% {\n      transform: translateX(0);\n    }\n\n    20% {\n      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n      transform: translateX(0);\n    }\n\n    59.15% {\n      animation-timing-function: cubic-bezier(\n        0.302435,\n        0.381352,\n        0.55,\n        0.956352\n      );\n\n      $primary-half: custom-properties.create(\n        --mdc-linear-progress-primary-half,\n        83.67142%\n      );\n      @include apply-translate_($primary-half);\n    }\n\n    100% {\n      $primary-full: custom-properties.create(\n        --mdc-linear-progress-primary-full,\n        200.611057%\n      );\n      @include apply-translate_($primary-full);\n    }\n  }\n}\n\n@mixin primary-indeterminate-scale-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-scale {\n    0% {\n      transform: scaleX(0.08);\n    }\n\n    36.65% {\n      animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);\n      transform: scaleX(0.08);\n    }\n\n    69.15% {\n      animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);\n      transform: scaleX(0.661479);\n    }\n\n    100% {\n      transform: scaleX(0.08);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-translate-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-translate {\n    0% {\n      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n      transform: translateX(0);\n    }\n\n    25% {\n      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n      $secondary-quarter: custom-properties.create(\n        --mdc-linear-progress-secondary-quarter,\n        37.651913%\n      );\n      @include apply-translate_($secondary-quarter);\n    }\n\n    48.35% {\n      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n      $secondary-half: custom-properties.create(\n        --mdc-linear-progress-secondary-half,\n        84.386165%\n      );\n      @include apply-translate_($secondary-half);\n    }\n\n    100% {\n      $secondary-full: custom-properties.create(\n        --mdc-linear-progress-secondary-full,\n        160.277782%\n      );\n      @include apply-translate_($secondary-full);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-scale-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-scale {\n    0% {\n      animation-timing-function: cubic-bezier(\n        0.205028,\n        0.057051,\n        0.57661,\n        0.453971\n      );\n      transform: scaleX(0.08);\n    }\n\n    19.15% {\n      animation-timing-function: cubic-bezier(\n        0.152313,\n        0.196432,\n        0.648374,\n        1.004315\n      );\n      transform: scaleX(0.457104);\n    }\n\n    44.15% {\n      animation-timing-function: cubic-bezier(\n        0.257759,\n        -0.003163,\n        0.211762,\n        1.38179\n      );\n      transform: scaleX(0.72796);\n    }\n\n    100% {\n      transform: scaleX(0.08);\n    }\n  }\n}\n\n@mixin buffering-keyframes_ {\n  @keyframes mdc-linear-progress-buffering {\n    from {\n      // Normally the buffer dots start from the left and overflow to the right.\n      // We rotate by 180deg so that the buffer dots start on the right when\n      // in non-reversed mode and overflow to the left.\n      transform: rotate(180deg) translateX(-10px);\n    }\n  }\n}\n\n@mixin primary-indeterminate-translate-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-primary-indeterminate-translate-reverse {\n    0% {\n      transform: translateX(0);\n    }\n\n    20% {\n      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n      transform: translateX(0);\n    }\n\n    59.15% {\n      animation-timing-function: cubic-bezier(\n        0.302435,\n        0.381352,\n        0.55,\n        0.956352\n      );\n      $primary-half: custom-properties.create(\n        --mdc-linear-progress-primary-half-neg,\n        -83.67142%\n      );\n      @include apply-translate_($primary-half);\n    }\n\n    100% {\n      $primary-full: custom-properties.create(\n        --mdc-linear-progress-primary-full-neg,\n        -200.611057%\n      );\n      @include apply-translate_($primary-full);\n    }\n  }\n}\n\n@mixin secondary-indeterminate-translate-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse {\n    0% {\n      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);\n      transform: translateX(0);\n    }\n\n    25% {\n      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);\n      $secondary-quarter: custom-properties.create(\n        --mdc-linear-progress-secondary-quarter-neg,\n        -37.651913%\n      );\n      @include apply-translate_($secondary-quarter);\n    }\n\n    48.35% {\n      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);\n      $secondary-half: custom-properties.create(\n        --mdc-linear-progress-secondary-half-neg,\n        -84.386165%\n      );\n      @include apply-translate_($secondary-half);\n    }\n\n    100% {\n      $secondary-full: custom-properties.create(\n        --mdc-linear-progress-secondary-full-neg,\n        -160.277782%\n      );\n      @include apply-translate_($secondary-full);\n    }\n  }\n}\n\n@mixin buffering-reverse-keyframes_ {\n  @keyframes mdc-linear-progress-buffering-reverse {\n    from {\n      transform: translateX(-10px);\n    }\n  }\n}\n\n@mixin apply-translate_($value) {\n  @include theme.property(\n    transform,\n    translateX(value),\n    $replace: (value: $value)\n  );\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable no-unknown-animations --\n// Animations keyframes are included in `keyframes.scss`.\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:string';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './variables';\n@use './keyframes';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @include keyframes.primary-indeterminate-translate-keyframes_;\n    @include keyframes.primary-indeterminate-scale-keyframes_;\n    @include keyframes.secondary-indeterminate-translate-keyframes_;\n    @include keyframes.secondary-indeterminate-scale-keyframes_;\n    @include keyframes.buffering-keyframes_;\n    @include keyframes.primary-indeterminate-translate-reverse-keyframes_;\n    @include keyframes.secondary-indeterminate-translate-reverse-keyframes_;\n    @include keyframes.buffering-reverse-keyframes_;\n  }\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      width: 100%;\n      height: variables.$height;\n      transform: translateZ(0);\n      // Create a border around the bar in Windows High Contrast Mode.\n      outline: 1px solid transparent;\n      overflow: hidden;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-temporary(opacity, 250ms);\n    }\n\n    &__bar {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        animation: none;\n        transform-origin: top left;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-temporary(transform, 250ms);\n      }\n    }\n\n    &__bar-inner {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: absolute;\n        width: 100%;\n        animation: none;\n        // border-top is used rather than background-color to ensure that the\n        // bar is visible in Windows High Contrast Mode.\n        border-top: variables.$height solid;\n      }\n    }\n\n    &__buffer {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n      }\n    }\n\n    &__buffer-dots {\n      @include feature-targeting.targets($feat-structure) {\n        background-repeat: repeat-x;\n        background-size: 10px variables.$height;\n        flex: auto;\n        transform: rotate(180deg);\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-linear-progress-buffering 250ms infinite linear;\n      }\n    }\n\n    &__buffer-bar {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 1 100%;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-temporary(flex-basis, 250ms);\n      }\n    }\n\n    &__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scaleX(0);\n      }\n    }\n\n    &__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include indeterminate_($query: $query);\n\n    @include rtl.rtl() {\n      // The rtl() mixin does not account for nested `dir` attributes. Set\n      // `dir` attribute on root to take highest priority.\n      &:not([dir='ltr']) {\n        @include _rtl-styles($query: $query);\n      }\n    }\n\n    &--closed {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    &--closed-animation-off {\n      .mdc-linear-progress__buffer-dots {\n        @include feature-targeting.targets($feat-animation) {\n          animation: none;\n        }\n      }\n\n      &.mdc-linear-progress--indeterminate {\n        .mdc-linear-progress__bar,\n        .mdc-linear-progress__bar .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: none;\n          }\n        }\n      }\n    }\n  }\n\n  @at-root {\n    @include bar-color(primary, $query: $query);\n    @include buffer-color(variables.$baseline-buffer-color, $query: $query);\n  }\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $color-value-for-css: theme-color.prop-value($color);\n  $color-value-for-svg: str-replace_(\n    string.unquote('#{$color-value-for-css}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n      // stylelint-disable-next-line function-url-quotes\n      background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='#{$color-value-for-svg}'/%3E%3C/svg%3E\");\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      background-color: $color-value-for-css;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin indeterminate_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  &--indeterminate {\n    .mdc-linear-progress__bar {\n      @include feature-targeting.targets($feat-structure) {\n        transition: none;\n      }\n    }\n\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        left: -145.166611%;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        left: -54.888891%;\n        display: block;\n      }\n    }\n\n    &.mdc-linear-progress--animation-ready {\n      .mdc-linear-progress__primary-bar {\n        @include feature-targeting.targets($feat-animation) {\n          animation: mdc-linear-progress-primary-indeterminate-translate 2s\n            infinite linear;\n        }\n\n        > .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: mdc-linear-progress-primary-indeterminate-scale 2s\n              infinite linear;\n          }\n        }\n      }\n\n      .mdc-linear-progress__secondary-bar {\n        @include feature-targeting.targets($feat-animation) {\n          animation: mdc-linear-progress-secondary-indeterminate-translate 2s\n            infinite linear;\n        }\n\n        > .mdc-linear-progress__bar-inner {\n          @include feature-targeting.targets($feat-animation) {\n            animation: mdc-linear-progress-secondary-indeterminate-scale 2s\n              infinite linear;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin _rtl-styles($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-linear-progress__bar {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      right: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: center right;\n      @include rtl.ignore-next-line();\n      transform-origin: center right;\n    }\n  }\n\n  &.mdc-linear-progress--animation-ready {\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-animation) {\n        animation-name: mdc-linear-progress-primary-indeterminate-translate-reverse;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-animation) {\n        animation-name: mdc-linear-progress-secondary-indeterminate-translate-reverse;\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-linear-progress-buffering-reverse 250ms infinite linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      transform: rotate(0);\n    }\n  }\n\n  &.mdc-linear-progress--indeterminate {\n    .mdc-linear-progress__primary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        right: -145.166611%;\n        @include rtl.ignore-next-line();\n        left: auto;\n      }\n    }\n\n    .mdc-linear-progress__secondary-bar {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        right: -54.888891%;\n        @include rtl.ignore-next-line();\n        left: auto;\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n\n$deprecated-ripple-target: '.mdc-deprecated-list-item__ripple';\n$deprecated-temporary-ripple-target: '.mdc-list-item__ripple';\n\n$deprecated-divider-color-on-light-bg: rgba(0, 0, 0, 0.12) !default;\n$deprecated-divider-color-on-dark-bg: rgba(255, 255, 255, 0.2) !default;\n$deprecated-side-padding: 16px !default;\n$deprecated-trailing-padding: 16px !default;\n$deprecated-text-offset: 72px !default;\n$deprecated-text-disabled-opacity: theme-color.text-emphasis(disabled) !default;\n$deprecated-text-disabled-color: on-surface !default;\n$deprecated-text-selected-color: primary !default;\n\n$deprecated-single-line-height: 48px !default;\n$deprecated-single-line-minimum-height: 24px !default;\n$deprecated-single-line-maximum-height: $deprecated-single-line-height !default;\n$deprecated-single-line-density-scale: density-variables.$default-scale !default;\n$deprecated-single-line-density-config: (\n  height: (\n    default: $deprecated-single-line-height,\n    maximum: $deprecated-single-line-maximum-height,\n    minimum: $deprecated-single-line-minimum-height,\n  ),\n) !default;\n\n$deprecated-item-primary-text-baseline-height: 28px !default;\n$deprecated-item-primary-text-baseline-height-with-graphic: 32px !default;\n$deprecated-item-secondary-text-baseline-height: 20px !default;\n$deprecated-dense-item-primary-text-baseline-height: 24px !default;\n\n$deprecated-two-line-height: 64px !default;\n$deprecated-two-line-graphic-height: 72px !default;\n$deprecated-two-line-icon-top-margin: 16px !default;\n\n// TODO(b/156624966): this is used to support legacy usage of embedded graphics.\n$deprecated-deprecated-graphic-config: (\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-textual-variant-config: (\n  single-line-height: $deprecated-single-line-height,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 16px,\n) !default;\n\n$deprecated-icon-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 24px,\n    height: 24px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-avatar-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-thumbnail-variant-config: (\n  single-line-height: 56px,\n  graphic-size: (\n    width: 40px,\n    height: 40px,\n  ),\n  leading-padding: 16px,\n  text-offset: 72px,\n) !default;\n\n$deprecated-image-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 56px,\n    height: 56px,\n  ),\n  leading-padding: 16px,\n  text-offset: 88px,\n) !default;\n\n$deprecated-video-variant-config: (\n  single-line-height: 72px,\n  graphic-size: (\n    width: 100px,\n    height: 56px,\n  ),\n  leading-padding: 0px,\n  text-offset: 116px,\n) !default;\n","@use '@material/theme/theme-color';\n@use '@material/density/variables' as density-variables;\n\n$ripple-target: '.mdc-list-item__ripple';\n$divider-color-on-light-bg: rgba(0, 0, 0, 0.12) !default;\n$divider-color-on-dark-bg: rgba(255, 255, 255, 0.2) !default;\n$content-disabled-opacity: theme-color.text-emphasis(disabled) !default;\n$content-disabled-color: on-surface !default;\n$content-selected-color: primary !default;\n$side-padding: 16px !default;\n\n$one-line-item-density-scale: density-variables.$default-scale !default;\n$two-line-item-density-scale: density-variables.$default-scale !default;\n$three-line-item-density-scale: density-variables.$default-scale !default;\n$one-line-item-density-config: (\n  height: (\n    default: 48px,\n    maximum: 48px,\n    minimum: 24px,\n  ),\n) !default;\n$one-line-item-tall-density-config: (\n  height: (\n    default: 56px,\n    maximum: 56px,\n    minimum: 40px,\n  ),\n) !default;\n$one-line-item-taller-density-config: (\n  height: (\n    default: 72px,\n    maximum: 72px,\n    minimum: 56px,\n  ),\n) !default;\n$two-line-item-density-config: (\n  height: (\n    default: 64px,\n    maximum: 64px,\n    minimum: 48px,\n  ),\n) !default;\n$two-line-item-tall-density-config: (\n  height: (\n    default: 72px,\n    maximum: 72px,\n    minimum: 56px,\n  ),\n) !default;\n$three-line-item-density-config: (\n  height: (\n    default: 88px,\n    maximum: 88px,\n    minimum: 56px,\n  ),\n) !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/variables' as list-variables;\n@use '@material/ripple/ripple';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use './menu-custom-properties';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation-mixins.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // Customize the menu-surface and contained list to match the mdc-menu styles.\n  .mdc-menu {\n    @include list-mixins.deprecated-item-meta-ink-color(\n      variables.$ink-color,\n      $query\n    );\n    @include list-mixins.deprecated-item-graphic-ink-color(\n      variables.$ink-color,\n      $query\n    );\n    @include min-width(variables.$min-width, $query: $query);\n    // Include mdc-deprecated-list selector to ensure list-inside-menu overrides default list styles\n    .mdc-deprecated-list {\n      @include list-mixins.deprecated-item-primary-text-ink-color(\n        variables.$ink-color,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list,\n    .mdc-list {\n      @include elevation-mixins.overlay-surface-position($query: $query);\n      @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    }\n\n    .mdc-deprecated-list-divider {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 8px 0;\n      }\n    }\n\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        user-select: none;\n      }\n    }\n\n    .mdc-deprecated-list-item--disabled {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    //stylelint-disable selector-no-qualifying-type\n    a.mdc-deprecated-list-item .mdc-deprecated-list-item__text,\n    a.mdc-deprecated-list-item .mdc-deprecated-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n    // stylelint-enable selector-no-qualifying-type\n  }\n\n  // postcss-bem-linter: define menu\n  .mdc-menu__selection-group {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      fill: currentColor;\n    }\n\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          56px,\n          list-variables.$deprecated-side-padding\n        );\n      }\n    }\n\n    // Extra specificity required to override `display` property on `mdc-deprecated-list-item__graphic`.\n    .mdc-menu__selection-group-icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-position(left, 16px);\n\n        display: none;\n        position: absolute;\n        // IE11 requires the icon to be vertically centered due to its absolute positioning\n        top: 50%;\n        transform: translateY(-50%);\n      }\n    }\n  }\n  // postcss-bem-linter: end\n\n  // stylelint-disable-next-line plugin/selector-bem-pattern\n  .mdc-menu-item--selected .mdc-menu__selection-group-icon {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline;\n    }\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @if math.is-unitless($width) {\n      width: $width * variables.$width-base;\n    } @else {\n      width: $width;\n    }\n  }\n}\n\n/// Sets the min-width of the menu.\n/// @param {Number} $min-width - the desired min-width.\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $min-width-custom-property: custom-properties.create(\n      menu-custom-properties.$min-width,\n      $min-width\n    );\n    @include theme.property(min-width, $min-width-custom-property);\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$fade-in-duration: 0.03s !default;\n$fade-out-duration: 0.075s !default;\n$scale-duration: 0.12s !default;\n$min-distance-from-edge: 32px !default;\n$z-index: 8 !default; // One above mdc-dialog\n$shape-radius: medium !default;\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use '@material/animation/animation';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/touch-target/variables' as touch-target-variables;\n@use './radio-theme';\n\n$ripple-target: radio-theme.$ripple-target;\n\n///\n/// Radio core styles.\n///\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-radio {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      position: relative;\n      flex: 0 0 auto;\n      box-sizing: content-box;\n      width: radio-theme.$icon-size;\n      height: radio-theme.$icon-size;\n      cursor: pointer;\n      /* @alternate */\n      will-change: opacity, transform, border-color, color;\n    }\n\n    // Container for radio circles and ripple.\n    &__background {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        box-sizing: border-box;\n        width: radio-theme.$icon-size;\n        height: radio-theme.$icon-size;\n      }\n\n      &::before {\n        @include feature-targeting.targets($feat-structure) {\n          position: absolute;\n          transform: scale(0, 0);\n          border-radius: 50%;\n          opacity: 0;\n          pointer-events: none;\n          content: '';\n        }\n\n        @include feature-targeting.targets($feat-animation) {\n          transition: exit(opacity), exit(transform);\n        }\n      }\n    }\n\n    &__outer-circle {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        top: 0;\n        left: 0;\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        border-width: 2px;\n        border-style: solid;\n        border-radius: 50%;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: exit(border-color);\n      }\n    }\n\n    &__inner-circle {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        top: 0;\n        left: 0;\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        transform: scale(0, 0);\n        border-width: 10px;\n        border-style: solid;\n        border-radius: 50%;\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: exit(transform), exit(border-color);\n      }\n    }\n\n    &__native-control {\n      @include feature-targeting.targets($feat-structure) {\n        position: absolute;\n        margin: 0;\n        padding: 0;\n        opacity: 0;\n        cursor: inherit;\n        z-index: 1;\n      }\n    }\n\n    &--touch {\n      @include touch-target-mixins.margin(\n        $component-height: radio-theme.$ripple-size,\n        $component-width: radio-theme.$ripple-size,\n        $query: $query\n      );\n      @include radio-theme.touch-target(\n        $size: touch-target-variables.$height,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-radio__native-control:checked,\n  .mdc-radio__native-control:disabled {\n    + .mdc-radio__background {\n      @include feature-targeting.targets($feat-animation) {\n        transition: enter(opacity), enter(transform);\n      }\n\n      .mdc-radio__outer-circle {\n        @include feature-targeting.targets($feat-animation) {\n          transition: enter(border-color);\n        }\n      }\n\n      .mdc-radio__inner-circle {\n        @include feature-targeting.targets($feat-animation) {\n          transition: enter(transform), enter(border-color);\n        }\n      }\n    }\n  }\n\n  .mdc-radio--disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-radio__native-control:checked {\n    + .mdc-radio__background {\n      .mdc-radio__inner-circle {\n        @include feature-targeting.targets($feat-structure) {\n          transform: scale(0.5);\n        }\n\n        @include feature-targeting.targets($feat-animation) {\n          transition: enter(transform), enter(border-color);\n        }\n      }\n    }\n  }\n\n  .mdc-radio__native-control:disabled,\n  [aria-disabled='true'] .mdc-radio__native-control {\n    + .mdc-radio__background {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: default;\n      }\n    }\n  }\n\n  .mdc-radio__native-control:focus {\n    + .mdc-radio__background::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n        opacity: map.get(ripple-theme.$dark-ink-opacities, focus);\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: enter(opacity), enter(transform);\n      }\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// radio styles. It is recommended that most users use `mdc-radio-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  // postcss-bem-linter: define radio\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-radio {\n    @include radio-theme.unchecked-stroke-color(\n      radio-theme.$unchecked-color,\n      $query: $query\n    );\n    @include radio-theme.checked-stroke-color(\n      radio-theme.$baseline-theme-color,\n      $query: $query\n    );\n    @include radio-theme.ink-color(\n      radio-theme.$baseline-theme-color,\n      $query: $query\n    );\n    @include radio-theme.disabled-unchecked-stroke-color(\n      radio-theme.$disabled-circle-color,\n      $query: $query\n    );\n    @include radio-theme.disabled-checked-stroke-color(\n      radio-theme.$disabled-circle-color,\n      $query: $query\n    );\n    @include radio-theme.disabled-ink-color(\n      radio-theme.$disabled-circle-color,\n      $query: $query\n    );\n    @include radio-theme.focus-indicator-color(\n      radio-theme.$baseline-theme-color,\n      $query: $query\n    );\n    @include radio-theme.density(radio-theme.$density-scale, $query: $query);\n\n    @include dom.forced-colors-mode {\n      @include radio-theme.disabled-unchecked-stroke-color(\n        GrayText,\n        $query: $query\n      );\n      @include radio-theme.disabled-checked-stroke-color(\n        GrayText,\n        $query: $query\n      );\n      @include radio-theme.disabled-ink-color(GrayText, $query: $query);\n    }\n  }\n\n  @include static-styles($query: $query);\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// radio styles. It is recommended that most users use `mdc-radio-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-radio {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      $color: radio-theme.$baseline-theme-color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n\n    &.mdc-ripple-upgraded,\n    &.mdc-ripple-upgraded--background-focused {\n      .mdc-radio__background::before {\n        @include feature-targeting.targets($feat-structure) {\n          content: none;\n        }\n      }\n    }\n  }\n\n  #{$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@function enter($name) {\n  @return animation.enter($name, radio-theme.$transition-duration);\n}\n\n@function exit($name) {\n  @return animation.exit-temporary($name, radio-theme.$transition-duration);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n@use '@material/ripple/ripple-theme';\n\n$ripple-size: 40px !default;\n$icon-size: 20px !default;\n$transition-duration: 120ms !default;\n$ripple-opacity: 0.14 !default;\n$baseline-theme-color: secondary !default;\n$unchecked-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-circle-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-radio__ripple';\n$unselected-ripple-target: '.mdc-radio__native-control:enabled:not(:checked) ~ #{$ripple-target}';\n$custom-property-prefix: 'radio';\n\n// TODO(b/188417756): `icon-size` token key is not supported.\n$light-theme: (\n  disabled-selected-icon-color: theme-color.$on-surface,\n  disabled-selected-icon-opacity: 0.38,\n  disabled-unselected-icon-color: theme-color.$on-surface,\n  disabled-unselected-icon-opacity: 0.38,\n  selected-focus-icon-color: theme-color.$primary,\n  selected-focus-state-layer-color: theme-color.$primary,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: theme-color.$primary,\n  selected-hover-state-layer-color: theme-color.$primary,\n  selected-hover-state-layer-opacity: 0.04,\n  selected-icon-color: theme-color.$primary,\n  selected-pressed-icon-color: theme-color.$primary,\n  selected-pressed-state-layer-color: theme-color.$primary,\n  selected-pressed-state-layer-opacity: 0.1,\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: theme-color.$on-surface,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity: 0.12,\n  unselected-hover-icon-color: theme-color.$on-surface,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity: 0.04,\n  unselected-icon-color: theme-color.$on-surface,\n  unselected-pressed-icon-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity: 0.1,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include _disabled-selected-icon-color(\n    map.get($theme, disabled-selected-icon-color)\n  );\n  @include _disabled-selected-icon-opacity(\n    map.get($theme, disabled-selected-icon-opacity)\n  );\n  @include _disabled-unselected-icon-color(\n    map.get($theme, disabled-unselected-icon-color)\n  );\n  @include _disabled-unselected-icon-opacity(\n    map.get($theme, disabled-unselected-icon-opacity)\n  );\n\n  // selected\n  @include ripple-theme.focus() {\n    @include _selected-icon-color(map.get($theme, selected-focus-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-focus-state-layer-color)\n    );\n    @include _selected-focus-state-layer-opacity(\n      map.get($theme, selected-focus-state-layer-opacity)\n    );\n  }\n  @include ripple-theme.hover() {\n    @include _selected-icon-color(map.get($theme, selected-hover-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-hover-state-layer-color)\n    );\n    @include _selected-hover-state-layer-opacity(\n      map.get($theme, selected-hover-state-layer-opacity)\n    );\n  }\n  @include _selected-icon-color(map.get($theme, selected-icon-color));\n  @include ripple-theme.active() {\n    @include _selected-icon-color(map.get($theme, selected-pressed-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-pressed-state-layer-color)\n    );\n    @include _selected-pressed-state-layer-opacity(\n      map.get($theme, selected-pressed-state-layer-opacity)\n    );\n  }\n\n  // unselected\n  @include ripple-theme.focus() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-focus-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-focus-state-layer-color)\n    );\n    @include _unselected-focus-state-layer-opacity(\n      map.get($theme, unselected-focus-state-layer-opacity)\n    );\n  }\n  @include ripple-theme.hover() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-hover-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-hover-state-layer-color)\n    );\n    @include _unselected-hover-state-layer-opacity(\n      map.get($theme, unselected-hover-state-layer-opacity)\n    );\n  }\n  @include _unselected-icon-color(map.get($theme, unselected-icon-color));\n  @include ripple-theme.active() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-pressed-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-pressed-state-layer-color)\n    );\n    @include _unselected-pressed-state-layer-opacity(\n      map.get($theme, unselected-pressed-state-layer-opacity)\n    );\n  }\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target size same as ripple size.\n  @include touch-target(\n    $size: map.get($theme, state-layer-size),\n    $ripple-size: map.get($theme, state-layer-size)\n  );\n}\n\n@mixin _disabled-selected-icon-color($color) {\n  @include disabled-checked-stroke-color($color);\n  @include disabled-ink-color($color);\n}\n\n@mixin _disabled-selected-icon-opacity($opacity) {\n  @include _disabled-checked-stroke-opacity($opacity);\n  @include _disabled-ink-opacity($opacity);\n}\n\n@mixin _disabled-unselected-icon-color($color) {\n  @include disabled-unchecked-stroke-color($color);\n}\n\n@mixin _disabled-unselected-icon-opacity($opacity) {\n  @include _disabled-unchecked-stroke-opacity($opacity);\n}\n\n@mixin _selected-icon-color($color) {\n  @include checked-stroke-color($color);\n  @include ink-color($color);\n}\n\n@mixin _selected-state-layer-color($color) {\n  @include ripple-theme.states-base-color(\n    $color: $color,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-hover-state-layer-opacity($opacity) {\n  @include ripple-theme.states-hover-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-focus-state-layer-opacity($opacity) {\n  @include ripple-theme.states-focus-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-pressed-state-layer-opacity($opacity) {\n  @include ripple-theme.states-press-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _unselected-icon-color($color) {\n  @include unchecked-stroke-color($color);\n}\n\n@mixin _unselected-state-layer-color($color) {\n  @include ripple-theme.states-base-color(\n    $color: $color,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-hover-state-layer-opacity($opacity) {\n  @include ripple-theme.states-hover-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-focus-state-layer-opacity($opacity) {\n  @include ripple-theme.states-focus-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-pressed-state-layer-opacity($opacity) {\n  @include ripple-theme.states-press-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n///\n/// Sets the stroke color of an unchecked, enabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin unchecked-stroke-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled-unchecked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the stroke color of a checked, enabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin checked-stroke-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled-checked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of an enabled radio button.\n/// @param {Color} $color - The desired ink color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the stroke color of an unchecked, disabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin disabled-unchecked-stroke-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  @include _if-disabled-unchecked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-unchecked-stroke-opacity($opacity) {\n  @include _if-disabled-unchecked {\n    @include _stroke-opacity($opacity);\n  }\n}\n\n///\n/// Sets the stroke color of a checked, disabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin disabled-checked-stroke-color($color, $query: feature-targeting.all()) {\n  @include if-disabled-checked_ {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-checked-stroke-opacity($opacity) {\n  @include if-disabled-checked_ {\n    @include _stroke-opacity($opacity);\n  }\n}\n\n///\n/// Sets the ink color of a disabled radio button.\n/// @param {Color} $color - The desired ink color\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _ink-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-ink-opacity($opacity) {\n  @include if-disabled_ {\n    @include _ink-opacity($opacity);\n  }\n}\n\n@mixin focus-indicator-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background::before {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets radio touch target size which can be more than the ripple size. Param `$ripple-size` is required for custom\n/// ripple size.\n///\n/// @param {Number} $size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`. Required only for custom ripple size.\n///\n@mixin touch-target(\n  $size: $ripple-size,\n  $ripple-size: $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $offset: 'calc((__ripple_size - __size) / 2)';\n  $replace: (\n    __ripple_size: $ripple-size,\n    __size: $size,\n  );\n\n  .mdc-radio__native-control {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('top', $offset, $replace: $replace);\n      @include theme.property('right', $offset, $replace: $replace);\n      @include theme.property('left', $offset, $replace: $replace);\n      @include theme.property('width', $size);\n      @include theme.property('height', $size);\n    }\n  }\n}\n\n///\n/// Sets density scale for radio.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include ripple-size($size, $query: $query);\n  // Sets touch target size same as ripple size.\n  @include touch-target($size: $size, $ripple-size: $size, $query: $query);\n\n  @if $density-scale != 0 {\n    @include touch-target-reset_($query: $query);\n  }\n}\n\n///\n/// Sets radio ripple size.\n///\n/// @param {Number} $size - Ripple size in `px`.\n///\n@mixin ripple-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $replace: (\n    __size: $size,\n    __icon_size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: 'calc((__size - __icon_size) / 2)';\n\n    @include theme.property('padding', $padding, $replace: $replace);\n  }\n\n  .mdc-radio__background::before {\n    @include feature-targeting.targets($feat-structure) {\n      $padding-offset: 'calc(-1 * (__size - __icon_size) / 2)';\n\n      @include theme.property('top', $padding-offset, $replace: $replace);\n      @include theme.property('left', $padding-offset, $replace: $replace);\n      @include theme.property('width', $size);\n      @include theme.property('height', $size);\n    }\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin touch-target-reset_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled state.\n/// @access private\n///\n@mixin _if-enabled {\n  .mdc-radio__native-control:enabled + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled & unchecked state.\n/// @access private\n///\n@mixin _if-enabled-unchecked {\n  .mdc-radio__native-control:enabled:not(:checked) + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled & checked state.\n/// @access private\n///\n@mixin _if-enabled-checked {\n  .mdc-radio__native-control:enabled:checked + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    + {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled & unchecked state.\n/// @access private\n///\n@mixin _if-disabled-unchecked {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    &:not(:checked) + {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled & checked state.\n/// @access private\n///\n@mixin if-disabled-checked_ {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    &:checked + {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the ink color for radio. This is wrapped in a mixin\n/// that qualifies state such as `_if-enabled`\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background .mdc-radio__inner-circle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin _ink-opacity($opacity) {\n  .mdc-radio__background .mdc-radio__inner-circle {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the stroke color for radio. This is wrapped in a mixin\n/// that qualifies state such as `_if-enabled`\n/// @access private\n///\n@mixin _stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background .mdc-radio__outer-circle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin _stroke-opacity($opacity) {\n  .mdc-radio__background .mdc-radio__outer-circle {\n    @include theme.property(opacity, $opacity);\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-ripple-surface {\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{math.div($radius, 2)});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{math.div($radius, 2)});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Core: Define complete styles to render component, including base and theme styles\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use './segmented-button-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-segmented-button {\n    $feat-structure: feature-targeting.create-target($query, structure);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      // Removes spacing between segments\n      font-size: 0;\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './elevation-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $z-value from 0 through 24 {\n    .mdc-elevation--z#{$z-value} {\n      @include elevation-theme.elevation($z-value, $query: $query);\n    }\n  }\n\n  .mdc-elevation-transition {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-theme.transition-value();\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      will-change: elevation-theme.$property;\n    }\n  }\n}\n\n///\n/// Called once per application to set up the global default elevation styles.\n///\n@mixin overlay-common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include base-mixins.emit-once('mdc-elevation/common/structure') {\n        position: absolute;\n        border-radius: inherit;\n        pointer-events: none;\n\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-elevation-overlay-opacity, 0)\n        );\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      @include base-mixins.emit-once('mdc-elevation/common/animation') {\n        transition: elevation-theme.overlay-transition-value();\n      }\n    }\n\n    @include base-mixins.emit-once('mdc-elevation/common/color') {\n      $fill-color: custom-properties.create(\n        --mdc-elevation-overlay-color,\n        elevation-theme.$overlay-color\n      );\n      @include elevation-theme.overlay-fill-color($fill-color, $query: $query);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Theme: Variables, functions, and mixins required to theme component segment\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n\n$on-surface: theme-color.$on-surface;\n$surface: theme-color.$surface;\n$primary: theme-color.$primary;\n\n$unselected-ink-color: rgba($on-surface, 0.6);\n$outline-color: rgba($on-surface, 0.12);\n$unselected-container-fill-color: rgba($surface, 1);\n$selected-ink-color: rgba($primary, 1);\n$selected-container-fill-color: rgba($primary, 0.08);\n\n$height: 36px;\n$min-width: 48px;\n$horizontal-padding: 12px;\n$border-width: 1px;\n$border-radius: 4px;\n$icon-width: 24px;\n$icon-font-size: 18px;\n$label-padding: 6px;\n$touch-target-height: 48px;\n\n/// Sets the border color of the segment\n/// @param {String} $color - Color of segment outline\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $property: custom-properties.create(\n    --mdc-segmented-button-outline-color,\n    $color\n  );\n\n  .mdc-segmented-button__segment {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('border-color', $property);\n    }\n  }\n}\n\n/// Sets the text and icon color within the segment when it is not selected\n/// @param {String} $color - Color of text and icon in segment\n@mixin unselected-ink-color($color, $query: feature-targeting.all()) {\n  .mdc-segmented-button__segment {\n    $property: custom-properties.create(\n      --mdc-segmented-button-unselected-ink-color,\n      $color\n    );\n    @include _ink-color($property, $query);\n  }\n}\n\n/// Sets the background fill color of the segment when it is not selected\n/// @param {String} $color - Color of segment background\n@mixin unselected-container-fill-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  .mdc-segmented-button__segment {\n    $property: custom-properties.create(\n      --mdc-segmented-button-unselected-container-fill-color,\n      $color\n    );\n    @include _container-fill-color($property, $query);\n  }\n}\n\n/// Sets the text and icon color within the segment when it is selected\n/// @param {String} $color - Color of text and icon in segment\n@mixin selected-ink-color($color, $query: feature-targeting.all()) {\n  .mdc-segmented-button__segment--selected {\n    $property: custom-properties.create(\n      --mdc-segmented-button-selected-ink-color,\n      $color\n    );\n    @include _ink-color($property, $query);\n  }\n}\n\n/// Sets the background fill color of the segment when it is not selected\n/// @param {String} $color - Color of segment background\n@mixin selected-container-fill-color($color, $query: feature-targeting.all()) {\n  .mdc-segmented-button__segment--selected {\n    $property: custom-properties.create(\n      --mdc-segmented-button-selected-container-fill-color,\n      $color\n    );\n    @include _container-fill-color($property, $query);\n  }\n}\n\n/// Sets the text and icon color\n/// @param {Map} $property - Custom property of text and icon color\n@mixin _ink-color($property, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('color', $property);\n  }\n}\n\n/// Sets the background fill color\n/// @param {Map} $property - Custom property of background color\n@mixin _container-fill-color($property, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $property);\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Core: Define complete styles to render component segment, including base and theme styles\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/touch-target/touch-target';\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use './segment-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query);\n  @include elevation.overlay-common($query);\n\n  @include _unselected($query);\n  @include _selected($query);\n\n  .mdc-segmented-button__segment {\n    @include base($query);\n\n    &:hover {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: pointer;\n      }\n    }\n\n    // Removes ripple's focus outline\n    &:focus {\n      @include feature-targeting.targets($feat-structure) {\n        outline-width: 0;\n      }\n    }\n\n    &:first-child {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: segment-theme.$border-radius 0 0\n          segment-theme.$border-radius;\n      }\n    }\n\n    &:last-child {\n      @include feature-targeting.targets($feat-structure) {\n        border-right-width: segment-theme.$border-width;\n        border-radius: 0 segment-theme.$border-radius\n          segment-theme.$border-radius 0;\n      }\n    }\n\n    .mdc-segmented-button__segment__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n\n    .mdc-segmented-button__segment--touch {\n      @include touch-target.margin(\n        $component-height: segment-theme.$touch-target-height,\n        $query: $query\n      );\n    }\n  }\n\n  // maintains visual design when inside a touch-target-wrapper\n  // This could also be accomplished with --first/--last classes\n  .mdc-touch-target-wrapper {\n    .mdc-segmented-button__segment {\n      border-radius: 0;\n      border-right-width: 0;\n    }\n\n    &:first-child .mdc-segmented-button__segment {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: segment-theme.$border-radius 0 0\n          segment-theme.$border-radius;\n      }\n    }\n\n    &:last-child .mdc-segmented-button__segment {\n      @include feature-targeting.targets($feat-structure) {\n        border-right-width: segment-theme.$border-width;\n        border-radius: 0 segment-theme.$border-radius\n          segment-theme.$border-radius 0;\n      }\n    }\n  }\n\n  .mdc-segmented-button__icon {\n    @include icon($query);\n  }\n\n  .mdc-segmented-button__icon + .mdc-segmented-button__label {\n    @include label($query);\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // elevation mixins contain ripple effect to segment boundaries\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n  @include typography.typography(button, $query);\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    vertical-align: top;\n    align-items: center;\n    height: segment-theme.$height;\n    min-width: segment-theme.$min-width;\n    padding: 0 segment-theme.$horizontal-padding;\n    border-width: segment-theme.$border-width 0 segment-theme.$border-width\n      segment-theme.$border-width;\n  }\n}\n\n@mixin _unselected($query: feature-targeting.all()) {\n  @include segment-theme.outline-color(segment-theme.$outline-color, $query);\n  @include segment-theme.unselected-ink-color(\n    segment-theme.$unselected-ink-color,\n    $query\n  );\n  @include segment-theme.unselected-container-fill-color(\n    segment-theme.$unselected-container-fill-color,\n    $query\n  );\n}\n\n@mixin _selected($query: feature-targeting.all()) {\n  @include segment-theme.selected-ink-color(\n    segment-theme.$selected-ink-color,\n    $query\n  );\n  @include segment-theme.selected-container-fill-color(\n    segment-theme.$selected-container-fill-color,\n    $query\n  );\n}\n\n@mixin icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: segment-theme.$icon-width;\n  }\n  @include feature-targeting.targets($feat-typography) {\n    font-size: segment-theme.$icon-font-size;\n  }\n}\n\n@mixin label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-left: segment-theme.$label-padding;\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use './segment-theme';\n\n$ripple-target: '.mdc-segmented-button__ripple';\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-segmented-button__segment {\n    @include ripple.surface($query: $query, $ripple-target: $ripple-target);\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include ripple-theme.states(\n      segment-theme.$selected-ink-color,\n      true,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n    @include feature-targeting.targets($feat-structure) {\n      overflow: hidden;\n    }\n\n    #{$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-ripple-surface {\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{math.div($radius, 2)});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{math.div($radius, 2)});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-ripple-surface {\n    @include ripple-theme.states($query: $query);\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{math.div($radius, 2)});\n      @include rtl.ignore-next-line();\n      left: calc(50% - #{math.div($radius, 2)});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{math.div($radius, 2)}));\n        @include rtl.ignore-next-line();\n        left: var(--mdc-ripple-left, calc(50% - #{math.div($radius, 2)}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/animation/animation';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './slider-theme';\n\n// Thumb variables.\n$_thumb-ripple-size: 48px;\n$_thumb-size: 20px;\n$_value-indicator-caret-width: 6px;\n\n// Track variables.\n$_track-active-height: 6px;\n$_track-inactive-height: 4px;\n\n/// Core styles for slider component.\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query: $query);\n  @include without-ripple($query: $query);\n}\n\n// This API is intended for use by frameworks that may want to separate the\n// ripple-related styles from the other slider styles.\n// It is recommended that most users use `core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-slider {\n    @include _track($query: $query);\n    @include _thumb($query: $query);\n    @include _tick-marks($query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n      height: $_thumb-ripple-size;\n      margin: 0 math.div($_thumb-ripple-size, 2);\n      position: relative;\n      touch-action: pan-y;\n    }\n\n    &.mdc-slider--disabled {\n      @include _disabled($query: $query);\n    }\n\n    &--discrete {\n      .mdc-slider__thumb,\n      .mdc-slider__track--active_fill {\n        @include feature-targeting.targets($feat-animation) {\n          transition: transform 80ms ease;\n        }\n      }\n\n      @media (prefers-reduced-motion) {\n        .mdc-slider__thumb,\n        .mdc-slider__track--active_fill {\n          @include feature-targeting.targets($feat-animation) {\n            transition: none;\n          }\n        }\n      }\n    }\n  }\n\n  .mdc-slider__input {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n      left: 0;\n      margin: 0;\n      height: 100%;\n      opacity: 0;\n      pointer-events: none;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the\n// ripple-related styles from the other slider styles.\n// It is recommended that most users use `core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-slider__thumb {\n    @include ripple.surface($query: $query);\n    @include ripple.radius-unbounded($query: $query);\n    @include ripple-theme.states($color: slider-theme.$color, $query: $query);\n  }\n}\n\n@mixin _track($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-slider__track {\n    @include feature-targeting.targets($feat-structure) {\n      height: $_track-inactive-height;\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 100%;\n    }\n  }\n\n  .mdc-slider__track--active,\n  .mdc-slider__track--inactive {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      height: 100%;\n      position: absolute;\n      width: 100%;\n    }\n  }\n\n  .mdc-slider__track--active {\n    @include feature-targeting.targets($feat-structure) {\n      // Set border-radius on the outer `track--active` element, and apply\n      // transform: scale(...) to the inner `track--active_fill` element,\n      // such that the track grows/shrinks as needed, but the border-radius\n      // is not affected by the scaling.\n      border-radius: 3px;\n      height: $_track-active-height;\n      overflow: hidden;\n      top: math.div($_track-inactive-height - $_track-active-height, 2);\n    }\n  }\n\n  .mdc-slider__track--active_fill {\n    @include feature-targeting.targets($feat-structure) {\n      // Use border rather than background-color to fill track, for HCM.\n      border-top: $_track-active-height solid;\n      box-sizing: border-box;\n      height: 100%;\n      width: 100%;\n      position: relative;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left;\n      @include rtl.ignore-next-line();\n      transform-origin: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right;\n        @include rtl.ignore-next-line();\n        transform-origin: right;\n      }\n    }\n  }\n\n  .mdc-slider__track--inactive {\n    &::before {\n      @include dom-mixins.transparent-border($query: $query); // For HCM.\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: 2px;\n      height: $_track-inactive-height;\n      left: 0;\n      top: 0;\n    }\n  }\n\n  @include slider-theme.track-active-color(\n    $color-or-map: (\n      default: slider-theme.$color,\n      disabled: slider-theme.$disabled-color,\n    ),\n    $query: $query\n  );\n  @include slider-theme.track-inactive-color(\n    $color-or-map: (\n      default: slider-theme.$color,\n      disabled: slider-theme.$disabled-color,\n    ),\n    $query: $query\n  );\n}\n\n@mixin _thumb($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _value-indicator($query: $query);\n\n  .mdc-slider__thumb {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      height: $_thumb-ripple-size;\n      @include rtl.ignore-next-line();\n      left: math.div(-$_thumb-ripple-size, 2);\n      outline: none;\n      position: absolute;\n      user-select: none;\n      width: $_thumb-ripple-size;\n    }\n\n    &--top {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 1;\n      }\n    }\n\n    &--top .mdc-slider__thumb-knob,\n    &--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,\n    &--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob {\n      @include feature-targeting.targets($feat-structure) {\n        border-style: solid;\n        border-width: 1px;\n        box-sizing: content-box;\n      }\n    }\n  }\n\n  .mdc-slider__thumb-knob {\n    @include elevation-mixins.elevation($z-value: 1, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Use border rather than background-color to fill thumb, for HCM.\n      border: math.div($_thumb-size, 2) solid;\n      border-radius: 50%;\n      box-sizing: border-box;\n      height: $_thumb-size;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      width: $_thumb-size;\n    }\n  }\n\n  @include slider-theme.thumb-color(\n    $color-or-map: (\n      default: slider-theme.$color,\n      disabled: slider-theme.$disabled-color,\n    ),\n    $query: $query\n  );\n  @include slider-theme.thumb-ripple-color(\n    $color: slider-theme.$color,\n    $query: $query\n  );\n}\n\n@mixin _tick-marks($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__tick-marks {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      box-sizing: border-box;\n      display: flex;\n      height: 100%;\n      justify-content: space-between;\n      padding: 0 1px;\n      position: absolute;\n      width: 100%;\n    }\n  }\n\n  .mdc-slider__tick-mark--active,\n  .mdc-slider__tick-mark--inactive {\n    @include feature-targeting.targets($feat-structure) {\n      border-radius: 50%;\n      height: 2px;\n      width: 2px;\n    }\n  }\n\n  @include slider-theme.tick-mark-active-color(\n    $color-or-map: (\n      default: slider-theme.$tick-mark-active-color,\n      disabled: on-primary,\n    ),\n    $query: $query\n  );\n  @include slider-theme.tick-mark-inactive-color(\n    $color-or-map: (\n      default: slider-theme.$tick-mark-inactive-color,\n      disabled: slider-theme.$disabled-color,\n    ),\n    $query: $query\n  );\n}\n\n@mixin _value-indicator($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-slider__value-indicator-container {\n    @include feature-targeting.targets($feat-structure) {\n      bottom: math.div($_thumb-ripple-size, 2) + math.div($_thumb-size, 2) +\n        $_value-indicator-caret-width + 4px;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      pointer-events: none;\n      position: absolute;\n      transform: translateX(-50%);\n    }\n  }\n\n  .mdc-slider__value-indicator {\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation.exit-permanent(transform, 100ms);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      border-radius: 4px;\n      display: flex;\n      height: 32px;\n      padding: 0 12px;\n      transform: scale(0);\n      transform-origin: bottom;\n    }\n\n    // Caret: https://css-tricks.com/snippets/css/css-triangle/\n    &::before {\n      @include feature-targeting.targets($feat-structure) {\n        border-left: $_value-indicator-caret-width solid transparent;\n        border-right: $_value-indicator-caret-width solid transparent;\n        border-top: $_value-indicator-caret-width solid;\n        bottom: -$_value-indicator-caret-width + 1;\n        content: '';\n        height: 0;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        position: absolute;\n        transform: translateX(-50%);\n        width: 0;\n      }\n    }\n\n    &::after {\n      @include dom-mixins.transparent-border($query: $query); // For HCM.\n    }\n  }\n\n  .mdc-slider__thumb--with-indicator {\n    .mdc-slider__value-indicator-container {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: auto;\n      }\n    }\n\n    .mdc-slider__value-indicator {\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation.enter(transform, 100ms);\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n      }\n    }\n  }\n\n  @media (prefers-reduced-motion) {\n    .mdc-slider__value-indicator,\n    .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator {\n      @include feature-targeting.targets($feat-animation) {\n        transition: none;\n      }\n    }\n  }\n\n  .mdc-slider__value-indicator-text {\n    @include typography.typography(subtitle2, $query);\n  }\n\n  @include slider-theme.value-indicator-color(\n    $color: slider-theme.$value-indicator-color,\n    $opacity: slider-theme.$value-indicator-opacity,\n    $query: $query\n  );\n  @include slider-theme.value-indicator-text-color(\n    $color: slider-theme.$value-indicator-text-color,\n    $query: $query\n  );\n}\n\n// Styles for slider in disabled state.\n@mixin _disabled($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-color) {\n    opacity: 0.38;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    cursor: auto;\n  }\n\n  .mdc-slider__thumb {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n\n/// Default color for slider (track, thumb, ripple).\n$color: primary;\n$disabled-color: on-surface;\n\n// Thumb variables.\n$value-indicator-color: #000;\n$value-indicator-opacity: 0.6;\n$value-indicator-text-color: on-primary;\n\n// Track variables.\n$track-inactive-opacity: 0.24;\n$tick-mark-active-color: on-primary;\n$tick-mark-inactive-color: primary;\n$tick-mark-opacity: 0.6;\n\n/// Customizes active track color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `disabled`.\n///\n/// @example\n///   @include track-active-color(blue);\n///   @include track-active-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n@mixin track-active-color($color-or-map, $query: feature-targeting.all()) {\n  @include _set-track-active-color(\n    state.get-default-state($color-or-map),\n    $query\n  );\n\n  $_disabled-color: state.get-disabled-state($color-or-map);\n  @if $_disabled-color {\n    &.mdc-slider--disabled {\n      @include _set-track-active-color($_disabled-color, $query);\n    }\n  }\n}\n\n@mixin _set-track-active-color($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__track--active_fill {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n/// Customizes inactive track color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `disabled`.\n///\n/// @example\n///   @include track-inactive-color(blue);\n///   @include track-inactive-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n@mixin track-inactive-color(\n  $color-or-map,\n  $opacity: $track-inactive-opacity,\n  $query: feature-targeting.all()\n) {\n  @include _set-track-inactive-color(\n    state.get-default-state($color-or-map),\n    $opacity,\n    $query\n  );\n\n  $_disabled-color: state.get-disabled-state($color-or-map);\n  @if $_disabled-color {\n    &.mdc-slider--disabled {\n      @include _set-track-inactive-color($_disabled-color, $opacity, $query);\n    }\n  }\n}\n\n@mixin _set-track-inactive-color($color, $opacity, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__track--inactive {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      opacity: $opacity;\n    }\n  }\n}\n\n/// Customizes thumb color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `disabled`.\n///\n/// @example\n///   @include thumb-color(blue);\n///   @include thumb-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n@mixin thumb-color($color-or-map, $query: feature-targeting.all()) {\n  @include _set-thumb-color(state.get-default-state($color-or-map), $query);\n\n  $_disabled-color: state.get-disabled-state($color-or-map);\n  @if $_disabled-color {\n    &.mdc-slider--disabled {\n      @include _set-thumb-color($_disabled-color, $query);\n    }\n  }\n}\n\n@mixin _set-thumb-color($color, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-slider__thumb-knob {\n      @include theme.property(background-color, $color);\n      @include theme.property(border-color, $color);\n    }\n\n    .mdc-slider__thumb--top {\n      .mdc-slider__thumb-knob,\n      &.mdc-slider__thumb:hover .mdc-slider__thumb-knob,\n      &.mdc-slider__thumb--focused .mdc-slider__thumb-knob {\n        border-color: #fff;\n      }\n    }\n  }\n}\n\n///\n/// Customizes thumb ripple color.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-variables.property-values`.\n///\n@mixin thumb-ripple-color($color, $query: feature-targeting.all()) {\n  .mdc-slider__thumb {\n    @include ripple-theme.states($color: $color, $query: $query);\n  }\n}\n\n/// Customizes thumb color when thumb is activated (hover, focused, or pressed\n/// state).\n///\n/// @param {Color} $color - The thumb's color\n@mixin thumb-activated-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__thumb:hover,\n  .mdc-slider__thumb--focused {\n    @include _set-thumb-color($color, $query);\n  }\n}\n\n/// Customizes color of active tick marks, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `disabled`.\n///\n/// @example\n///   @include tick-mark-active-color(blue);\n///   @include tick-mark-active-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n@mixin tick-mark-active-color(\n  $color-or-map,\n  $opacity: $tick-mark-opacity,\n  $query: feature-targeting.all()\n) {\n  @include _set-tick-mark-active-color(\n    state.get-default-state($color-or-map),\n    $opacity,\n    $query\n  );\n\n  $_disabled-color: state.get-disabled-state($color-or-map);\n  @if $_disabled-color {\n    &.mdc-slider--disabled {\n      @include _set-tick-mark-active-color($_disabled-color, $opacity, $query);\n    }\n  }\n}\n\n@mixin _set-tick-mark-active-color($color, $opacity, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__tick-mark--active {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      opacity: $opacity;\n    }\n  }\n}\n\n/// Customizes color of inactive tick marks, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `disabled`.\n///\n/// @example\n///   @include tick-mark-inactive-color(blue);\n///   @include tick-mark-inactive-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n@mixin tick-mark-inactive-color(\n  $color-or-map,\n  $opacity: $tick-mark-opacity,\n  $query: feature-targeting.all()\n) {\n  @include _set-tick-mark-inactive-color(\n    state.get-default-state($color-or-map),\n    $opacity,\n    $query\n  );\n\n  $_disabled-color: state.get-disabled-state($color-or-map);\n  @if $_disabled-color {\n    &.mdc-slider--disabled {\n      @include _set-tick-mark-inactive-color(\n        $_disabled-color,\n        $opacity,\n        $query\n      );\n    }\n  }\n}\n\n@mixin _set-tick-mark-inactive-color($color, $opacity, $query) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__tick-mark--inactive {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      opacity: $opacity;\n    }\n  }\n}\n\n///\n/// Customizes color and opacity of the value indicator.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-variables.property-values`.\n/// @param {number} $opacity\n///\n@mixin value-indicator-color(\n  $color,\n  $opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__value-indicator {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      opacity: $opacity;\n    }\n  }\n\n  // Caret.\n  .mdc-slider__value-indicator::before {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-top-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes color of the value indicator text.\n/// @param {Color | String} $color Either a valid color value or a key from\n///     `$theme-variables.property-values`.\n///\n@mixin value-indicator-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-slider__value-indicator {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as animation-functions;\n@use '@material/button/button-theme';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/typography/typography';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define snackbar\n  .mdc-snackbar {\n    @include z-index(variables.$z-index, $query: $query);\n    @include viewport-margin(variables.$viewport-margin-narrow, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n\n      // Ignore mouse events on the root layout element.\n      pointer-events: none;\n\n      // For some reason, iOS Safari displays a tap highlight on the entire snackbar element.\n      // Mobile Safari only supports `rgba` values for this property; named values like\n      // `transparent` are ignored. From Apple's docs:\n      // > This property obeys the alpha value, if specified.\n      // > If you don’t specify an alpha value, Safari on iOS applies a default alpha value to the color.\n      // > To disable tap highlighting, set the alpha value to 0 (invisible).\n      // > If you set the alpha value to 1.0 (opaque), the element is not visible when tapped.\n      // See https://github.com/ben-eb/postcss-colormin/issues/1\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n  }\n\n  @include fill-color(variables.$fill-color, $query: $query);\n  @include label-ink-color(variables.$label-ink-color, $query: $query);\n  @include min-width(variables.$min-width, $query: $query);\n  @include max-width(variables.$max-width, $query: $query);\n  @include elevation(variables.$elevation, $query: $query);\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  .mdc-snackbar--opening,\n  .mdc-snackbar--open,\n  .mdc-snackbar--closing {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n    }\n  }\n\n  .mdc-snackbar--open .mdc-snackbar__label,\n  .mdc-snackbar--open .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      visibility: visible;\n    }\n  }\n\n  .mdc-snackbar--leading {\n    @include position-leading($query: $query);\n  }\n\n  .mdc-snackbar--stacked {\n    @include layout-stacked($query: $query);\n  }\n\n  .mdc-snackbar__surface {\n    // 1px border around the snackbar surface for high contrast mode.\n    &::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 0, variables.$padding);\n\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      box-sizing: border-box;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n\n    .mdc-snackbar--open & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n        opacity: 1;\n        pointer-events: auto; // Allow mouse events on surface element while snackbar is open\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.enter(\n            opacity,\n            variables.$enter-duration\n          ),\n          animation-functions.enter(transform, variables.$enter-duration);\n      }\n    }\n\n    .mdc-snackbar--closing & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n      }\n\n      @include feature-targeting.targets($feat-animation) {\n        transition: animation-functions.exit-permanent(\n          opacity,\n          variables.$exit-duration\n        );\n      }\n    }\n  }\n\n  .mdc-snackbar__label {\n    @include typography.typography(variables.$label-type-scale, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 16px, variables.$padding);\n\n      width: 100%;\n      flex-grow: 1;\n      box-sizing: border-box;\n      margin: 0;\n      visibility: hidden;\n\n      // 14px top/bottom padding needed to make the height 48px.\n      padding-top: 14px;\n      padding-bottom: 14px;\n    }\n  }\n\n  // Used to prevent visual jank when announcing label text to screen readers.\n  // See the `announce()` function in util.js for details.\n  .mdc-snackbar__label::before {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline;\n      content: attr(data-mdc-snackbar-label-text);\n    }\n  }\n\n  .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-shrink: 0;\n      align-items: center;\n      box-sizing: border-box;\n      visibility: hidden;\n    }\n  }\n\n  .mdc-snackbar__action {\n    @include button-theme.ink-color(\n      variables.$action-ink-color,\n      $query: $query\n    );\n    @include ripple-theme.states(variables.$action-ink-color, $query: $query);\n  }\n\n  .mdc-snackbar__dismiss {\n    @include icon-button-theme.ink-color(\n      variables.$dismiss-ink-color,\n      $query: $query\n    );\n  }\n\n  // Two selectors are needed to increase specificity above `.material-icons`.\n  // stylelint-disable-next-line selector-class-pattern\n  .mdc-snackbar__dismiss.mdc-snackbar__dismiss {\n    @include icon-button-theme.size(\n      variables.$dismiss-button-size,\n      $query: $query\n    );\n    @include feature-targeting.targets($feat-structure) {\n      font-size: variables.$dismiss-icon-size;\n    }\n  }\n\n  .mdc-snackbar__action + .mdc-snackbar__dismiss {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, variables.$padding, 0);\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin label-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-snackbar__label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  .mdc-snackbar__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n@mixin min-width(\n  $min-width,\n  $mobile-breakpoint: variables.$mobile-breakpoint,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: $min-width;\n\n      // The first media query ensures that snackbars are always 100% width on mobile devices, as required by the spec.\n      // The second media query prevents snackbars from being wider than the viewport for large min-width values.\n      @media (max-width: $mobile-breakpoint), (max-width: $min-width) {\n        min-width: 100%;\n      }\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n@mixin elevation($z-index, $query: feature-targeting.all()) {\n  .mdc-snackbar__surface {\n    @include elevation-mixins.elevation($z-index, $query: $query);\n  }\n}\n\n@mixin viewport-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $margin;\n  }\n}\n\n@mixin z-index($z-index, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $z-index;\n  }\n}\n\n@mixin position-leading($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n  }\n}\n\n@mixin layout-stacked($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-snackbar__label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, 16px, 8px);\n      padding-bottom: 12px;\n    }\n  }\n\n  .mdc-snackbar__surface {\n    @include feature-targeting.targets($feat-structure) {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  }\n\n  .mdc-snackbar__actions {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-end;\n      margin-bottom: variables.$padding;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:color';\n@use '@material/theme/theme-color';\n\n$fill-color: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  80%\n) !default;\n$label-ink-color: rgba(\n  theme-color.prop-value(surface),\n  theme-color.text-emphasis(high)\n) !default;\n$action-ink-color: #bb86fc !default;\n$dismiss-ink-color: rgba(\n  theme-color.prop-value(surface),\n  theme-color.text-emphasis(high)\n) !default;\n\n$label-type-scale: body2 !default;\n$dismiss-icon-size: 18px !default;\n$dismiss-button-size: 36px !default;\n$min-width: 344px !default;\n$max-width: 672px !default;\n$mobile-breakpoint: 480px !default;\n$viewport-margin-narrow: 8px !default;\n$viewport-margin-wide: 24px !default;\n$padding: 8px !default;\n\n$elevation: 6 !default;\n$shape-radius: small !default; // Key from shape.$category-keywords or CSS length value (e.g., 4px)\n$z-index: 8 !default; // One above mdc-dialog\n\n// These variables need to be kept in sync with the values in constants.js.\n$enter-duration: 150ms !default;\n$exit-duration: 75ms !default;\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/animation';\n@use '@material/elevation/elevation';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/theme/gss';\n\n$animation-duration: 75ms;\n$icon-exit-duration: 0.4 * $animation-duration;\n$icon-enter-duration: $animation-duration - $icon-exit-duration;\n$ripple-target: '.mdc-switch__ripple';\n\n@mixin static-styles() {\n  @include static-styles-without-ripple();\n\n  .mdc-switch {\n    @include ripple.common; // COPYBARA_COMMENT_THIS_LINE\n    @include ripple.surface($ripple-target: $ripple-target);\n    @include ripple.radius-unbounded($ripple-target: $ripple-target);\n  }\n}\n\n@mixin static-styles-without-ripple() {\n  @include elevation.overlay-common; // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-switch {\n    @include root;\n\n    &:disabled {\n      @include disabled;\n    }\n  }\n\n  .mdc-switch__track {\n    @include track;\n    @include track-off;\n\n    .mdc-switch--selected & {\n      @include track-on;\n    }\n  }\n\n  .mdc-switch__handle-track {\n    @include handle-track;\n    @include handle-track-off;\n\n    .mdc-switch--selected & {\n      @include handle-track-on;\n    }\n  }\n\n  .mdc-switch__handle {\n    @include handle;\n  }\n\n  .mdc-switch__shadow {\n    @include shadow;\n  }\n\n  .mdc-elevation-overlay {\n    @include overlay;\n  }\n\n  .mdc-switch__ripple {\n    @include ripple;\n\n    .mdc-switch:disabled & {\n      @include ripple-disabled;\n    }\n  }\n\n  .mdc-switch__icons {\n    @include icons;\n  }\n\n  .mdc-switch__icon {\n    @include icon;\n    @include icon-hidden;\n  }\n\n  .mdc-switch--selected .mdc-switch__icon--on,\n  .mdc-switch--unselected .mdc-switch__icon--off {\n    @include icon-visible;\n  }\n}\n\n@mixin root() {\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: inline-flex;\n  flex-shrink: 0; // Stop from collapsing in flex containers\n  margin: 0;\n  outline: none;\n  overflow: visible;\n  padding: 0;\n  position: relative;\n}\n\n@mixin disabled() {\n  cursor: default;\n  pointer-events: none;\n}\n\n@mixin track() {\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n\n  &::before,\n  &::after {\n    border: 1px solid transparent; // high contrast mode\n    border-radius: inherit;\n    box-sizing: border-box;\n    content: '';\n    height: 100%;\n    @include gss.annotate($noflip: true);\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }\n}\n\n@mixin track-on() {\n  &::before {\n    transition: animation.exit-temporary(transform, $animation-duration);\n    transform: translateX(100%);\n    @include rtl.rtl {\n      transform: translateX(-100%);\n    }\n  }\n\n  &::after {\n    transition: animation.enter(transform, $animation-duration);\n    transform: translateX(0);\n  }\n}\n\n@mixin track-off() {\n  &::before {\n    transition: animation.enter(transform, $animation-duration);\n    transform: translateX(0);\n  }\n\n  &::after {\n    transition: animation.exit-temporary(transform, $animation-duration);\n    transform: translateX(-100%);\n    @include rtl.rtl {\n      transform: translateX(100%);\n    }\n  }\n}\n\n@mixin handle-track() {\n  height: 100%;\n  // The handle track is used to move the handle across the width of the switch\n  // and may overflow the bounds of the component. It should not be used for\n  // pointer events.\n  pointer-events: none;\n  position: absolute;\n  top: 0; // Needed for IE11\n  transition: animation.standard(transform, $animation-duration);\n  // IE11 needs explicit left/right\n  @include rtl.reflexive(left, 0, right, auto);\n}\n\n@mixin handle-track-on() {\n  transform: translateX(100%);\n\n  @include rtl.rtl {\n    transform: translateX(-100%);\n  }\n}\n\n@mixin handle-track-off() {\n  transform: translateX(0);\n}\n\n@mixin handle() {\n  display: flex;\n  pointer-events: auto;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  // IE11 needs explicit left/right\n  @include rtl.reflexive(left, 0, right, auto);\n\n  &::before,\n  &::after {\n    border: 1px solid transparent; // high contrast mode\n    border-radius: inherit;\n    box-sizing: border-box;\n    content: '';\n    width: 100%;\n    height: 100%;\n    @include gss.annotate($noflip: true);\n    left: 0;\n    position: absolute;\n    top: 0; // IE11 fix\n    transition: animation.standard(background-color, $animation-duration),\n      animation.standard(border-color, $animation-duration);\n    // Move the handle background colors beneath the shadow overlay color,\n    // rather than move the overlay on top of the handle with a positive\n    // z-index, which would require moving all other content on top of the\n    // overlay with an even greater z-index.\n    z-index: -1;\n  }\n}\n\n@mixin shadow() {\n  border-radius: inherit;\n  bottom: 0;\n  @include gss.annotate($noflip: true);\n  left: 0;\n  position: absolute;\n  @include gss.annotate($noflip: true);\n  right: 0;\n  top: 0;\n}\n\n@mixin overlay() {\n  bottom: 0;\n  @include gss.annotate($noflip: true);\n  left: 0;\n  @include gss.annotate($noflip: true);\n  right: 0;\n  top: 0;\n}\n\n@mixin ripple() {\n  @include gss.annotate($noflip: true);\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  // Move ripple beneath shadow overlay and handle background colors (see\n  // handle() mixin for explanation).\n  z-index: -1;\n}\n\n@mixin ripple-disabled {\n  display: none;\n}\n\n@mixin icons() {\n  height: 100%;\n  position: relative;\n  width: 100%;\n  z-index: 1;\n}\n\n@mixin icon() {\n  bottom: 0;\n  @include gss.annotate($noflip: true);\n  left: 0;\n  // IE11 needs top/right/bottom/left + margin instead of translate(-50%, -50%)\n  // because of SVG centering issues\n  margin: auto;\n  position: absolute;\n  @include gss.annotate($noflip: true);\n  right: 0;\n  top: 0;\n}\n\n@mixin icon-hidden() {\n  opacity: 0;\n  transition: animation.exit-permanent(opacity, $icon-exit-duration);\n}\n\n@mixin icon-visible() {\n  opacity: 1;\n  transition: animation.enter(\n    opacity,\n    $icon-enter-duration,\n    $delay: $icon-exit-duration\n  );\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/dom/dom';\n@use './switch-theme';\n@use './switch';\n\n@include switch.static-styles();\n\n.mdc-switch {\n  @include switch-theme.theme-styles(switch-theme.$light-theme);\n}\n\n@include dom.forced-colors-mode {\n  .mdc-switch {\n    @include switch-theme.theme-styles(switch-theme.$forced-colors-theme);\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/density';\n@use '@material/dom/dom';\n@use '@material/elevation/elevation-theme';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-palette';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/tokens/resolvers';\n@use '@material/shape/shape';\n@use './switch';\n\n$_density-config: (\n  size: (\n    minimum: 28px,\n    default: 48px,\n    maximum: 48px,\n  ),\n);\n$_hairline: color-palette.$grey-300;\n$_inverse-primary: color.scale(\n  theme-color.prop-value(primary),\n  $lightness: 75%\n);\n\n$_on-surface: color-palette.$grey-800;\n$_on-surface-variant: color-palette.$grey-700;\n$_on-surface-state-content: color-palette.$grey-900;\n$_primary-state-content: color.scale(\n  theme-color.prop-value(primary),\n  $blackness: 50%\n);\n\n/// TODO: Change to private when MWC has better access\n/// @access private\n$selectors: (\n  disabled: ':disabled',\n  focus: ':focus',\n  hover: ':hover',\n  pressed: ':active',\n  selected: '.mdc-switch--selected',\n  unselected: '.mdc-switch--unselected',\n);\n\n$light-theme: (\n  disabled-handle-elevation: 0,\n  disabled-handle-opacity: 0.38,\n  disabled-selected-handle-color: $_on-surface,\n  disabled-selected-icon-color: on-primary,\n  disabled-selected-icon-opacity: 0.38,\n  disabled-selected-track-color: $_on-surface,\n  disabled-track-opacity: 0.12,\n  disabled-unselected-handle-color: $_on-surface,\n  disabled-unselected-icon-color: on-primary,\n  disabled-unselected-icon-opacity: 0.38,\n  disabled-unselected-track-color: $_on-surface,\n  handle-elevation: 1,\n  handle-height: 20px,\n  handle-shadow-color: elevation-theme.$baseline-color,\n  handle-shape: 10px,\n  handle-surface-color: surface,\n  handle-width: 20px,\n  selected-focus-handle-color: $_primary-state-content,\n  selected-focus-state-layer-color: primary,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-focus-track-color: $_inverse-primary,\n  selected-handle-color: primary,\n  selected-hover-handle-color: $_primary-state-content,\n  selected-hover-state-layer-color: primary,\n  selected-hover-state-layer-opacity: 0.04,\n  selected-hover-track-color: $_inverse-primary,\n  selected-icon-color: on-primary,\n  selected-icon-size: 18px,\n  selected-pressed-handle-color: $_primary-state-content,\n  selected-pressed-state-layer-color: primary,\n  selected-pressed-state-layer-opacity: 0.1,\n  selected-pressed-track-color: $_inverse-primary,\n  selected-track-color: $_inverse-primary,\n  state-layer-size: 48px,\n  track-height: 14px,\n  track-shape: 7px,\n  track-width: 36px,\n  unselected-focus-handle-color: $_on-surface-state-content,\n  unselected-focus-state-layer-color: $_on-surface,\n  unselected-focus-state-layer-opacity: 0.12,\n  unselected-focus-track-color: $_hairline,\n  unselected-handle-color: $_on-surface-variant,\n  unselected-hover-handle-color: $_on-surface-state-content,\n  unselected-hover-state-layer-color: $_on-surface,\n  unselected-hover-state-layer-opacity: 0.04,\n  unselected-hover-track-color: $_hairline,\n  unselected-icon-color: on-primary,\n  unselected-icon-size: 18px,\n  unselected-pressed-handle-color: $_on-surface-state-content,\n  unselected-pressed-state-layer-color: $_on-surface,\n  unselected-pressed-state-layer-opacity: 0.1,\n  unselected-pressed-track-color: $_hairline,\n  unselected-track-color: $_hairline,\n);\n\n$forced-colors-theme: (\n  disabled-handle-opacity: 1,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-track-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-icon-color: ButtonText,\n  unselected-icon-color: ButtonText,\n);\n\n@function density($density-scale) {\n  $size: density.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @return (state-layer-size: $size);\n}\n\n@mixin theme($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  // TODO(b/185172301): replace with improved feature targeting\n  // IE11 Fallback\n  @if shadow-dom.$css-selector-fallback-declarations {\n    @include custom-properties.configure($emit-custom-properties: false) {\n      @include dom.ie11-support {\n        @include theme-styles($theme, $resolvers: $resolvers);\n      }\n    }\n  }\n\n  $theme: _resolve-theme($theme, $resolvers);\n  @include keys.declare-custom-properties($theme, switch);\n}\n\n@function _resolve-theme($theme, $resolvers) {\n  @return map.merge(\n    $theme,\n    _resolve-theme-handle-elevation(\n      $theme,\n      map.get($resolvers, elevation),\n      disabled-handle-elevation,\n      handle-elevation\n    )\n  );\n}\n\n@function _resolve-theme-handle-elevation($theme, $resolver, $keys...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $key in $keys {\n    // Resolve the value for each state key.\n    $resolved-value: meta.call(\n      $resolver,\n      $elevation: map.get($theme, $key),\n      $shadow-color: map.get($theme, handle-shadow-color)\n    );\n\n    // Update the theme with the resolved value.\n    $theme: map.set($theme, $key, $resolved-value);\n  }\n\n  @return $theme;\n}\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties($theme, switch);\n\n  @include _selected-handle-color(\n    (\n      default: map.get($theme, selected-handle-color),\n      disabled: map.get($theme, disabled-selected-handle-color),\n      focus: map.get($theme, selected-focus-handle-color),\n      hover: map.get($theme, selected-hover-handle-color),\n      pressed: map.get($theme, selected-pressed-handle-color),\n    )\n  );\n\n  @include _unselected-handle-color(\n    (\n      default: map.get($theme, unselected-handle-color),\n      disabled: map.get($theme, disabled-unselected-handle-color),\n      focus: map.get($theme, unselected-focus-handle-color),\n      hover: map.get($theme, unselected-hover-handle-color),\n      pressed: map.get($theme, unselected-pressed-handle-color),\n    )\n  );\n\n  @include _handle-surface-color(map.get($theme, handle-surface-color));\n\n  @include _handle-elevation(\n    map.get($resolvers, elevation),\n    map.get($theme, handle-shadow-color),\n    (\n      default: map.get($theme, handle-elevation),\n      disabled: map.get($theme, disabled-handle-elevation),\n    )\n  );\n\n  @include _handle-height(map.get($theme, handle-height));\n  @include _handle-opacity(\n    (\n      disabled: map.get($theme, disabled-handle-opacity),\n    )\n  );\n\n  @include _handle-shape(map.get($theme, handle-shape));\n  @include _handle-width(map.get($theme, handle-width));\n\n  @include _selected-icon-color(\n    (\n      default: map.get($theme, selected-icon-color),\n      disabled: map.get($theme, disabled-selected-icon-color),\n    )\n  );\n\n  @include _unselected-icon-color(\n    (\n      default: map.get($theme, unselected-icon-color),\n      disabled: map.get($theme, disabled-unselected-icon-color),\n    )\n  );\n\n  @include _selected-icon-opacity(\n    (\n      disabled: map.get($theme, disabled-selected-icon-opacity),\n    )\n  );\n\n  @include _unselected-icon-opacity(\n    (\n      disabled: map.get($theme, disabled-unselected-icon-opacity),\n    )\n  );\n\n  @include _selected-icon-size(map.get($theme, selected-icon-size));\n  @include _unselected-icon-size(map.get($theme, unselected-icon-size));\n\n  @include _selected-ripple-color(\n    (\n      focus: map.get($theme, selected-focus-state-layer-color),\n      hover: map.get($theme, selected-hover-state-layer-color),\n      pressed: map.get($theme, selected-pressed-state-layer-color),\n    )\n  );\n\n  @include _unselected-ripple-color(\n    (\n      focus: map.get($theme, unselected-focus-state-layer-color),\n      hover: map.get($theme, unselected-hover-state-layer-color),\n      pressed: map.get($theme, unselected-pressed-state-layer-color),\n    )\n  );\n\n  @include _selected-ripple-opacity(\n    (\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      pressed: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include _unselected-ripple-opacity(\n    (\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      pressed: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include _state-layer-size(map.get($theme, state-layer-size));\n  @include _track-height(map.get($theme, track-height));\n  @include _track-opacity(\n    (\n      disabled: map.get($theme, disabled-track-opacity),\n    )\n  );\n\n  @include _track-selected-color(\n    (\n      default: map.get($theme, selected-track-color),\n      disabled: map.get($theme, disabled-selected-track-color),\n      focus: map.get($theme, selected-focus-track-color),\n      hover: map.get($theme, selected-hover-track-color),\n      pressed: map.get($theme, selected-pressed-track-color),\n    )\n  );\n\n  @include _track-unselected-color(\n    (\n      default: map.get($theme, unselected-track-color),\n      disabled: map.get($theme, disabled-unselected-track-color),\n      focus: map.get($theme, unselected-focus-track-color),\n      hover: map.get($theme, unselected-hover-track-color),\n      pressed: map.get($theme, unselected-pressed-track-color),\n    )\n  );\n\n  @include _track-shape(map.get($theme, track-shape));\n  @include _track-width(map.get($theme, track-width));\n}\n\n@mixin _handle-color($colors) {\n  @include state.default($selectors) {\n    @include _set-handle-color(state.get-default-state($colors));\n  }\n\n  @include state.hover($selectors) {\n    @include _set-handle-color(state.get-hover-state($colors));\n  }\n\n  @include state.focus($selectors) {\n    @include _set-handle-color(state.get-focus-state($colors));\n  }\n\n  @include state.pressed($selectors) {\n    @include _set-handle-color(state.get-pressed-state($colors));\n  }\n\n  @include state.disabled($selectors) {\n    @include _set-handle-color(state.get-disabled-state($colors));\n  }\n}\n\n@mixin _set-handle-color($color) {\n  .mdc-switch__handle {\n    &::after {\n      @include theme.property(background, $color);\n    }\n  }\n}\n\n@mixin _selected-handle-color($colors) {\n  @include state.selected($selectors) {\n    @include _handle-color($colors);\n  }\n}\n\n@mixin _unselected-handle-color($colors) {\n  @include state.unselected($selectors) {\n    @include _handle-color($colors);\n  }\n}\n\n@mixin _handle-surface-color($color) {\n  .mdc-switch__handle {\n    // Sets the surface color for the handle. This is used so that when an\n    // opacity is applied to the \"main\" handle color, it will not bleed through\n    // and appear transparent on top of the track.\n    &::before {\n      @include theme.property(background, $color);\n    }\n  }\n}\n\n@mixin _handle-elevation($resolver, $shadow-color, $elevations) {\n  @include state.default($selectors) {\n    @include _set-handle-elevation(\n      $resolver,\n      $elevation: state.get-default-state($elevations),\n      $shadow-color: $shadow-color\n    );\n  }\n\n  @include state.disabled($selectors) {\n    @include _set-handle-elevation(\n      $resolver,\n      $elevation: state.get-disabled-state($elevations),\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n@mixin _set-handle-elevation($resolver, $args...) {\n  .mdc-switch__shadow {\n    @include elevation-theme.with-resolver($resolver, $args...);\n  }\n}\n\n@mixin _handle-height($height) {\n  .mdc-switch__handle {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin _handle-opacity($opacities) {\n  @include state.disabled($selectors) {\n    @include _set-handle-opacity(state.get-disabled-state($opacities));\n  }\n}\n\n@mixin _set-handle-opacity($opacity) {\n  .mdc-switch__handle {\n    // Only apply to the ::after pseudo element, which is the handle's \"main\"\n    // color. The ::before pseudo element is the surface color, which prevents\n    // the handle from bleeding through on the track.\n    &::after {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin _handle-shape($shape) {\n  .mdc-switch__handle {\n    @include shape.radius($shape);\n  }\n}\n\n@mixin _handle-width($width) {\n  .mdc-switch__handle {\n    @include theme.property(width, $width);\n  }\n\n  .mdc-switch__handle-track {\n    @include theme.property(\n      width,\n      'calc(100% - width)',\n      $replace: (width: $width)\n    );\n  }\n}\n\n@mixin _icon-color($colors) {\n  @include state.default($selectors) {\n    @include _set-icon-color(state.get-default-state($colors));\n  }\n\n  @include state.disabled($selectors) {\n    @include _set-icon-color(state.get-disabled-state($colors));\n  }\n}\n\n@mixin _set-icon-color($color) {\n  .mdc-switch__icon {\n    @include theme.property(fill, $color);\n  }\n}\n\n@mixin _selected-icon-color($colors) {\n  @include state.selected($selectors) {\n    @include _icon-color($colors);\n  }\n}\n\n@mixin _unselected-icon-color($colors) {\n  @include state.unselected($selectors) {\n    @include _icon-color($colors);\n  }\n}\n\n@mixin _icon-opacity($opacities) {\n  @include state.disabled($selectors) {\n    @include _set-icon-opacity(state.get-disabled-state($opacities));\n  }\n}\n\n@mixin _set-icon-opacity($opacity) {\n  .mdc-switch__icons {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n@mixin _selected-icon-opacity($opacities) {\n  @include state.selected($selectors) {\n    @include _icon-opacity($opacities);\n  }\n}\n\n@mixin _unselected-icon-opacity($opacities) {\n  @include state.unselected($selectors) {\n    @include _icon-opacity($opacities);\n  }\n}\n\n@mixin _icon-size($size) {\n  .mdc-switch__icon {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n@mixin _selected-icon-size($size) {\n  @include state.selected($selectors) {\n    @include _icon-size($size);\n  }\n}\n\n@mixin _unselected-icon-size($size) {\n  @include state.unselected($selectors) {\n    @include _icon-size($size);\n  }\n}\n\n@mixin _ripple-color($colors) {\n  @include state.independent-elements(pressed) {\n    @include state.hover($selectors) {\n      @include ripple-theme.states-base-color(\n        state.get-hover-state($colors),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n\n    @include state.focus($selectors) {\n      @include ripple-theme.states-base-color(\n        state.get-focus-state($colors),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n\n    @include state.pressed($selectors) {\n      @include ripple-theme.states-base-color(\n        state.get-pressed-state($colors),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n  }\n}\n\n@mixin _selected-ripple-color($colors) {\n  @include state.selected($selectors) {\n    @include _ripple-color($colors);\n  }\n}\n\n@mixin _unselected-ripple-color($colors) {\n  @include state.unselected($selectors) {\n    @include _ripple-color($colors);\n  }\n}\n\n@mixin _ripple-opacity($opacities) {\n  @include state.independent-elements(pressed) {\n    @include state.hover($selectors) {\n      @include ripple-theme.states-hover-opacity(\n        state.get-hover-state($opacities),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n\n    @include state.focus($selectors) {\n      @include ripple-theme.states-focus-opacity(\n        state.get-focus-state($opacities),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n\n    @include state.pressed($selectors) {\n      @include ripple-theme.states-press-opacity(\n        state.get-pressed-state($opacities),\n        $ripple-target: switch.$ripple-target\n      );\n    }\n  }\n}\n\n@mixin _selected-ripple-opacity($opacities) {\n  @include state.selected($selectors) {\n    @include _ripple-opacity($opacities);\n  }\n}\n\n@mixin _unselected-ripple-opacity($opacities) {\n  @include state.unselected($selectors) {\n    @include _ripple-opacity($opacities);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  .mdc-switch__ripple {\n    @include theme.property(height, $size);\n    @include theme.property(width, $size);\n  }\n}\n\n@mixin _track-height($height) {\n  .mdc-switch__track {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin _track-opacity($opacities) {\n  @include state.disabled($selectors) {\n    @include _set-track-opacity(state.get-disabled-state($opacities));\n  }\n}\n\n@mixin _set-track-opacity($opacity) {\n  .mdc-switch__track {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n@mixin _track-selected-color($colors) {\n  @include state.default($selectors) {\n    @include _set-track-selected-color(state.get-default-state($colors));\n  }\n\n  @include state.hover($selectors) {\n    @include _set-track-selected-color(state.get-hover-state($colors));\n  }\n\n  @include state.focus($selectors) {\n    @include _set-track-selected-color(state.get-focus-state($colors));\n  }\n\n  @include state.pressed($selectors) {\n    @include _set-track-selected-color(state.get-pressed-state($colors));\n  }\n\n  @include state.disabled($selectors) {\n    @include _set-track-selected-color(state.get-disabled-state($colors));\n  }\n}\n\n@mixin _set-track-selected-color($color) {\n  .mdc-switch__track::after {\n    @include theme.property(background, $color);\n  }\n}\n\n@mixin _track-unselected-color($colors) {\n  @include state.default($selectors) {\n    @include _set-track-unselected-color(state.get-default-state($colors));\n  }\n\n  @include state.hover($selectors) {\n    @include _set-track-unselected-color(state.get-hover-state($colors));\n  }\n\n  @include state.focus($selectors) {\n    @include _set-track-unselected-color(state.get-focus-state($colors));\n  }\n\n  @include state.pressed($selectors) {\n    @include _set-track-unselected-color(state.get-pressed-state($colors));\n  }\n\n  @include state.disabled($selectors) {\n    @include _set-track-unselected-color(state.get-disabled-state($colors));\n  }\n}\n\n@mixin _set-track-unselected-color($color) {\n  .mdc-switch__track::before {\n    @include theme.property(background, $color);\n  }\n}\n\n@mixin _track-shape($shape) {\n  .mdc-switch__track {\n    @include shape.radius($shape);\n  }\n}\n\n@mixin _track-width($width) {\n  @include theme.property(width, $width);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/rtl/rtl';\n@use '@material/tab-indicator/mixins' as tab-indicator-mixins;\n@use './variables';\n\n// Public mixins\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-tab {\n    @include min-width(variables.$min-width, $query);\n    @include horizontal-padding(variables.$horizontal-padding, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex: 1 0 auto;\n      justify-content: center;\n      box-sizing: border-box;\n      // Explicitly setting margin to 0 is to override safari default margin for button elements.\n      margin: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      border: none;\n      outline: none;\n      text-align: center;\n      white-space: nowrap;\n      cursor: pointer;\n      -webkit-appearance: none;\n      z-index: 1;\n\n      // Firefox still draws a dotted border around focused buttons unless specifically overridden.\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n    }\n  }\n\n  .mdc-tab--min-width {\n    @include feature-targeting.targets($feat-structure) {\n      flex: 0 1 auto;\n    }\n  }\n\n  .mdc-tab__content {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: inherit;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      // Setting line-height here overrides the line-height from the typography\n      // mixin above. The line-height needs to be overridden so that the spacing\n      // between the text label and the icon as well as the text label and the\n      // bottom of the tab remain the same.\n      line-height: 1;\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab--stacked {\n    @include stacked_($query);\n  }\n\n  .mdc-tab--active {\n    .mdc-tab__text-label,\n    .mdc-tab__icon {\n      @include feature-targeting.targets($feat-animation) {\n        transition-delay: 100ms;\n      }\n    }\n  }\n\n  .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon + .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(padding, left, 8px);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab\n\n  .mdc-tab {\n    @include base_($query);\n  }\n\n  .mdc-tab__content {\n    @include content_($query);\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$icon-size;\n      height: variables.$icon-size;\n      font-size: variables.$icon-size;\n    }\n  }\n\n  .mdc-tab--active {\n    @include active_($query);\n  }\n\n  .mdc-tab {\n    @include feature-targeting.targets($feat-structure) {\n      background: none;\n    }\n  }\n\n  @include static-styles($query: $query);\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include ripple_($query);\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin text-label-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n\n      fill: currentColor;\n    }\n  }\n}\n\n@mixin states-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include icon-color($color, $query);\n  @include states-color($color, $query);\n  @include text-label-color($color, $query);\n}\n\n@mixin active-text-label-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include text-label-color($color, $query);\n  }\n}\n\n@mixin active-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include icon-color($color, $query);\n  }\n}\n\n@mixin active-states-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include states-color($color, $query);\n  }\n}\n\n@mixin parent-positioning($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin fixed-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex: 0 1 $width;\n  }\n}\n\n///\n/// Sets tab height\n///\n/// @param {Number} $height Height value in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets tab text transform\n///\n/// @param {String} $transform The text-transform property to apply.\n///\n@mixin text-transform($transform, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-transform: $transform;\n  }\n}\n\n///\n/// Sets tab min-width.\n///\n/// @param {Number} $min-width Minimum width value in `px`.\n///\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.typography(button, $query);\n  @include text-label-color(variables.$text-label-color-default, $query);\n  @include icon-color(variables.$icon-color-default, $query);\n  @include tab-indicator-mixins.surface($query);\n}\n\n@mixin ripple_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab {\n    @include ripple.surface(\n      $query,\n      $ripple-target: variables.$ripple-target,\n      $include-will-change: false\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple-theme.states(\n      $color: primary,\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      // TODO(b/151931961): Remove the following line once resolved\n      will-change: transform, opacity;\n    }\n  }\n}\n\n@mixin content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tab-indicator-mixins.surface($query);\n}\n\n@mixin stacked_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tab__content {\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .mdc-tab__text-label {\n      padding-top: 6px;\n      padding-bottom: 4px;\n    }\n  }\n}\n\n@mixin active_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include text-label-color(variables.$text-label-color-active, $query);\n  @include icon-color(variables.$icon-color-active, $query);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-tab-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      position: absolute;\n      top: 0;\n      left: 0;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 1;\n    }\n  }\n\n  .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-structure) {\n      transform-origin: left;\n      opacity: 0;\n    }\n  }\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-end;\n      box-sizing: border-box;\n      width: 100%;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      margin: 0 auto;\n    }\n  }\n\n  .mdc-tab-indicator--active .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n\n  // Slide by default\n  .mdc-tab-indicator .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 250ms transform variables.$standard-curve-timing-function;\n    }\n  }\n\n  // --no-transition is applied in cases where styles need to be applied immediately to set up a transition\n  .mdc-tab-indicator--no-transition .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n  }\n\n  .mdc-tab-indicator--fade .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms opacity linear;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-tab-indicator--active.mdc-tab-indicator--fade\n    .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition-delay: 100ms;\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab-indicator\n\n  .mdc-tab-indicator {\n    @include base_($query);\n  }\n\n  @include static-styles($query: $query);\n\n  // postcss-bem-linter: end\n}\n\n@mixin surface($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin underline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin underline-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $height;\n    }\n  }\n}\n\n@mixin underline-shape($radius) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property('border-radius', $radius);\n  }\n}\n\n@mixin underline-top-corner-radius($radius, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: $radius;\n      border-top-right-radius: $radius;\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n      font-size: $height;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include underline-color(primary, $query);\n  @include icon-color(secondary, $query);\n  @include underline-height(2px, $query);\n  @include icon-height(34px, $query);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n$icon-size: 24px !default;\n$height: 48px !default;\n$stacked-height: 72px !default;\n$min-width: 90px !default;\n$horizontal-padding: 24px !default;\n$text-label-opacity: 0.6 !default;\n$icon-opacity: 0.54 !default;\n$text-label-color-default: rgba(\n  theme-color.prop-value(on-surface),\n  $text-label-opacity\n) !default;\n$icon-color-default: rgba(\n  theme-color.prop-value(on-surface),\n  $icon-opacity\n) !default;\n$text-label-color-active: primary !default;\n$icon-color-active: primary !default;\n$ripple-target: '.mdc-tab__ripple';\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tab-scroller/mixins' as tab-scroller-mixins;\n@use '@material/tab/mixins' as tab-mixins;\n@use './variables';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  .mdc-tab-bar {\n    @include width(100%, $query);\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define tab-bar\n  @include static-styles($query: $query);\n  @include density(variables.$density-scale, $query: $query);\n  @include stacked-density(variables.$stacked-density-scale, $query: $query);\n  // postcss-bem-linter: end\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width;\n  }\n}\n\n///\n/// Sets density scale to default tab bar variant. Use `mdc-tab-bar-stacked-density()` mixin for stacked tab bar\n/// variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets density scale to stacked tab bar variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin stacked-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$stacked-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab--stacked {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets the CSS transition for the tab scrolling animation. This mixin is a proxy to `mdc-tab-scroller-transition`\n/// mixin.\n///\n/// @param {Number | String} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin tab-scroller-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  .mdc-tab-scroller {\n    @include tab-scroller-mixins.transition(\n      $duration-ms,\n      $timing-function: $timing-function,\n      $query: $query\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables' as animation-variables;\n@use '@material/tab/mixins' as tab-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n///\n/// Sets the CSS transition for the tab scrolling animation.\n///\n/// @param {Number | String} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  &.mdc-tab-scroller--animating .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: $duration-ms transform $timing-function;\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include core-styles($query: $query);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab-scroller\n  .mdc-tab-scroller {\n    @include transition(\n      $duration-ms: variables.$transition-duration,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      overflow-y: hidden;\n    }\n  }\n\n  // Selector for test element used to feature-detect horizontal scrollbar height\n  .mdc-tab-scroller__test {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: -9999px;\n      width: 100px;\n      height: 100px;\n      overflow-x: scroll;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-area {\n    @include feature-targeting.targets($feat-structure) {\n      -webkit-overflow-scrolling: touch;\n      display: flex;\n      overflow-x: hidden;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-area,\n  .mdc-tab-scroller__test {\n    @include feature-targeting.targets($feat-structure) {\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n\n  // This modifier class will be added in JS after computing the OS scrollbar size in order to hide the scrollbar.\n  .mdc-tab-scroller__scroll-area--scroll {\n    @include feature-targeting.targets($feat-structure) {\n      overflow-x: scroll;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-content {\n    @include scroll-content_($query);\n  }\n\n  .mdc-tab-scroller--align-start .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: flex-start;\n    }\n  }\n\n  .mdc-tab-scroller--align-end .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-tab-scroller--align-center .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: center;\n    }\n  }\n\n  .mdc-tab-scroller--animating {\n    .mdc-tab-scroller__scroll-area {\n      @include feature-targeting.targets($feat-animation) {\n        -webkit-overflow-scrolling: auto;\n      }\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n//\n// Private\n//\n\n@mixin scroll-content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include tab-mixins.parent-positioning($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    flex: 1 0 auto;\n    transform: none;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    will-change: transform;\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// TODO: document why this disable is neccessary\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/animation';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use 'helper-text/mixins' as helper-text-mixins;\n@use 'character-counter/mixins' as character-counter-mixins;\n@use 'icon/mixins' as icon-mixins;\n@use 'icon/variables' as icon-variables;\n@use './variables';\n@use '@material/rtl/rtl';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query);\n  @include without-ripple($query);\n  @include helper-text-mixins.helper-text-core-styles($query);\n  @include character-counter-mixins.character-counter-core-styles($query);\n  @include icon-mixins.icon-core-styles($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Baseline\n  // postcss-bem-linter: define text-field\n  .mdc-text-field {\n    @include _base($query);\n  }\n\n  .mdc-text-field__input {\n    @include _input($query);\n\n    @include placeholder-selector_ {\n      @include _input-placeholder($query);\n    }\n\n    // Always show placeholder for text fields that has no\n    // label and show only on focused state when label is present.\n    .mdc-text-field--no-label &,\n    .mdc-text-field--focused & {\n      @include placeholder-selector_ {\n        @include _input-placeholder-visible($query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix {\n    @include _affix($query: $query);\n\n    .mdc-text-field--label-floating &,\n    .mdc-text-field--no-label & {\n      @include _affix-visible($query: $query);\n    }\n\n    // Safari only\n    @supports (-webkit-hyphens: none) {\n      .mdc-text-field--outlined & {\n        @include _centered-affix-safari-support($query: $query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix--prefix {\n    @include _prefix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _prefix-end-aligned($query: $query);\n    }\n  }\n\n  .mdc-text-field__affix--suffix {\n    @include _suffix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _suffix-end-aligned($query: $query);\n    }\n  }\n\n  // Variants\n\n  .mdc-text-field--filled {\n    @include _filled($query);\n\n    &.mdc-text-field--no-label {\n      @include _filled-no-label($query);\n    }\n  }\n\n  .mdc-text-field--outlined {\n    @include outlined_($query);\n\n    .mdc-notched-outline {\n      @include _outlined-notched-outline($query);\n    }\n  }\n\n  // Other Variations\n\n  .mdc-text-field--textarea {\n    @include textarea_($query);\n\n    .mdc-text-field__input {\n      @include _textarea-input($query);\n    }\n\n    &.mdc-text-field--filled {\n      @include _textarea-filled($query);\n\n      .mdc-text-field__input {\n        @include _textarea-filled-input($query);\n      }\n\n      &.mdc-text-field--no-label {\n        .mdc-text-field__input {\n          @include _textarea-filled-no-label-input($query);\n        }\n      }\n    }\n\n    &.mdc-text-field--outlined {\n      @include _textarea-outlined($query);\n\n      .mdc-text-field__input {\n        @include _textarea-outlined-input($query);\n      }\n\n      .mdc-floating-label {\n        @include _textarea-outlined-floating-label($query);\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        @include _textarea-input-with-internal-counter($query);\n      }\n\n      .mdc-text-field-character-counter {\n        @include _textarea-internal-counter($query);\n      }\n    }\n  }\n\n  // Resizer element does not need to be under mdc-text-field--textarea, that\n  // just adds specificity\n  .mdc-text-field__resizer {\n    @include _textarea-resizer($query);\n\n    .mdc-text-field--filled & {\n      @include _textarea-filled-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-filled-resizer-children($query);\n      }\n    }\n\n    .mdc-text-field--outlined & {\n      @include _textarea-outlined-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-outlined-resizer-children($query);\n      }\n    }\n  }\n\n  .mdc-text-field--with-leading-icon {\n    @include _padding-horizontal-with-leading-icon($query);\n\n    &.mdc-text-field--filled {\n      @include with-leading-icon_($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include outlined-with-leading-icon_($query);\n    }\n  }\n\n  .mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-trailing-icon($query);\n\n    &.mdc-text-field--filled {\n      @include _with-trailing-icon($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include _outlined-with-trailing-icon($query);\n    }\n  }\n\n  .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-both-icons($query);\n\n    &.mdc-text-field--filled {\n      @include _with-leading-and-trailing-icon($query);\n    }\n  }\n\n  // postcss-bem-linter: define text-field-helper-text\n  // stylelint-disable plugin/selector-bem-pattern --\n  // TODO: document why this disable is neccessary\n  .mdc-text-field-helper-line {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n\n    .mdc-text-field + & {\n      @include feature-targeting.targets($feat-structure) {\n        padding-right: variables.$helper-line-padding;\n        padding-left: variables.$helper-line-padding;\n      }\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n  // postcss-bem-linter: end\n\n  // mdc-form-field tweaks to align text field label correctly\n  // stylelint-disable selector-max-type --\n  // TODO: document why this disable is neccessary\n  .mdc-form-field > .mdc-text-field + label {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  // States\n  .mdc-text-field--focused {\n    @include focused_($query);\n\n    &.mdc-text-field--outlined {\n      @include _focused-outlined($query);\n\n      &.mdc-text-field--textarea {\n        @include _focused-outlined-textarea($query);\n      }\n    }\n  }\n\n  .mdc-text-field--invalid {\n    @include invalid_($query);\n  }\n\n  .mdc-text-field--disabled {\n    @include disabled_($query);\n\n    &.mdc-text-field--filled {\n      @include _disabled-filled($query);\n    }\n\n    .mdc-text-field__input {\n      @include _disabled-input($query);\n    }\n  }\n\n  .mdc-text-field--end-aligned {\n    @include end-aligned_($query);\n  }\n\n  .mdc-text-field--ltr-text {\n    @include _ltr-text($query);\n\n    &.mdc-text-field--end-aligned {\n      @include _ltr-text-end-aligned($query);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other text field styles. It is recommended that most users use `mdc-text-field-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-text-field--filled {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n///\n/// Sets density scale for default text field variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n///\n@mixin density(\n  $density-scale,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for filled textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin filled-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $no-label-margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $no-label-margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and filled). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--filled {\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    @if $density-scale >= -1 {\n      $keyframe-suffix: text-field-filled-#{$density-scale};\n      $label-top: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-label-density-config,\n        $density-scale: math.div($density-scale, 2),\n        $property-name: top,\n      );\n\n      // Adjust the floating position and animation/keyframes of the floating\n      // label by the new position of the resting label\n      $label-top-difference: variables.$textarea-outlined-label-top -\n        $label-top;\n\n      // Floating label position\n      @include floating-label-mixins.float-position(\n        variables.$textarea-filled-label-position-y - $label-top-difference,\n        $query: $query\n      );\n\n      // Floating label animation\n      @include floating-label-mixins.shake-animation(\n        $keyframe-suffix,\n        $query: $query\n      );\n      @at-root {\n        @include floating-label-mixins.shake-keyframes(\n          $keyframe-suffix,\n          variables.$textarea-filled-label-position-y - $label-top-difference,\n          0%,\n          $query: $query\n        );\n      }\n\n      // Resting label position\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          top: $label-top;\n        }\n      }\n\n      $margin-bottom: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-density-config,\n        $density-scale: $density-scale,\n        $property-name: margin-bottom,\n      );\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-bottom: $margin-bottom;\n        }\n      }\n    } @else {\n      // The textarea is too dense to show a floating label\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          display: none;\n        }\n      }\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--no-label {\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for outlined textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $keyframe-suffix: text-field-outlined-#{$density-scale};\n  $label-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: top,\n  );\n  $textfield-height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and outlined). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--outlined {\n    // Adjust the floating position and animation/keyframes of the floating\n    // label by the new position of the resting label\n    $label-top-difference: variables.$textarea-outlined-label-top - $label-top;\n\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      variables.$textarea-outlined-label-position-y - $label-top-difference,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        variables.$textarea-outlined-label-position-y - $label-top-difference,\n        0%,\n        $query: $query\n      );\n    }\n\n    // Resting label position\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        top: $label-top;\n      }\n    }\n\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: $margin-top;\n        margin-bottom: $margin-bottom;\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets the minimum number of rows for a textarea a textarea may be resized to.\n///\n/// For IE11 this mixin can be used instead of the rows attribute.\n///\n/// @param {Number} $rows - The minimum number of rows for a textarea.\n/// @param {Number} $line-height - The line-height of the textarea.\n///\n@mixin textarea-min-rows(\n  $rows,\n  $line-height: variables.$textarea-line-height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $rows * $line-height;\n    }\n  }\n}\n\n///\n/// Sets height of default text field variant.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n/// @access public\n///\n@mixin height(\n  $height,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n\n  @if $height < $minimum-height-for-filled-label {\n    @include _filled-no-label($query: $query);\n  }\n}\n\n///\n/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-height(\n  $height,\n  $keyframe-suffix: text-field-outlined-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      $query: $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets height of outlined text field with leading icon variant.\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-with-leading-icon-height(\n  $height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This extra specificity is needed because textfield applies the below mixin\n  // already to two selectors (outlined + with-leading-icon). To override\n  // them with a new label position and animation, another selector is needed.\n  &.mdc-text-field--outlined {\n    @include _outlined-with-leading-icon-floating-label-position-animation(\n      $height,\n      $keyframe-suffix,\n      $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n// Mixin that sets the floating label position and animations for a given height.\n// This mixin is separate to allow outlined-with-leading-icon-height() to\n// provide greater specificity over the default mixin that adds styles for\n// outlined with leading icons.\n@mixin _outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    variables.$outlined-with-leading-icon-label-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      variables.$outlined-with-leading-icon-label-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $positionY,\n      -(variables.$outlined-with-leading-icon-label-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets shape radius of default text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-textfield: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  @include shape-mixins.radius(\n    $masked-radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n}\n\n@mixin textarea-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n///\n/// Customizes the color of the text entered into an enabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the entered text in a disabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in an enabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in a disabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin disabled-placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when enabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when disabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin disabled-fill-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the disabled text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin disabled-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the hover text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin hover-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the default line ripple of the text field.\n/// @param {Color} $color - The desired line ripple color.\n///\n@mixin line-ripple-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include line-ripple-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in an enabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin label-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in a disabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin disabled-label-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the border color of the outlined text field or textarea.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is hovered.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin hover-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is focused.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin focused-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include focused-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is disabled.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the caret color of the text field or textarea.\n/// @param {Color} $color - The desired caret color.\n///\n@mixin caret-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(caret-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the color of the prefix text for an enabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin prefix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the prefix text for a disabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin disabled-prefix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for an enabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin suffix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for a disabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin disabled-suffix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets shape radius of outlined text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-radius: list.nth($unpacked-radius, 2);\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-right-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    // The horizontal padding only needs to be overriden from the base padding\n    // if the radius is a custom property, or if the top-left radius is a value\n    // that is large than that default notched outline's leading width.\n    @include _outline-shape-radius-horizontal-padding(\n      $top-left-radius,\n      $top-right-radius,\n      $query: $query\n    );\n\n    + .mdc-text-field-helper-line {\n      @include _outline-shape-radius-horizontal-padding(\n        $top-left-radius,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n\n    // Ensure that leading/trailing icon padding is overriden. Even if the\n    // top left/right isn't a custom property or the leading isn't larger, we\n    // still need to override. The above left/right padding rules have more\n    // specificty than the original leading/trailing icon rules, so we need to\n    // re-apply them.\n    // Additionally, if the top left/right radii _are_ custom properties, we\n    // should use those instead.\n\n    &.mdc-text-field--with-leading-icon {\n      @if ($top-right-is-custom-prop) {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-right-radius,\n          $query: $query\n        );\n\n        @include rtl.rtl {\n          @include _apply-outline-shape-padding(\n            padding-left,\n            $top-right-radius,\n            $query: $query\n          );\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-right: 0;\n          }\n        }\n      } @else {\n        @include _padding-horizontal-with-leading-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-trailing-icon {\n      @if (\n        $top-left-is-custom-prop or\n          $top-left-radius-px >\n          notched-outline-variables.$leading-width\n      ) {\n        @include _apply-outline-shape-padding(\n          padding-left,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-right: 0;\n        }\n\n        @include rtl.rtl {\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-left: 0;\n          }\n          @include _apply-outline-shape-padding(\n            padding-right,\n            $top-left-radius,\n            $add-label-padding: true,\n            $query: $query\n          );\n        }\n      } @else {\n        @include _padding-horizontal-with-trailing-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n      @include _padding-horizontal-with-both-icons($query);\n    }\n  }\n}\n\n@mixin _outline-shape-radius-horizontal-padding(\n  $top-left-radius,\n  $top-right-radius,\n  $query: feature-targeting.all()\n) {\n  @include _apply-outline-shape-padding(\n    padding-left,\n    $top-left-radius,\n    $add-label-padding: true,\n    $query: $query\n  );\n  @include _apply-outline-shape-padding(\n    padding-right,\n    $top-right-radius,\n    $query: $query\n  );\n\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n  $top-right-radius-px: $top-right-radius;\n  @if ($top-right-is-custom-prop) {\n    $top-right-radius-px: custom-properties.get-fallback($top-right-radius);\n  }\n\n  @if (\n    (\n        $top-left-is-custom-prop and\n          $top-right-is-custom-prop and not\n          custom-properties.are-equal($top-left-radius, $top-right-radius)\n      ) or\n      $top-left-radius-px !=\n      $top-right-radius-px\n  ) {\n    // Normally base horizontal padding doesn't need RTL, but if the values\n    // are different or they are two different custom properties, they need to\n    // be reversed.\n    @include rtl.rtl {\n      @include _apply-outline-shape-padding(\n        padding-right,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > variables.$padding-horizontal) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @if ($padding-is-custom-prop) {\n        // Add an alternate GSS tag b/c this was an IE11 fallback and we're\n        // going to add another property with the var() value\n        /* @alternate */\n      }\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the calculated\n        // custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{variables.$padding-horizontal}, #{$value});\n      }\n    }\n  }\n}\n\n///\n/// Sets the CSS transition for the floating label's 'float' animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin floating-label-float-transition(\n  $duration-ms,\n  $timing-function: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-floating-label {\n    @include floating-label-mixins.float-transition(\n      $duration-ms,\n      $timing-function,\n      $query: $query\n    );\n  }\n}\n\n// Private mixins\n\n// Base shared styles\n@mixin _base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Shape\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  // Colors\n  @include label-color(variables.$label, $query: $query);\n  @include ink-color(variables.$ink-color, $query: $query);\n  @include placeholder-color(variables.$placeholder-ink-color, $query: $query);\n  @include caret-color(primary, $query: $query);\n  @include helper-text-mixins.helper-text-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include prefix-color(variables.$affix-color, $query: $query);\n  @include suffix-color(variables.$affix-color, $query: $query);\n\n  // Floating Label\n  @include floating-label_($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    // display and align-items are necessary to make the text field participate\n    // in baseline alignment, even though some variants are 'centered'. Those\n    // variants should use the _baseline-center-aligned() mixin\n    display: inline-flex;\n    align-items: baseline;\n    padding: 0 variables.$padding-horizontal;\n    position: relative;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* @alternate */\n    will-change: opacity, transform, color;\n  }\n}\n\n// This mixin adds styles to visually center the text within the text field.\n// Sibling text will align to the baseline and appear centered next to the\n// text field.\n@mixin _baseline-center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons 'controlling' the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the 'largest'\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n\n    // IE11 does not respect this, and makes the leading icon (if present) the\n    // baseline. This is a gap with IE11 that we have accepted.\n    .mdc-text-field__input {\n      height: 100%;\n    }\n  }\n}\n\n@mixin _padding-horizontal-with-leading-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, 0, variables.$padding-horizontal);\n  }\n}\n\n@mixin _padding-horizontal-with-trailing-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, variables.$padding-horizontal, 0);\n  }\n}\n\n@mixin _padding-horizontal-with-both-icons($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    padding-left: 0;\n    @include rtl.ignore-next-line();\n    padding-right: 0;\n  }\n}\n\n@mixin floating-label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n// Filled\n\n@mixin _filled($query: feature-targeting.all()) {\n  // Text Field intentionally omits press ripple, so each state needs to be specified individually.\n  @include ripple-theme.states-base-color(\n    variables.$ink-color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-hover-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, hover),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-focus-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, focus),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n\n  @include height(variables.$height, $query: $query);\n  @include typography.baseline-top(\n    variables.$filled-baseline-top,\n    $query: $query\n  );\n  @include fill-color(variables.$background, $query: $query);\n  @include bottom-line-color(variables.$bottom-line-idle, $query: $query);\n  @include hover-bottom-line-color(\n    variables.$bottom-line-hover,\n    $query: $query\n  );\n  @include line-ripple-color_(primary, $query: $query);\n  @include _filled-floating-label($query);\n}\n\n@mixin _filled-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, variables.$label-offset);\n    }\n  }\n\n  @include floating-label-mixins.float-position(\n    variables.$label-position-y,\n    $query: $query\n  );\n}\n\n// Filled variant with no label. This variant centers the text elements and\n// hides the label and is used with there is explicitly no label provided or\n// when the height of the text field is too small for a label to be allowed.\n@mixin _filled-no-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _baseline-center-aligned($query);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-floating-label {\n      display: none;\n    }\n\n    &::before {\n      // Remove baseline-top strut\n      display: none;\n    }\n  }\n\n  // Safari only\n  @supports (-webkit-hyphens: none) {\n    .mdc-text-field__affix {\n      @include _centered-affix-safari-support($query: $query);\n    }\n  }\n}\n\n// Outlined\n\n@mixin outlined_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outlined-height(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined,\n    $query: $query\n  );\n  @include _baseline-center-aligned($query: $query);\n  @include outline-color(variables.$outlined-idle-border, $query: $query);\n  @include hover-outline-color(\n    variables.$outlined-hover-border,\n    $query: $query\n  );\n  @include focused-outline-color(primary, $query: $query);\n  @include outline-shape-radius(variables.$shape-radius, $query: $query);\n  @include notched-outline-mixins.notch-offset(\n    notched-outline-variables.$border-width,\n    $query: $query\n  );\n  @include ripple-theme.states-base-color(\n    transparent,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include _outlined-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // TODO(b/154349735): Investigate the neccessity of these styles\n      display: flex;\n      border: none !important; // FF adds unwanted border in HC mode on windows.\n      background-color: transparent;\n    }\n  }\n}\n\n@mixin _outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, notched-outline-variables.$padding);\n    }\n  }\n}\n\n@mixin _outlined-notched-outline($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Force the outline to appear \"above\" the textfield elements, even though\n    // it is absolutely positioned and comes before the input in the DOM. This\n    // is primarily for the textarea scrollbar and resize elements, which may\n    // clip with with outline border.\n    z-index: 1;\n  }\n}\n\n// States\n\n@mixin disabled_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ink-color_(variables.$disabled-ink-color, $query: $query);\n  @include placeholder-color_(\n    variables.$disabled-placeholder-ink-color,\n    $query: $query\n  );\n  @include label-ink-color_(variables.$disabled-label-color, $query: $query);\n  @include helper-text-mixins.helper-text-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include _prefix-color(variables.$disabled-affix-color, $query: $query);\n  @include _suffix-color(variables.$disabled-affix-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color_(variables.$disabled-border, $query: $query);\n  @include notched-outline-mixins.color(\n    variables.$outlined-disabled-border,\n    $query: $query\n  );\n\n  @include dom.forced-colors-mode {\n    @include placeholder-color_(GrayText, $query: $query);\n    @include label-ink-color_(GrayText, $query: $query);\n    @include helper-text-mixins.helper-text-color_(GrayText, $query: $query);\n    @include character-counter-mixins.character-counter-color_(\n      GrayText,\n      $query: $query\n    );\n    @include icon-mixins.leading-icon-color_(GrayText, $query: $query);\n    @include icon-mixins.trailing-icon-color_(GrayText, $query: $query);\n    @include _prefix-color(GrayText, $query: $query);\n    @include _suffix-color(GrayText, $query: $query);\n\n    // Mixins that are ok to include since they target variant-specific elements\n    @include bottom-line-color_(GrayText, $query: $query);\n    @include notched-outline-mixins.color(GrayText, $query: $query);\n  }\n\n  @include dom.forced-colors-mode($exclude-ie11: true) {\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        background-color: Window;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 1;\n      }\n    }\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n  }\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n    }\n  }\n}\n\n@mixin _disabled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // disabled inputs should still allow users to interact with them to select\n    // text and scroll for textareas\n    pointer-events: auto;\n  }\n}\n\n@mixin _disabled-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include fill-color_(variables.$disabled-background, $query: $query);\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      // prevent ripple from displaying on hover when some interactible\n      // elements like input and resize handles are hovered\n      display: none;\n    }\n  }\n}\n\n@mixin invalid_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include hover-bottom-line-color(variables.$error, $query: $query);\n  @include line-ripple-color(variables.$error, $query: $query);\n  @include label-color(variables.$error, $query: $query);\n  @include helper-text-mixins.helper-text-validation-color(\n    variables.$error,\n    $query: $query\n  );\n  @include caret-color(variables.$error, $query: $query);\n  @include icon-mixins.trailing-icon-color(variables.$error, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color(variables.$error, $query: $query);\n  @include outline-color(variables.$error, $query: $query);\n  @include hover-outline-color(variables.$error, $query: $query);\n  @include focused-outline-color(variables.$error, $query: $query);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin focused_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include label-color(variables.$focused-label-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include notched-outline-mixins.stroke-width(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n\n  + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin _focused-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n}\n\n@mixin _focused-outlined-textarea($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n}\n\n// Icons\n\n@mixin with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($icon-padding, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-padding);\n    }\n  }\n\n  $truncation: $icon-padding + variables.$padding-horizontal;\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-trailing-icon($query: feature-targeting.all()) {\n  $truncation: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right +\n    variables.$label-offset;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-leading-and-trailing-icon($query: feature-targeting.all()) {\n  $leading-icon: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $trailing-icon: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  $truncation: $leading-icon + $trailing-icon;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin outlined-with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $left-spacing: $icon-padding - notched-outline-variables.$leading-width;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $left-spacing);\n    }\n  }\n\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n\n  // Floating label position and animation\n  @include _outlined-with-leading-icon-floating-label-position-animation(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined-leading-icon,\n    $query: $query\n  );\n}\n\n///\n/// Applied to the outlined text field with a trailing icon\n///\n@mixin _outlined-with-trailing-icon($query: feature-targeting.all()) {\n  // Resting label position\n  $icon-padding: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the notched outline by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the notched outline max-width\n///\n@mixin _truncate-notched-outline-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.notch-max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include floating-label-mixins.max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount while scaling by the given scale value\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-floated-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  $scale: floating-label-variables.$float-scale;\n  @include floating-label-mixins.max-width(\n    calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n    $query: $query\n  );\n}\n\n// Textarea\n\n@mixin textarea_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include _textarea-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 0; // see below for explanation\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: none;\n  }\n}\n\n@mixin _textarea-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: stretch;\n    display: inline-flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: variables.$height;\n    // stylelint-disable declaration-block-no-duplicate-properties --\n    // TODO: document why this disable is neccessary\n\n    // 'stretch' is the preferred rule here. It will allow the textarea to grow\n    // to the min/max width of the container, but if an explicit width is set,\n    // it cannot be resized horizontally.\n    // Stretch is still a working draft. Chrome and Firefox have it implemented\n    // with 'available' prefixes. fit-content is another good target for\n    // Safari since it works in almost all use cases except when an explicit\n    // width is set (the user can make the textarea smaller than the container).\n    // None of this matters for IE11, which doesn't support resize.\n    min-width: fit-content;\n    /* @alternate */\n    min-width: -moz-available;\n    /* @alternate */\n    min-width: -webkit-fill-available;\n    // stylelint-enable declaration-block-no-duplicate-properties\n    overflow: hidden;\n    resize: both;\n  }\n}\n\n@mixin _textarea-filled-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element up by a margin amount to make space for the\n  // resize handle. For filled elements, the resize handle directly touches\n  // the bottom line and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-filled-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (down) to compensate.\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-outlined-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element left/up by a margin amount to make space for the\n  // resize handle. For outlined elements, the resize handle directly touches\n  // the outline and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $x: -1 * variables.$textarea-input-handle-margin;\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-outlined-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (right and down) to compensate.\n  $x: variables.$textarea-input-handle-margin;\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: variables.$textarea-label-top;\n    }\n\n    // Resets center aligning the floating label.\n    &:not(.mdc-floating-label--float-above) {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n      }\n    }\n  }\n}\n\n@mixin _textarea-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-grow: 1;\n    height: auto;\n    min-height: variables.$textarea-line-height;\n    overflow-x: hidden; // https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    overflow-y: auto;\n    box-sizing: border-box;\n    resize: none;\n    // Textarea has horizontal padding instead of the container. This allows the\n    // resize handle to extend to the edge of the container.\n    padding: 0 variables.$padding-horizontal;\n  }\n\n  @include feature-targeting.targets($feat-typography) {\n    line-height: variables.$textarea-line-height;\n  }\n}\n\n@mixin _textarea-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.baseline-bottom(\n    variables.$textarea-internal-counter-baseline-bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    align-self: flex-end;\n    // Needed since padding is on the textarea and not the container\n    padding: 0 variables.$padding-horizontal;\n\n    &::before {\n      // Remove baseline-top\n      display: none;\n    }\n  }\n}\n\n@mixin _textarea-input-with-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-bottom: variables.$textarea-internal-counter-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    &::before {\n      // <textarea> does not align to baseline when it does not have a value,\n      // unlike <input>, so we have to use padding to fake it instead\n      display: none;\n    }\n  }\n\n  // Floating label position\n  @include floating-label-mixins.float-position(\n    variables.$textarea-filled-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-filled,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-filled,\n      variables.$textarea-filled-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-filled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-input-margin-top;\n    margin-bottom: variables.$textarea-filled-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled-no-label-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-no-label-input-margin-top;\n    margin-bottom: variables.$textarea-filled-no-label-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    variables.$textarea-outlined-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-outlined,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-outlined,\n      variables.$textarea-outlined-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    top: variables.$textarea-outlined-label-top;\n  }\n}\n\n@mixin _textarea-outlined-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-outlined-input-margin-top;\n    margin-bottom: variables.$textarea-outlined-input-margin-bottom;\n  }\n}\n\n// Text, Prefix and Suffix\n\n// Common styles for the text of the text field, including the prefix, suffix,\n// and input.\n@mixin _text($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Exclude setting line-height to keep caret (text cursor) same height as the input text in iOS browser.\n  @include typography.typography(\n    subtitle1,\n    $exclude-props: (line-height),\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    height: variables.$input-height;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 150ms);\n  }\n}\n\n@mixin _input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    min-width: 0; // Fixes flex issues on Firefox\n    border: none;\n    border-radius: 0;\n    background: none;\n    appearance: none;\n    padding: 0;\n\n    // Remove built-in trailing clear icon on IE11. IE vendor prefixes cannot\n    // be combined with other vendor prefixes like the webkit one below.\n    &::-ms-clear {\n      display: none;\n    }\n\n    // Remove built-in datepicker icon on Chrome\n    &::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n  }\n}\n\n@mixin _input-placeholder($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 67ms);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n  }\n}\n\n@mixin _input-placeholder-visible($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition-delay: 40ms;\n    transition-duration: 110ms;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _affix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n    white-space: nowrap;\n  }\n}\n\n// TODO(b/155467610): Remove when Safari supports baseline alignment\n// https://github.com/material-components/material-components-web/issues/5879\n@mixin _centered-affix-safari-support($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-items: center;\n    align-self: center;\n    display: inline-flex;\n    height: 100%;\n  }\n}\n\n@mixin _affix-visible($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, right, variables.$prefix-padding);\n  }\n}\n\n@mixin _prefix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-end-aligned-padding\n    );\n  }\n}\n\n@mixin _suffix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, left, variables.$suffix-padding);\n  }\n}\n\n@mixin _suffix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$suffix-end-aligned-padding\n    );\n  }\n}\n\n// End aligned\n@mixin end-aligned_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // IE11 does not support text-align: end\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix to be LTR when in an RTL environment. Other\n// elements such as labels and icons will remain RTL.\n@mixin _ltr-text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input,\n      .mdc-text-field__affix {\n        @include rtl.ignore-next-line();\n        direction: ltr;\n      }\n\n      .mdc-text-field__affix--prefix {\n        @include rtl.ignore-next-line();\n        padding-left: 0;\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-padding;\n        @include rtl.ignore-next-line();\n        padding-right: 0;\n      }\n\n      // Need to specify an order for all elements since icons maintain their\n      // original positions. We can't just reverse the container.\n      .mdc-text-field__icon--leading {\n        order: 1;\n      }\n\n      .mdc-text-field__affix--suffix {\n        order: 2;\n      }\n\n      .mdc-text-field__input {\n        order: 3;\n      }\n\n      .mdc-text-field__affix--prefix {\n        order: 4;\n      }\n\n      .mdc-text-field__icon--trailing {\n        order: 5;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix that are already forced to LTR to also be\n// end-aligned. This mixin should be used alongside the styles provided in\n// _ltr-text().\n@mixin _ltr-text-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input {\n        // IE11 does not support text-align: end, so we need to duplicate\n        // the LTR end-aligned style here.\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      .mdc-text-field__affix--prefix {\n        // padding-left: 0 provided by _ltr-text mixin\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-end-aligned-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-end-aligned-padding;\n        // padding-right: 0 provided by _ltr-text mixin\n      }\n    }\n  }\n}\n\n// Customization\n\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin placeholder-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__input {\n      @include placeholder-selector_ {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin fill-color_(\n  $color,\n  $query: feature-targeting.all(),\n  $addAlternate: false\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if ($addAlternate) {\n      /* @alternate */\n    }\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin bottom-line-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin hover-bottom-line-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:hover .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin line-ripple-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.active-color($color, $query: $query);\n  }\n}\n\n@mixin hover-outline-color_($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--focused):hover {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin focused-outline-color_($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--focused {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin label-ink-color_($color, $query: feature-targeting.all()) {\n  .mdc-floating-label {\n    @include floating-label-mixins.ink-color($color, $query: $query);\n  }\n}\n\n@mixin _prefix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--prefix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin _suffix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--suffix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n// Selectors\n\n@mixin placeholder-selector_ {\n  // GSS will combine selectors with the same content, and some browsers have a\n  // CSS quirk where it drops a rule if it does not recognize one of the\n  // selectors.\n  // To avoid GSS combining the ::placeholder and :-ms-input-placeholder\n  // selectors, we wrap them in `@media all`.\n  // TODO(b/142329051)\n  @media all {\n    // ::placeholder needs to be wrapped because IE11 will drop other selectors\n    // with the same content\n    &::placeholder {\n      @content;\n    }\n  }\n\n  @media all {\n    // :-ms-input-placeholder needs to be wrapped because Firefox will drop\n    // other selectors with the same content\n    &:-ms-input-placeholder {\n      @content;\n    }\n  }\n}\n\n// State qualifiers\n\n///\n/// Helps style the text-field only when it's enabled.\n/// @access private\n///\n@mixin if-enabled_ {\n  &:not(.mdc-text-field--disabled) {\n    @content;\n  }\n}\n\n///\n/// Helps style the text-field only when it's disabled.\n/// @access private\n///\n@mixin if-disabled_ {\n  &.mdc-text-field--disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/animation';\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n\n// Public mixins\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define text-field-helper-text\n\n  .mdc-text-field-helper-text {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      opacity: 0;\n      will-change: opacity;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation.standard(opacity, 150ms);\n    }\n  }\n\n  .mdc-text-field-helper-text--persistent {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n      will-change: initial;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the helper text following an enabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin helper-text-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the helper text following a disabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin disabled-helper-text-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n@mixin helper-text-validation-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-validation-color_($color, $query);\n  }\n}\n\n// Private mixins\n\n@mixin helper-text-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin helper-text-validation-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-text-field--invalid\n    + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/theme';\n@use '@material/rtl/rtl';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n\n// Public mixins\n\n@mixin character-counter-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define text-field-character-counter\n\n  .mdc-text-field-character-counter {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Keep flex item align to trailing side on absence of helper text.\n      @include rtl.reflexive-box(margin, left, auto);\n      @include rtl.reflexive-box(padding, left, 16px);\n\n      white-space: nowrap;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the character counter associated with an enabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin character-counter-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the character counter associated with a disabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin disabled-character-counter-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  &.mdc-text-field--disabled {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n@mixin character-counter-position(\n  $xOffset,\n  $yOffset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(right, $xOffset);\n      position: absolute;\n      bottom: $yOffset;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin character-counter-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Character counter is placed inside mdc-textfield element (for textarea variant) or\n  // inside helper line which is sibling to mdc-textfield.\n  .mdc-text-field-character-counter,\n  + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n// Public mixins\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  .mdc-text-field__icon {\n    @include icon_($query: $query);\n\n    svg {\n      @include _icon-svg($query: $query);\n    }\n  }\n\n  .mdc-text-field__icon--leading {\n    @include leading-icon_($query: $query);\n  }\n\n  .mdc-text-field__icon--trailing {\n    @include trailing-icon_($query: $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin leading-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin trailing-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading/trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include leading-icon-color_($color, $query);\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n/// Sets the size of the leading and trailing icons.\n///\n/// @param {Number} $size - the size of the icon in px\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-text-field__icon {\n      font-size: $size;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: center;\n    cursor: pointer;\n  }\n\n  &:not([tabindex]),\n  &[tabindex='-1'] {\n    @include feature-targeting.targets($feat-color) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon-svg($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // SVG children can cause misalignment when displayed as inline since\n    // line-height will be inherited and cause additional vertical space.\n    // Setting the display to block prevents this.\n    display: block;\n  }\n}\n\n@mixin leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      margin,\n      variables.$leading-icon-padding-left,\n      variables.$leading-icon-padding-right\n    );\n  }\n}\n\n@mixin trailing-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: math.div(variables.$touch-target-size - variables.$icon-size, 2);\n    $left-margin: variables.$trailing-icon-padding-left - $padding;\n    $right-margin: variables.$trailing-icon-padding-right - $padding;\n\n    padding: $padding;\n    @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n  }\n}\n\n@mixin leading-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin trailing-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:color';\n@use '@material/density/variables' as density-variables;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/theme/theme-color';\n\n///\n/// Returns outlined text field floating label position for given height.\n///\n/// @todo Instead of adjusting `$positionY` with label box height that might change based on floating label font size\n///     wrap label in a child element to apply `transitionY(-50%)` to automatically offset based on box height.\n///\n@function get-outlined-label-position-y($text-field-height) {\n  @return math.div($text-field-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$error: error !default;\n$disabled-border: rgba(theme-color.prop-value(on-surface), 0.06) !default;\n$disabled-icon: rgba(theme-color.prop-value(on-surface), 0.3) !default;\n$bottom-line-hover: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$bottom-line-idle: rgba(theme-color.prop-value(on-surface), 0.42) !default;\n$label: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$ink-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$helper-text-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$icon-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$focused-label-color: rgba(theme-color.prop-value(primary), 0.87) !default;\n$placeholder-ink-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$affix-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$disabled-label-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-placeholder-ink-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-helper-text-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-affix-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  4%\n) !default;\n$disabled-background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  2%\n) !default;\n$secondary-text: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$outlined-idle-border: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$outlined-disabled-border: rgba(\n  theme-color.prop-value(on-surface),\n  0.06\n) !default;\n$outlined-hover-border: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$textarea-border: rgba(theme-color.prop-value(on-surface), 0.73) !default;\n$textarea-background: rgba(theme-color.prop-value(surface), 1) !default;\n$textarea-disabled-border-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.26\n) !default;\n// cannot be transparent because multiline textarea input\n// will make text unreadable\n$textarea-disabled-background: rgba(249, 249, 249, 1) !default;\n\n$ripple-target: '.mdc-text-field__ripple';\n$outlined-stroke-width: 2px !default;\n$height: 56px !default;\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$padding-horizontal: 16px !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n$shape-radius: small !default;\n$label-position-y: floating-label-variables.$position-y !default;\n$label-offset: 16px !default;\n// TODO(b/154350788): Remove this variable, it's not used internally but it is\n// externally in Angular\n/// @deprecated this variable will be removed in the future.\n/// Use get-outlined-label-position-y($height) instead\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n$textarea-outlined-label-position-y: 24.75px !default; // visually ~4dp from top to baseline\n$textarea-filled-label-position-y: 10.25px !default; // visually ~20dp from top to label baseline\n$helper-line-padding: 16px !default;\n$filled-baseline-top: 40px !default;\n$input-height: 28px !default;\n$textarea-label-top: 19px !default; // visually ~32dp from top to label baseline\n$textarea-outlined-label-top: $textarea-label-top -\n  notched-outline-variables.$border-width !default;\n$textarea-line-height: 1.5rem !default; // 24dp from baseline to baseline\n$textarea-input-handle-margin: 1px !default;\n// Outlined textarea's first line should be placed at the same position as\n// outlined textfield, and should look identical if it is 1 row. Since textfield\n// is centered and font metrics vary for where the baseline is, the best way to\n// ensure textarea and textfield align is with padding. At 56px height with a\n// 24px line-height, a centered textfield has 16px of top and bottom padding.\n// Textarea should use this to position itself.\n$textarea-outlined-input-margin-top: 16px !default;\n$textarea-outlined-input-margin-bottom: 16px !default;\n$textarea-outlined-density-config: (\n  margin-top: (\n    default: $textarea-outlined-input-margin-top,\n    maximum: $textarea-outlined-input-margin-top,\n    minimum: $textarea-outlined-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-outlined-input-margin-bottom,\n    maximum: $textarea-outlined-input-margin-bottom,\n    minimum: $textarea-outlined-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-outlined-label-density-config: (\n  top: (\n    default: $textarea-outlined-label-top,\n    maximum: $textarea-outlined-label-top,\n    minimum: $textarea-outlined-label-top - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-filled-input-margin-top: 23px !default; // visually ~40dp from top to baseline\n$textarea-filled-input-margin-bottom: 9px !default; // visually ~16dp from baseline to bottom\n$textarea-filled-density-config: (\n  margin-bottom: (\n    default: $textarea-filled-input-margin-bottom,\n    maximum: $textarea-filled-input-margin-bottom,\n    minimum: $textarea-filled-input-margin-bottom - 4,\n  ),\n) !default; // scale to -1 for minimum\n$textarea-filled-label-density-config: (\n  top: (\n    default: $textarea-label-top,\n    maximum: $textarea-label-top,\n    minimum: $textarea-label-top - 2,\n  ),\n) !default; // remove 1/2 of scale to -1 for minimm\n$textarea-filled-no-label-input-margin-top: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-input-margin-bottom: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-density-config: (\n  margin-top: (\n    default: $textarea-filled-no-label-input-margin-top,\n    maximum: $textarea-filled-no-label-input-margin-top,\n    minimum: $textarea-filled-no-label-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-filled-no-label-input-margin-bottom,\n    maximum: $textarea-filled-no-label-input-margin-bottom,\n    minimum: $textarea-filled-no-label-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-internal-counter-input-margin-bottom: 2px !default; // visually ~20dp from baseline to counter baseline\n$textarea-internal-counter-baseline-bottom: 16px !default;\n// Note that the scale factor is an eyeballed approximation of what's shown in the mocks.\n\n$prefix-padding: 2px !default;\n$prefix-end-aligned-padding: 12px !default;\n$suffix-padding: 12px !default;\n$suffix-end-aligned-padding: 2px !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use './css';\n@use './custom-properties';\n@use './gss';\n@use './keys';\n@use './replace';\n@use './theme-color';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  :root {\n    @include feature-targeting.targets($feat-color) {\n      @each $style in theme-color.get-theme-keys() {\n        @include custom-properties.declaration(\n          keys.create-custom-property($style)\n        );\n      }\n    }\n  }\n\n  @each $style in theme-color.get-theme-keys() {\n    @if $style != 'background' and $style != 'surface' {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(color, $style, $important: true);\n        }\n      }\n    } @else {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(background-color, $style);\n        }\n      }\n    }\n  }\n\n  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n  @each $style in ('primary', 'secondary') {\n    .mdc-theme--#{$style}-bg {\n      @include feature-targeting.targets($feat-color) {\n        @include property(background-color, $style, $important: true);\n      }\n    }\n  }\n}\n\n/// Applies a dynamic value to the specified property. This mixin should be used\n/// in theme style mixins when setting properties.\n///\n/// The value may be any of the following:\n/// - a standard CSS value\n/// - a custom property Map, e.g. (varname: --mdc-foo, fallback: blue)\n/// - a Material theme key String, e.g. 'primary', 'on-primary'\n///\n/// @example\n///   @include theme.property(color, teal);\n///   @include theme.property(color, custom-properties.create(foo, blue));\n///   @include theme.property(color, primary);\n///\n/// A `$replace` Map parameter may be provided to replace key/value pairs for\n/// string values. This can be used to substitute parameters in complex string\n/// values such as `calc()` with custom properties.\n///\n/// @example\n///   @include theme.property(\n///     width,\n///     calc(foo + bar),\n///     $replace: (foo: custom-properties.create(foo), bar: 8px)\n///   );\n///\n/// Note: Material theme key Strings (e.g. `primary`) are not supported as\n/// replacement values.\n///\n/// A CSS custom property declaration may be emitted by providing a custom\n/// property Map to `$property`. The fallback value (or `$value` if provided)\n/// will be used as the declaration value.\n///\n/// @example - scss\n///   .foo {\n///     @include theme.property(custom-properties.create(foo, teal));\n///     @include theme.property(custom-properties.create(bar, teal), blue);\n///   }\n///\n/// @example - css\n///   .foo {\n///     --mdc-foo: teal;\n///     --mdc-bar: blue;\n///   }\n///\n/// @param {String | Map} $property - The name of the CSS property. May also be\n///     a custom property Map to emit a custom propery declaration.\n/// @param {String | Number | Color | List | Map} $value - The property's value.\n///     This parameter may be omitted if `$property` is a custom property Map.\n/// @param {Map} $gss - Optional Map of GSS annotations to set.\n/// @param {Map} $replace - An optional Map of replacement key/value pairs if\n///     the `$value` is a string.\n/// @param {Bool} $important - Set to true to add an `!important` rule. Defaults\n///     to false.\n@mixin property(\n  $property,\n  $value: null,\n  $gss: (),\n  $replace: null,\n  $important: false\n) {\n  @if custom-properties.is-custom-prop($property) {\n    // $property is a custom property Map\n    //   --mdc-foo: value;\n    @if $value {\n      $property: custom-properties.set-fallback(\n        $property,\n        $value,\n        $shallow: true\n      );\n    }\n\n    @include custom-properties.declaration(\n      $property,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else if custom-properties.is-custom-prop($value) {\n    // $value is a custom property Map\n    //   property: var(--mdc-foo, fallback);\n    @include custom-properties.declaration(\n      $property,\n      $value,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else if keys.is-key($value) {\n    // $value is a key String\n    //   property: key;\n    $custom-prop: keys.create-custom-property($value);\n\n    @if theme-color.is-theme-key($value) {\n      // Determine if we need to use a compile-time updated value to support\n      // Angular.\n      $key: $value;\n      // (changed: Bool, value: *)\n      $result: theme-color.deprecated-get-global-theme-key-value-if-changed(\n        $key\n      );\n\n      @if map.get($result, changed) {\n        // $mdc-theme-property-values was changed at compile time. Use the\n        // global value instead. Otherwise if it was not changed, continue\n        // using the key store normally.\n        $custom-prop: keys.create-custom-property($key);\n        $custom-prop: custom-properties.set-fallback(\n          $custom-prop,\n          map.get($result, value)\n        );\n      }\n    }\n\n    @include custom-properties.declaration(\n      $property,\n      $custom-prop,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else {\n    // $value is a standard CSS value\n    //   property: value;\n    $fallback: null;\n    @if $replace {\n      // If any replacements are null, treat the entire value as null (do not\n      // emit anything).\n      @each $name, $replacement in $replace {\n        @if $replacement == null {\n          $value: null;\n        }\n      }\n    }\n\n    @if $replace and $value {\n      @if meta.type-of($replace) != 'map' {\n        @error 'mdc-theme: Invalid replacement #{$replace}. Must be a Map.';\n      }\n\n      $replace-map-fallback: ();\n      $replace-map-value: ();\n      $needs-fallback: false;\n      @each $name, $replacement in $replace {\n        @if custom-properties.is-custom-prop($replacement) {\n          $replace-value: custom-properties.get-declaration-value($replacement);\n          $replace-fallback: custom-properties.get-declaration-fallback(\n            $replacement\n          );\n          @if $replace-fallback {\n            $needs-fallback: true;\n          }\n\n          $replace-map-value: map.set(\n            $replace-map-value,\n            $name,\n            $replace-value\n          );\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replace-fallback\n          );\n        } @else {\n          $replace-map-value: map.set($replace-map-value, $name, $replacement);\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replacement\n          );\n        }\n      }\n\n      @if meta.type-of($value) == 'string' {\n        @if $needs-fallback {\n          $fallback: replace.replace-string($value, $replace-map-fallback);\n        }\n        $value: replace.replace-string($value, $replace-map-value);\n      } @else if meta.type-of($value) == 'list' {\n        @if $needs-fallback {\n          $fallback: replace.replace-list($value, $replace-map-fallback);\n        }\n        $value: replace.replace-list($value, $replace-map-value);\n      } @else {\n        @error 'mdc-theme: Invalid replacement value #{$value}. $replace may only be used with string or list values.';\n      }\n    }\n\n    @include css.declaration(\n      $property,\n      $value,\n      $fallback-value: $fallback,\n      $gss: $gss,\n      $important: $important\n    );\n  }\n}\n\n// @deprecated use the `property()` mixin instead\n@mixin prop($property, $style, $important: false) {\n  @include property($property, $style, $important: $important);\n}\n\n/// Validates theme configuration keys by comparing it with original theme\n/// configuration, also validates theme values to see if it has any unsupported\n/// value formats.\n/// @param {Map} $origin-theme - Original theme configuration in Sass map format\n///     that has all supported keys.\n/// @param {Map} $custom-theme - Provided theme configuration in Sass map format\n///     that should be validated against `$origin-theme`.\n/// @examples\n///     @mixin theme($theme) {\n///       @include theme.validate-theme($light-theme, $theme);\n///\n///       // ...\n///     }\n@mixin validate-theme($origin-theme, $custom-theme, $test-only: false) {\n  @include validate-theme-keys(\n    $origin-theme,\n    $custom-theme,\n    $test-only: $test-only\n  );\n  @include _validate-theme-values($custom-theme, $test-only: $test-only);\n}\n\n/// Validates theme configuration keys by comparing it with original theme\n/// configuration.\n/// @see Use `validate-theme()` to validate both theme keys and theme values.\n/// @param {Map} $origin-theme - Original theme configuration in Sass map format\n///     that has all supported keys.\n/// @param {Map} $custom-theme - Provided theme configuration in Sass map format\n///     that should be validated against `$origin-theme`.\n@mixin validate-theme-keys($origin-theme, $custom-theme, $test-only: false) {\n  $origin-keys: map.keys($origin-theme);\n  $unsupported-keys: ();\n\n  @each $key, $value in $custom-theme {\n    @if (not list.index($origin-keys, $key)) {\n      $unsupported-keys: list.append(\n        $unsupported-keys,\n        $key,\n        $separator: comma\n      );\n    }\n  }\n\n  @if list.length($unsupported-keys) > 0 {\n    $error-message: 'Unsupported keys found: #{$unsupported-keys}. Expected one of: #{$origin-keys}.';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n}\n\n/// Validates theme configuration values to see if it has any unsupported value\n/// formats.\n/// @see Use `validate-theme()` to validate both theme keys and theme values.\n/// @param {Map} $custom-theme - Provided theme configuration in Sass map format\n///     that needs to be validated.\n@mixin _validate-theme-values($custom-theme, $test-only: false) {\n  $unsupported-custom-prop-keys: ();\n\n  @each $key, $value in $custom-theme {\n    $is-prop: custom-properties.is-custom-prop($value) or\n      custom-properties.is-custom-prop-string($value);\n    @if $is-prop {\n      $unsupported-custom-prop-keys: list.append(\n        $unsupported-custom-prop-keys,\n        $key,\n        $separator: comma\n      );\n    }\n  }\n\n  @if list.length($unsupported-custom-prop-keys) > 0 {\n    $error-message: 'Custom properties are not supported for theme map keys: #{$unsupported-custom-prop-keys}';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/css';\n@use '@material/theme/theme-color';\n\n$background-color: rgba(black, theme-color.text-emphasis(medium));\n$border-radius: small;\n$label-color: text-primary-on-dark;\n\n$enter-duration: 150ms;\n$exit-duration: 75ms;\n\n// Rich Tooltip variables\n$rich-background-color: theme-color.prop-value(surface);\n$rich-title-text-color: text-primary-on-light;\n$rich-content-text-color: rgba(black, theme-color.text-emphasis(medium));\n$rich-content-link-color: primary;\n\n// Use a custom property so IE11 does not use \"normal\" and instead uses provided\n// fall-back value.\n$word-break-custom-prop: custom-properties.create(\n  --mdc-tooltip-word-break,\n  normal\n);\n$word-break-default: custom-properties.create-var($word-break-custom-prop);\n$word-break-ie11-fallback: break-all;\n$z-index: 9;\n\n// Sets the border-radius for the tooltip element.\n// @param {Number | String} $radius Desired border radius value, accepts either\n//   a shape category or number value. $radius can be a singel value, or a\n//   list of up to 4 values.\n// @param {Boolean} $rtl-reflexive [false] If a rule should be created for a\n//    flipped $radius for a RTL layout.\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  .mdc-tooltip__surface {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n\n  .mdc-tooltip__caret-surface-top,\n  .mdc-tooltip__caret-surface-bottom {\n    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n  }\n}\n\n// Sets the word-break property for the tooltip label. Users of IE11 can\n// overwrite the fallback if their tooltip labels will never contain long\n// strings without spaces or hyphens.\n// @param {String} $value\n// @param {String} $fallbackValue A fallback value to be set for word-break.\n//    This can be used to cover IE11 which does not support\n//    \"overflow-wrap: anywhere\".\n@mixin word-break(\n  $value,\n  $fallbackValue: $word-break-ie11-fallback,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tooltip__surface {\n      @include css.declaration(\n        word-break,\n        $value,\n        $fallback-value: $fallbackValue\n      );\n      overflow-wrap: anywhere;\n    }\n  }\n}\n\n// Sets the color of the tooltip label.\n// @param {Color | String} $color\n@mixin label-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  @include feature-targeting.targets($feat-color) {\n    .mdc-tooltip__surface {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n// Sets the color of the text for the content inside a rich tooltip.\n// @param {Color | String} $title-color The color for the title of rich\n//   tooltips.\n// @param {Color | String} $content-color The color for the text in the content\n//   of rich tooltips.\n// @param {Color | String} $content-link-color The color for a link in the\n//   content of rich tooltips.\n@mixin rich-text-ink-color(\n  $title-color,\n  $content-color,\n  $content-link-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  @include feature-targeting.targets($feat-color) {\n    .mdc-tooltip__title {\n      @include theme.property(color, $title-color);\n    }\n\n    .mdc-tooltip__content {\n      @include theme.property(color, $content-color);\n    }\n\n    .mdc-tooltip__content-link {\n      @include theme.property(color, $content-link-color);\n    }\n  }\n}\n\n// Sets the fill/surface color of the tooltip.\n// @param {Color | String} $color\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-tooltip__surface {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n// Sets the fill/surface color of the rich tooltip.\n// @param {Color | String} $color\n@mixin rich-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  &.mdc-tooltip--rich {\n    .mdc-tooltip__surface {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n\n    .mdc-tooltip__caret-surface-top,\n    .mdc-tooltip__caret-surface-bottom {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n// Sets the max-height of the rich tooltip.\n// @param {Number} $max-height\n@mixin rich-max-height($max-height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-tooltip--rich {\n    .mdc-tooltip__surface {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(max-height, $max-height);\n      }\n    }\n  }\n}\n\n// Sets the z-index of the tooltip.\n// @param {Number} $z-index\n@mixin z-index($z-index, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tooltip {\n      z-index: $z-index;\n    }\n  }\n}\n\n// Sets the duration for the animation that shows the tooltip.\n// @param {Number} $enter-duration\n@mixin show-transition($enter-duration, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    .mdc-tooltip--showing-transition .mdc-tooltip__surface-animation {\n      transition: animation-functions.enter(opacity, $enter-duration),\n        animation-functions.enter(transform, $enter-duration);\n    }\n  }\n}\n\n// Sets the duration for the animation that hides the tooltip.\n// @param {Number} $exit-duration\n@mixin hide-transition($exit-duration, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    .mdc-tooltip--hide-transition .mdc-tooltip__surface-animation {\n      transition: animation-functions.exit-permanent(opacity, $exit-duration);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Tooltip MDC component.\n\n@use 'sass:math';\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl' as rtl;\n@use '@material/dom/mixins' as dom-mixins;\n@use './tooltip-theme';\n@use '@material/typography/typography';\n\n$_padding-y: 4px;\n$_padding-x: 8px;\n$_min-width: 40px;\n$_max-height: 40vh;\n//LINT.IfChange(tooltip-dimensions)\n$_max-width: 200px;\n$_min-height: 24px;\n// LINT.ThenChange(constants.ts:tooltip-dimensions)\n$_label-type-scale: caption;\n$_line-height: 16px;\n// LINT.IfChange(tooltip-anim-scale)\n$_animation-scale: 0.8;\n// LINT.ThenChange(constants.ts:tooltip-anim-scale);\n\n// Rich Tooltip variables\n$_rich_corner_radius: 4px;\n$_rich_line-height: 20px;\n$_rich_title_baseline: 28px;\n$_rich_max-width: 320px;\n$_content-margin: 8px;\n$_content-type-scale: body2;\n$_title-type-scale: subtitle2;\n$_caret-size: 24px;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tooltip-theme.shape-radius(\n    tooltip-theme.$border-radius,\n    $query: $query\n  );\n  @include tooltip-theme.label-ink-color(\n    tooltip-theme.$label-color,\n    $query: $query\n  );\n  @include tooltip-theme.fill-color(\n    tooltip-theme.$background-color,\n    $query: $query\n  );\n  @include tooltip-theme.word-break(\n    tooltip-theme.$word-break-default,\n    tooltip-theme.$word-break-ie11-fallback,\n    $query: $query\n  );\n  @include tooltip-theme.z-index(tooltip-theme.$z-index, $query: $query);\n  @include tooltip-theme.show-transition(\n    tooltip-theme.$enter-duration,\n    $query: $query\n  );\n  @include tooltip-theme.hide-transition(\n    tooltip-theme.$exit-duration,\n    $query: $query\n  );\n  @include tooltip-theme.rich-text-ink-color(\n    tooltip-theme.$rich-title-text-color,\n    tooltip-theme.$rich-content-text-color,\n    tooltip-theme.$rich-content-link-color,\n    $query: $query\n  );\n\n  .mdc-tooltip {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n      display: none;\n    }\n    @include tooltip-theme.rich-fill-color(\n      tooltip-theme.$rich-background-color,\n      $query: $query\n    );\n  }\n\n  .mdc-tooltip-wrapper--rich {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n    }\n  }\n\n  .mdc-tooltip--shown,\n  .mdc-tooltip--showing,\n  .mdc-tooltip--hide {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n\n    &.mdc-tooltip--rich {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        // Moves the rich tooltip out of the viewport/parent element initially\n        // so that the initial width is not affected and a 'correct' width can\n        // be used to calculate the position of the tooltip.\n        @include rtl.ignore-next-line();\n        left: -$_rich_max_width;\n        position: absolute;\n      }\n    }\n  }\n\n  .mdc-tooltip__surface {\n    &::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    @include typography.typography(\n      $_label-type-scale,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      line-height: $_line-height;\n      padding: $_padding-y $_padding-x;\n      min-width: $_min-width;\n      max-width: $_max-width;\n      min-height: $_min-height;\n      max-height: $_max-height;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: center;\n    }\n\n    .mdc-tooltip--rich & {\n      @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n      @include elevation-mixins.elevation(2, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        align-items: flex-start;\n        border-radius: $_rich_corner_radius;\n        display: flex;\n        flex-direction: column;\n        line-height: $_rich_line-height;\n        min-height: $_min-height;\n        min-width: $_min-width;\n        max-width: $_rich_max-width;\n        position: relative;\n      }\n    }\n\n    .mdc-tooltip--multiline & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          text-align: right;\n        }\n      }\n    }\n\n    .mdc-tooltip__title {\n      @include typography.text-baseline(\n        $top: $_rich_title_baseline - $_padding-y,\n        $lineHeight: $_rich_line-height,\n        $query: $query\n      );\n      @include typography.typography($_title-type-scale, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0 $_content-margin;\n      }\n    }\n\n    .mdc-tooltip__content {\n      @include typography.typography($_content-type-scale, $query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% - 2 * #{$_content-margin});\n        margin: $_content-margin;\n        @include rtl.ignore-next-line();\n        text-align: left;\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          text-align: right;\n        }\n      }\n    }\n\n    .mdc-tooltip__content-link {\n      @include feature-targeting.targets($feat-structure) {\n        text-decoration: none;\n      }\n    }\n  }\n\n  .mdc-tooltip--rich-actions {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 1;\n    }\n  }\n\n  .mdc-tooltip__surface-animation {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n      transform: scale($_animation-scale);\n      will-change: transform, opacity;\n    }\n\n    .mdc-tooltip--shown & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n\n    .mdc-tooltip--hide & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(1);\n      }\n    }\n  }\n\n  .mdc-tooltip__caret-surface-top,\n  .mdc-tooltip__caret-surface-bottom {\n    @include elevation-mixins.overlay-dimensions(100%, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      height: $_caret-size;\n      width: $_caret-size;\n      // We override this transform in MDCTooltipFoundation, however these\n      // styles must be present before the override happens in order to\n      // calculate the correct boundingClientRect (with the transforms applied).\n      transform: rotate(35deg) skewY(20deg) scaleX(math.cos(20deg));\n    }\n  }\n\n  .mdc-tooltip__caret-surface-bottom {\n    @include elevation-mixins.elevation(2, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      outline: 1px solid transparent;\n      z-index: -1;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/css';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n///\n/// Creates a box-shadow from the Material elevation system.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @param {Number} $opacity-boost [0] - optional opacity boost for the shadow.\n/// @return {List} the complete box shadow.\n///\n@function _box-shadow($level, $color, $opacity-boost: 0) {\n  $color: theme-color.prop-value($color);\n  $umbra-z-value: map.get($umbra-map, $level);\n  $penumbra-z-value: map.get($penumbra-map, $level);\n  $ambient-z-value: map.get($ambient-map, $level);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  @return (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  @return _box-shadow($z-value, $color, $opacity-boost);\n}\n\n///\n/// Returns a shadow or null if params are invalid.\n/// @param {Number} $level - the level of the Material elevation system.\n/// @param {String} $color - the color of the shadow.\n/// @return {List|null} the complete box shadow or null.\n///\n@function _shadow($level, $color) {\n  @if $level == null and $color == null {\n    // Do not emit a warning if both are null, which means the user did not\n    // provide tokens.\n    @return null;\n  }\n\n  @if $level == null or $color == null {\n    // If one of the tokens is null, emit a warning: the user may not realize\n    // that both are required.\n    @warn \"both $level and $color are required; received $level: '#{$level}', $color: '#{$color}'\";\n    @return null;\n  }\n\n  @if $level < 0 or $level > 24 {\n    @warn \"$level must be between 0 and 24; received '#{$level}'\";\n    @return null;\n  }\n\n  @return _box-shadow($level, $color);\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin _box-shadow($shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(box-shadow, $shadow);\n  }\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if custom-properties.is-custom-prop($box-shadow) {\n      // TODO(b/185188458): Use theme.property() once resolved.\n      $fallback: custom-properties.get-fallback($box-shadow);\n\n      // var(--<box-shadow-prop>, var(--m-elevation-box-shadow-for-gss))\n      $gss-custom-prop: custom-properties.create(\n        custom-properties.get-varname($box-shadow),\n        custom-properties.create(elevation-box-shadow-for-gss)\n      );\n\n      $value: custom-properties.create-var($gss-custom-prop);\n      @if $value == null {\n        // Custom properties are disabled, since $gss-custom-prop\n        // does not have a fallback. Avoid emitting two non-custom\n        // prop declarations by setting $fallback to null.\n        $value: $fallback;\n        $fallback: null;\n      }\n\n      @include css.declaration(box-shadow, $value, $fallback-value: $fallback);\n      @include custom-properties.declaration(\n        custom-properties.create(elevation-box-shadow-for-gss, $fallback)\n      );\n    } @else {\n      /* @alternate */\n      box-shadow: $box-shadow;\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        @include rtl.ignore-next-line();\n        left: 0;\n      } @else {\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Applies the given color to the container of the overlay.\n/// @param {color} $color - the color of the overlay container\n///\n@mixin _overlay-container-color($color, $query: feature-targeting.all()) {\n  .mdc-elevation-overlay {\n    @include overlay-fill-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n\n///\n/// Represents the configurable values of the elevation theme.\n///\n$_theme-values: (\n  shadow: null,\n  overlay-opacity: null,\n  overlay-color: null,\n);\n\n///\n/// Applies the shadow theme with the given $resolver function.\n/// @param {Function} $resolver - a function that returns a valid theme config.\n///   @see resolver for an example and expected arguments and return value.\n/// Accepts the following optional keyword args:\n/// @param {Number} $elevation - the level in the elevation system.\n/// @param {String} $shadow-color - the color used for the shadow.\n///\n@mixin with-resolver($resolver, $query: feature-targeting.all(), $args...) {\n  @if $resolver {\n    @include _theme(meta.call($resolver, $args...), $query: $query);\n  }\n}\n\n///\n/// Applies the given theme with validation.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin theme($theme: (), $query: feature-targeting.all()) {\n  @include theme.validate-theme($_theme-values, $theme);\n  @include _theme($theme, $query: $query);\n}\n\n///\n/// Applies the given theme.\n/// @param {Map} $theme - @see $_theme-values for accepted theme properties.\n///\n@mixin _theme($theme: (), $query: feature-targeting.all()) {\n  @include shadow(map.get($theme, shadow), $query: $query);\n  @include overlay-opacity(map.get($theme, overlay-opacity), $query: $query);\n  @include _overlay-container-color(\n    map.get($theme, overlay-color),\n    $query: $query\n  );\n}\n\n///\n/// Transforms the following optional parameters into a theme config.\n/// @param {Number} $elevation - the level of the elevation system in Material.\n/// @param {String} $shadow-color - the color to be used by the shadow.\n/// @return {Map} @see $_theme-values for accepted theme properties.\n///\n@function resolver($args...) {\n  $opts: meta.keywords($args);\n  $elevation: map.get($opts, elevation);\n  $shadow-color: map.get($opts, shadow-color);\n  @if custom-properties.is-custom-prop($elevation) {\n    @return _resolve-custom-props($elevation, $shadow-color);\n  }\n\n  @return (shadow: _shadow($elevation, $shadow-color));\n}\n\n@function _resolve-custom-props($elevation, $shadow-color) {\n  $fallback-dp: custom-properties.get-fallback($elevation);\n  $fallback-shadow-color: custom-properties.get-fallback($shadow-color);\n  $shadow: custom-properties.set-fallback(\n    $elevation,\n    _shadow($fallback-dp, $fallback-shadow-color)\n  );\n  @return (shadow: $shadow);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './mixins';\n@use './variables';\n\n// postcss-bem-linter: define top-app-bar\n.mdc-top-app-bar {\n  @include mixins.fill-color-accessible(primary);\n  @include mixins.icon-ink-color(on-primary);\n\n  display: flex;\n  position: fixed;\n  flex-direction: column;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 4;\n\n  &__row {\n    display: flex;\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: variables.$row-height;\n  }\n\n  &__section {\n    display: inline-flex;\n    flex: 1 1 auto;\n    align-items: center;\n    min-width: 0;\n    padding: variables.$section-vertical-padding\n      variables.$section-horizontal-padding;\n    z-index: 1;\n\n    &--align-start {\n      justify-content: flex-start;\n      order: -1;\n    }\n\n    &--align-end {\n      justify-content: flex-end;\n      order: 1;\n    }\n  }\n\n  &__title {\n    @include typography.typography(headline6);\n    @include rtl.reflexive-box(padding, left, variables.$title-left-padding);\n\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    z-index: 1;\n  }\n}\n\n@at-root {\n  @include mixins.short-shape-radius(24px);\n}\n\n.mdc-top-app-bar--short {\n  top: 0;\n  @include rtl.ignore-next-line();\n  right: auto;\n  @include rtl.ignore-next-line();\n  left: 0;\n  width: 100%;\n  transition: width 250ms animation-variables.$standard-curve-timing-function;\n\n  @include rtl.rtl {\n    @include rtl.ignore-next-line();\n    right: 0;\n    @include rtl.ignore-next-line();\n    left: auto;\n  }\n\n  .mdc-top-app-bar__row {\n    height: variables.$mobile-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: variables.$mobile-section-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    transition: opacity 200ms\n      animation-variables.$standard-curve-timing-function;\n    opacity: 1;\n  }\n}\n\n.mdc-top-app-bar--short-collapsed {\n  @include elevation-mixins.elevation(4);\n\n  width: variables.$short-collapsed-width;\n  transition: width 300ms animation-variables.$standard-curve-timing-function;\n\n  .mdc-top-app-bar__title {\n    display: none;\n  }\n\n  .mdc-top-app-bar__action-item {\n    transition: padding 150ms\n      animation-variables.$standard-curve-timing-function;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item {\n  width: variables.$short-collapsed-width * 2;\n\n  .mdc-top-app-bar__section--align-end {\n    @include rtl.reflexive-box(padding, right, 12px);\n  }\n}\n\n.mdc-top-app-bar--dense {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$dense-section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$dense-title-left-padding\n    );\n  }\n}\n\n.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$prominent-row-height;\n  }\n\n  .mdc-top-app-bar__title {\n    align-self: flex-end;\n    padding-bottom: variables.$prominent-title-bottom-padding;\n  }\n\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    align-self: flex-start;\n  }\n}\n\n// stylelint-disable-next-line plugin/selector-bem-pattern\n.mdc-top-app-bar--fixed {\n  transition: box-shadow 200ms linear;\n}\n\n.mdc-top-app-bar--fixed-scrolled {\n  @include elevation-mixins.elevation(4);\n\n  transition: box-shadow 200ms linear;\n}\n\n// Specific styles for dense and prominent styled top app bar\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-top-app-bar--dense.mdc-top-app-bar--prominent {\n  .mdc-top-app-bar__row {\n    height: variables.$dense-row-height * 2;\n  }\n\n  .mdc-top-app-bar__section {\n    padding: 0 variables.$section-horizontal-padding;\n  }\n\n  .mdc-top-app-bar__title {\n    @include rtl.reflexive-box(padding, left, variables.$title-left-padding);\n\n    padding-bottom: variables.$dense-prominent-title-bottom-padding;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n.mdc-top-app-bar--fixed-adjust {\n  padding-top: variables.$row-height;\n}\n\n.mdc-top-app-bar--dense-fixed-adjust {\n  padding-top: variables.$dense-row-height;\n}\n\n.mdc-top-app-bar--short-fixed-adjust {\n  padding-top: variables.$mobile-row-height;\n}\n\n.mdc-top-app-bar--prominent-fixed-adjust {\n  padding-top: variables.$prominent-row-height;\n}\n\n.mdc-top-app-bar--dense-prominent-fixed-adjust {\n  padding-top: variables.$dense-row-height * 2;\n}\n\n// Mobile Styles\n@include mixins.mobile-breakpoint_;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions';\n@use './variables';\n@use '@material/rtl/rtl';\n\n//\n// Public\n//\n\n@mixin ink-color($color) {\n  @include theme.property(color, $color);\n}\n\n@mixin fill-color($color) {\n  @include theme.property(background-color, $color);\n}\n\n@mixin fill-color-accessible($color) {\n  @include fill-color($color);\n  @include ink-color(theme-color.accessible-ink-color($color));\n}\n\n@mixin icon-ink-color($color) {\n  .mdc-top-app-bar__action-item,\n  .mdc-top-app-bar__navigation-icon {\n    @include theme.property(color, $color);\n    @include ripple-theme.states($color);\n  }\n}\n\n@mixin short-shape-radius($radius, $rtl-reflexive: true) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 1 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  }\n\n  $radius: 0 0 $radius 0;\n\n  $selector: if(\n    &,\n    '&.mdc-top-app-bar--short-collapsed',\n    '.mdc-top-app-bar--short-collapsed'\n  );\n\n  #{$selector} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: variables.$dense-row-height\n    );\n  }\n}\n\n//\n// Private\n//\n\n@mixin mobile-breakpoint_($mobile-breakpoint: variables.$mobile-breakpoint) {\n  @media (max-width: $mobile-breakpoint) {\n    .mdc-top-app-bar__row {\n      height: variables.$mobile-row-height;\n    }\n\n    .mdc-top-app-bar__section {\n      padding: variables.$mobile-section-padding;\n    }\n\n    .mdc-top-app-bar--short {\n      transition: width 200ms\n        animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-top-app-bar--short-collapsed {\n      transition: width 250ms\n        animation-variables.$standard-curve-timing-function;\n\n      .mdc-top-app-bar__section--align-end {\n        @include rtl.reflexive-box(\n          padding,\n          right,\n          variables.$short-collapsed-right-icon-padding\n        );\n      }\n    }\n\n    .mdc-top-app-bar--prominent {\n      .mdc-top-app-bar__title {\n        padding-bottom: variables.$prominent-mobile-title-bottom-padding;\n      }\n    }\n\n    .mdc-top-app-bar--fixed-adjust {\n      padding-top: variables.$mobile-row-height;\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Default styles\n$row-height: 64px !default;\n$title-left-padding: 20px !default;\n$section-vertical-padding: 8px !default;\n$section-horizontal-padding: 12px !default;\n\n$mobile-breakpoint: 599px !default;\n\n// Default mobile styles\n$mobile-row-height: 56px !default;\n$mobile-section-padding: 4px !default;\n\n// Short top app bar\n$short-collapsed-border-radius: 4px !default;\n$short-collapsed-width: 56px !default;\n$short-collapsed-right-icon-padding: 12px !default;\n\n// Prominent styles\n$prominent-row-height: 128px !default;\n$prominent-title-bottom-padding: 2px !default;\n\n// Prominent mobile styles\n$prominent-mobile-title-bottom-padding: 6px !default;\n\n// Dense styles\n$dense-row-height: 48px !default;\n$dense-section-horizontal-padding: 4px !default;\n$dense-title-left-padding: 12px !default;\n\n// Dense & Prominent styles\n$dense-prominent-title-bottom-padding: 9px !default;\n"],"names":[],"version":3,"file":"tropicbird.css.map"}